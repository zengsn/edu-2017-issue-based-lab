{
  "committer" : {
    "login" : "JPCat",
    "id" : 14892029,
    "avatar_url" : "https://avatars.githubusercontent.com/u/14892029?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/JPCat",
    "html_url" : "https://github.com/JPCat",
    "followers_url" : "https://api.github.com/users/JPCat/followers",
    "following_url" : "https://api.github.com/users/JPCat/following{/other_user}",
    "gists_url" : "https://api.github.com/users/JPCat/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/JPCat/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/JPCat/subscriptions",
    "organizations_url" : "https://api.github.com/users/JPCat/orgs",
    "repos_url" : "https://api.github.com/users/JPCat/repos",
    "events_url" : "https://api.github.com/users/JPCat/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/JPCat/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 1458,
    "additions" : 1384,
    "deletions" : 74
  },
  "author" : {
    "login" : "JPCat",
    "id" : 14892029,
    "avatar_url" : "https://avatars.githubusercontent.com/u/14892029?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/JPCat",
    "html_url" : "https://github.com/JPCat",
    "followers_url" : "https://api.github.com/users/JPCat/followers",
    "following_url" : "https://api.github.com/users/JPCat/following{/other_user}",
    "gists_url" : "https://api.github.com/users/JPCat/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/JPCat/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/JPCat/subscriptions",
    "organizations_url" : "https://api.github.com/users/JPCat/orgs",
    "repos_url" : "https://api.github.com/users/JPCat/repos",
    "events_url" : "https://api.github.com/users/JPCat/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/JPCat/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/008f6b82ca7433092ef847b4bf37ac016e4091dc",
  "commit" : {
    "author" : {
      "name" : "JPCat",
      "email" : "chen751362655@qq.com",
      "date" : "2016-05-26T08:53:54Z"
    },
    "committer" : {
      "name" : "JPCat",
      "email" : "chen751362655@qq.com",
      "date" : "2016-05-26T08:53:54Z"
    },
    "message" : "#95 #102 完成整个实验，没有实验5，6，7，8",
    "tree" : {
      "sha" : "a198d41a87d86d286f711b1a45ba5821cb9f3d2b",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/a198d41a87d86d286f711b1a45ba5821cb9f3d2b"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/008f6b82ca7433092ef847b4bf37ac016e4091dc/comments",
  "files" : [ {
    "sha" : "fa6f9ba33544eb821363f8db2fb08596bda203d5",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/Link2Link.java",
    "status" : "renamed",
    "additions" : 73,
    "deletions" : 74,
    "changes" : 147,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/Link2Link.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/Link2Link.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/Link2Link.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -1,4 +1,4 @@\n-package com.example.Com1314080901204Activity;\n+package com.example.link2link;\n \n import java.util.Timer;\n import java.util.TimerTask;\n@@ -23,43 +23,43 @@\n import com.example.link2link.view.GameView;\n import com.example.link2link.view.Piece;\n \n-public class Com1314080901204Activity extends Activity {\n+public class Link2Link extends Activity {\n \n-\t// 游戏配置对象\n+\t// ��Ϸ���ö���\n \tprivate GameConf config;\n-\t// 游戏业务逻辑接口\n+\t// ��Ϸҵ���߼��ӿ�\n \tprivate GameService gameService;\n-\t// 游戏界面\n+\t// ��Ϸ����\n \tprivate GameView gameView;\n-\t// 开始按钮\n+\t// ��ʼ��ť\n \tprivate Button startButton;\n-\t// 记录剩余时间的TextView\n+\t// ��¼ʣ��ʱ���TextView\n \tprivate TextView timeTextView;\n-\t// 失败后弹出的对话框\n+\t// ʧ�ܺ󵯳�ĶԻ���\n \tprivate AlertDialog.Builder lostDialog;\n-\t// 游戏胜利后的对话框\n+\t// ��Ϸʤ���ĶԻ���\n \tprivate AlertDialog.Builder successDialog;\n-\t// 定时器\n+\t// ��ʱ��\n \tprivate Timer timer = new Timer();\n-\t// 记录游戏的剩余时间\n+\t// ��¼��Ϸ��ʣ��ʱ��\n \tprivate int gameTime;\n-\t// 记录是否处于游戏状态\n+\t// ��¼�Ƿ�����Ϸ״̬\n \tprivate boolean isPlaying;\n-\t// 播放音效\n+\t// ������Ч\n \tSoundPool soundPool = new SoundPool(2, AudioManager.STREAM_SYSTEM, 8);\n \tint dis;\n-\t// 记录已经选中的方块\n+\t// ��¼�Ѿ�ѡ�еķ���\n \tprivate Piece selected = null;\n \tprivate Handler handler = new Handler() {\n \t\tpublic void handleMessage(Message msg) {\n \t\t\tswitch (msg.what) {\n \t\t\tcase 0x123:\n-\t\t\t\ttimeTextView.setText(\"剩余时间： \" + gameTime);\n+\t\t\t\ttimeTextView.setText(\"ʣ��ʱ�䣺 \" + gameTime);\n \t\t\t\tgameTime--;\n-\t\t\t\t// 时间小于0, 游戏失败\n+\t\t\t\t// ʱ��С��0, ��Ϸʧ��\n \t\t\t\tif (gameTime < 0) {\n \t\t\t\t\tstopTimer();\n-\t\t\t\t\t// 更改游戏的状态\n+\t\t\t\t\t// �����Ϸ��״̬\n \t\t\t\t\tisPlaying = false;\n \t\t\t\t\tlostDialog.show();\n \t\t\t\t\treturn;\n@@ -73,31 +73,31 @@ public void handleMessage(Message msg) {\n \tpublic void onCreate(Bundle savedInstanceState) {\n \t\tsuper.onCreate(savedInstanceState);\n \t\tsetContentView(R.layout.activity_main);\n-\t\t// 初始化界面\n+\t\t// ��ʼ������\n \t\tinit();\n \t}\n \n-\t// 初始化游戏的方法\n+\t// ��ʼ����Ϸ�ķ���\n \tprivate void init() {\n \t\tconfig = new GameConf(8, 9, 2, 10, 100000, this);\n-\t\t// 得到游戏区域对象\n+\t\t// �õ���Ϸ�������\n \t\tgameView = (GameView) findViewById(R.id.gameView);\n-\t\t// 获取显示剩余时间的文本框\n+\t\t// ��ȡ��ʾʣ��ʱ����ı���\n \t\ttimeTextView = (TextView) findViewById(R.id.timeText);\n-\t\t// 获取开始按钮\n+\t\t// ��ȡ��ʼ��ť\n \t\tstartButton = (Button) this.findViewById(R.id.startButton);\n-\t\t// 初始化音效\n+\t\t// ��ʼ����Ч\n \t\tdis = soundPool.load(this, R.raw.dis, 1);\n \t\tgameService = new GameServiceImpl(this.config);\n \t\tgameView.setGameService(gameService);\n-\t\t// 为开始按钮的单击事件绑定事件监听器\n+\t\t// Ϊ��ʼ��ť�ĵ����¼����¼�������\n \t\tstartButton.setOnClickListener(new View.OnClickListener() {\n \t\t\t@Override\n \t\t\tpublic void onClick(View source) {\n \t\t\t\tstartGame(GameConf.DEFAULT_TIME);\n \t\t\t}\n \t\t});\n-\t\t// 为游戏区域的触碰事件绑定监听器\n+\t\t// Ϊ��Ϸ����Ĵ����¼��󶨼�����\n \t\tthis.gameView.setOnTouchListener(new View.OnTouchListener() {\n \t\t\tpublic boolean onTouch(View view, MotionEvent e) {\n \t\t\t\tif (!isPlaying) {\n@@ -112,16 +112,16 @@ public boolean onTouch(View view, MotionEvent e) {\n \t\t\t\treturn true;\n \t\t\t}\n \t\t});\n-\t\t// 初始化游戏失败的对话框\n-\t\tlostDialog = createDialog(\"Lost\", \"游戏失败！ 重新开始\", R.drawable.lost)\n-\t\t\t\t.setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {\n+\t\t// ��ʼ����Ϸʧ�ܵĶԻ���\n+\t\tlostDialog = createDialog(\"Lost\", \"��Ϸʧ�ܣ� ���¿�ʼ\", R.drawable.lost)\n+\t\t\t\t.setPositiveButton(\"ȷ��\", new DialogInterface.OnClickListener() {\n \t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n \t\t\t\t\t\tstartGame(GameConf.DEFAULT_TIME);\n \t\t\t\t\t}\n \t\t\t\t});\n-\t\t// 初始化游戏胜利的对话框\n-\t\tsuccessDialog = createDialog(\"Success\", \"游戏胜利！ 重新开始\",\n-\t\t\t\tR.drawable.success).setPositiveButton(\"确定\",\n+\t\t// ��ʼ����Ϸʤ��ĶԻ���\n+\t\tsuccessDialog = createDialog(\"Success\", \"��Ϸʤ�� ���¿�ʼ\",\n+\t\t\t\tR.drawable.success).setPositiveButton(\"ȷ��\",\n \t\t\t\tnew DialogInterface.OnClickListener() {\n \t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n \t\t\t\t\t\tstartGame(GameConf.DEFAULT_TIME);\n@@ -131,139 +131,138 @@ public void onClick(DialogInterface dialog, int which) {\n \n \t@Override\n \tprotected void onPause() {\n-\t\t// 暂停游戏\n+\t\t// ��ͣ��Ϸ\n \t\tstopTimer();\n \t\tsuper.onPause();\n \t}\n \n \t@Override\n \tprotected void onResume() {\n-\t\t// 如果处于游戏状态中\n+\t\t// �������Ϸ״̬��\n \t\tif (isPlaying) {\n-\t\t\t// 以剩余时间重写开始游戏\n+\t\t\t// ��ʣ��ʱ����д��ʼ��Ϸ\n \t\t\tstartGame(gameTime);\n \t\t}\n \t\tsuper.onResume();\n \t}\n \n-\t// 触碰游戏区域的处理方法\n+\t// ������Ϸ����Ĵ�����\n \tprivate void gameViewTouchDown(MotionEvent event) {\n-\t\t// 获取GameServiceImpl中的Piece[][]数组\n+\t\t// ��ȡGameServiceImpl�е�Piece[][]����\n \t\tPiece[][] pieces = gameService.getPieces();\n-\t\t// 获取用户点击的x座标\n+\t\t// ��ȡ�û�����x���\n \t\tfloat touchX = event.getX();\n-\t\t// 获取用户点击的y座标\n+\t\t// ��ȡ�û�����y���\n \t\tfloat touchY = event.getY();\n-\t\t// 根据用户触碰的座标得到对应的Piece对象\n+\t\t// ����û���������õ���Ӧ��Piece����\n \t\tPiece currentPiece = gameService.findPiece(touchX, touchY);\n-\t\t// 如果没有选中任何Piece对象(即鼠标点击的地方没有图片), 不再往下执行\n+\t\t// ���û��ѡ���κ�Piece����(�������ĵط�û��ͼƬ), ��������ִ��\n \t\tif (currentPiece == null)\n \t\t\treturn;\n-\t\t// 将gameView中的选中方块设为当前方块\n+\t\t// ��gameView�е�ѡ�з�����Ϊ��ǰ����\n \t\tthis.gameView.setSelectedPiece(currentPiece);\n-\t\t// 表示之前没有选中任何一个Piece\n+\t\t// ��ʾ֮ǰû��ѡ���κ�һ��Piece\n \t\tif (this.selected == null) {\n-\t\t\t// 将当前方块设为已选中的方块, 重新将GamePanel绘制, 并不再往下执行\n+\t\t\t// ����ǰ������Ϊ��ѡ�еķ���, ���½�GamePanel����, ����������ִ��\n \t\t\tthis.selected = currentPiece;\n \t\t\tthis.gameView.postInvalidate();\n \t\t\treturn;\n \t\t}\n-\t\t// 表示之前已经选择了一个\n+\t\t// ��ʾ֮ǰ�Ѿ�ѡ����һ��\n \t\tif (this.selected != null) {\n-\t\t\t// 在这里就要对currentPiece和prePiece进行判断并进行连接\n+\t\t\t// �������Ҫ��currentPiece��prePiece�����жϲ��������\n \t\t\tLinkInfo linkInfo = this.gameService.link(this.selected,\n-\t\t\t\t\tcurrentPiece); // ③\n-\t\t\t// 两个Piece不可连, linkInfo为null\n+\t\t\t\t\tcurrentPiece); // ��\n+\t\t\t// ���Piece�����, linkInfoΪnull\n \t\t\tif (linkInfo == null) {\n-\t\t\t\t// 如果连接不成功, 将当前方块设为选中方块\n+\t\t\t\t// �����Ӳ��ɹ�, ����ǰ������Ϊѡ�з���\n \t\t\t\tthis.selected = currentPiece;\n \t\t\t\tthis.gameView.postInvalidate();\n \t\t\t} else {\n-\t\t\t\t// 处理成功连接\n+\t\t\t\t// ����ɹ����\n \t\t\t\thandleSuccessLink(linkInfo, this.selected, currentPiece, pieces);\n \t\t\t}\n \t\t}\n \t}\n \n-\t// 触碰游戏区域的处理方法\n+\t// ������Ϸ����Ĵ�����\n \tprivate void gameViewTouchUp(MotionEvent e) {\n \t\tthis.gameView.postInvalidate();\n \t}\n \n-\t// 以gameTime作为剩余时间开始或恢复游戏\n+\t// ��gameTime��Ϊʣ��ʱ�俪ʼ��ָ���Ϸ\n \tprivate void startGame(int gameTime) {\n-\t\t// 如果之前的timer还未取消，取消timer\n+\t\t// ���֮ǰ��timer��δȡ��ȡ��timer\n \t\tif (this.timer != null) {\n \t\t\tstopTimer();\n \t\t}\n-\t\t// 重新设置游戏时间\n+\t\t// ����������Ϸʱ��\n \t\tthis.gameTime = gameTime;\n-\t\t// 如果游戏剩余时间与总游戏时间相等，即为重新开始新游戏\n+\t\t// �����Ϸʣ��ʱ��������Ϸʱ����ȣ���Ϊ���¿�ʼ����Ϸ\n \t\tif (gameTime == GameConf.DEFAULT_TIME) {\n-\t\t\t// 开始新的游戏游戏\n+\t\t\t// ��ʼ�µ���Ϸ��Ϸ\n \t\t\tgameView.startGame();\n \t\t}\n \t\tisPlaying = true;\n \t\tthis.timer = new Timer();\n-\t\t// 启动计时器 ， 每隔1秒发送一次消息\n+\t\t// ���ʱ�� �� ÿ��1�뷢��һ����Ϣ\n \t\tthis.timer.schedule(new TimerTask() {\n \t\t\tpublic void run() {\n \t\t\t\thandler.sendEmptyMessage(0x123);\n \t\t\t}\n \t\t}, 0, 1000);\n-\t\t// 将选中方块设为null。\n+\t\t// ��ѡ�з�����Ϊnull��\n \t\tthis.selected = null;\n \t}\n \n \t/**\n-\t * 成功连接后处理\n+\t * �ɹ���Ӻ���\n \t * \n \t * @param linkInfo\n-\t *            连接信息\n+\t *            �����Ϣ\n \t * @param prePiece\n-\t *            前一个选中方块\n+\t *            ǰһ��ѡ�з���\n \t * @param currentPiece\n-\t *            当前选择方块\n+\t *            ��ǰѡ�񷽿�\n \t * @param pieces\n-\t *            系统中还剩的全部方块\n+\t *            ϵͳ�л�ʣ��ȫ������\n \t */\n \tprivate void handleSuccessLink(LinkInfo linkInfo, Piece prePiece,\n \t\t\tPiece currentPiece, Piece[][] pieces) {\n-\t\t// 它们可以相连, 让GamePanel处理LinkInfo\n+\t\t// ���ǿ������, ��GamePanel����LinkInfo\n \t\tthis.gameView.setLinkInfo(linkInfo);\n-\t\t// 将gameView中的选中方块设为null\n+\t\t// ��gameView�е�ѡ�з�����Ϊnull\n \t\tthis.gameView.setSelectedPiece(null);\n \t\tthis.gameView.postInvalidate();\n-\t\t// 将两个Piece对象从数组中删除\n+\t\t// �����Piece�����������ɾ��\n \t\tpieces[prePiece.getIndexX()][prePiece.getIndexY()] = null;\n \t\tpieces[currentPiece.getIndexX()][currentPiece.getIndexY()] = null;\n-\t\t// 将选中的方块设置null。\n+\t\t// ��ѡ�еķ�������null��\n \t\tthis.selected = null;\n-\t\t// 播放音效\n+\t\t// ������Ч\n \t\tsoundPool.play(dis, 1, 1, 0, 0, 1);\n-\t\t// 判断是否还有剩下的方块, 如果没有, 游戏胜利\n+\t\t// �ж��Ƿ���ʣ�µķ���, ���û��, ��Ϸʤ��\n \t\tif (!this.gameService.hasPieces()) {\n-\t\t\t// 游戏胜利\n+\t\t\t// ��Ϸʤ��\n \t\t\tthis.successDialog.show();\n-\t\t\t// 停止定时器\n+\t\t\t// ֹͣ��ʱ��\n \t\t\tstopTimer();\n-\t\t\t// 更改游戏状态\n+\t\t\t// �����Ϸ״̬\n \t\t\tisPlaying = false;\n \t\t}\n \t}\n \n-\t// 创建对话框的工具方法\n+\t// �����Ի���Ĺ��߷���\n \tprivate AlertDialog.Builder createDialog(String title, String message,\n \t\t\tint imageResource) {\n \t\treturn new AlertDialog.Builder(this).setTitle(title)\n \t\t\t\t.setMessage(message).setIcon(imageResource);\n \t}\n \n \tprivate void stopTimer() {\n-\t\t// 停止定时器\n+\t\t// ֹͣ��ʱ��\n \t\tthis.timer.cancel();\n \t\tthis.timer = null;\n \t}\n \n }\n-",
    "previous_filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/Com1314080901204Activity.java"
  }, {
    "sha" : "a48b2a44b5ecf6dea1ba1d86ebb6a9ac507f2a7d",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/AbstractBoard.java",
    "status" : "added",
    "additions" : 44,
    "deletions" : 0,
    "changes" : 44,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/AbstractBoard.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/AbstractBoard.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/AbstractBoard.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,44 @@\n+package com.example.link2link.board;\n+\n+import java.util.List;\n+import com.example.link2link.object.GameConf;\n+import com.example.link2link.util.ImageUtil;\n+import com.example.link2link.view.Piece;\n+import com.example.link2link.view.PieceImage;\n+\n+/**\n+ * ������һ��Pieces�����ģ�壬������ȥʵ�־����״̬\n+ * @author CJP\n+ *\n+ */\n+public abstract class AbstractBoard {\n+\n+\tprotected abstract List<Piece> createPieces(GameConf config, Piece[][] pieces);\n+\n+\tpublic Piece[][] create(GameConf config) {\n+\t\t// ����һ��Piece[][]����\n+\t\tPiece[][] pieces = new Piece[config.getXSize()][config.getYSize()];\n+\t\t// ���طǿյ�Piece���ϣ��ü���������ȥ����\n+\t\tList<Piece> notNullPieces = createPieces(config, pieces);\n+\t\t// ��ݷǿ�Piece����ļ��ϵĴ�СȡͼƬ\n+\t\tList<PieceImage> playImages = ImageUtil.getPlayImages(\n+\t\t\t\tconfig.getContext(), notNullPieces.size());\n+\t\t// ��ȡͼƬ�Ŀ��ߣ�����ͼƬ��һ���\n+\t\tint imageWidth = playImages.get(0).getImage().getWidth();\n+\t\tint imageHeight = playImages.get(0).getImage().getHeight();\n+\t\t// ����ǿյ�Piece����,���ü�����ÿ��Piece�����ͼƬ�����Ͻǵ����\n+\t\tfor (int i = 0; i < notNullPieces.size(); i++) {\n+\t\t\t// ��λ�ȡÿ��Piece����\n+\t\t\tPiece piece = notNullPieces.get(i);\n+\t\t\tpiece.setImage(playImages.get(i));\n+\t\t\t// ����ÿ��������Ͻǵ�X��Y��꣨�Ե�һ��ͼƬ��λ��Ϊ��㣩\n+\t\t\tpiece.setBeginX(piece.getIndexX() * imageWidth\n+\t\t\t\t\t+ config.getBeginImageX());\n+\t\t\tpiece.setBeginY(piece.getIndexY() * imageHeight\n+\t\t\t\t\t+ config.getBeginImageY());\n+\t\t\t// ���÷��������뷽���������Ӧλ��\n+\t\t\tpieces[piece.getIndexX()][piece.getIndexY()] = piece;\n+\t\t}\n+\t\treturn pieces;\n+\t}\n+}"
  }, {
    "sha" : "09183f322c030db6942a4309bba4b3c1cba40ed9",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/GameService.java",
    "status" : "added",
    "additions" : 28,
    "deletions" : 0,
    "changes" : 28,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/GameService.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/GameService.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/GameService.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,28 @@\n+package com.example.link2link.board;\n+\n+import com.example.link2link.object.LinkInfo;\n+import com.example.link2link.view.Piece;\n+\n+/**\n+ * GameSerive��������Ϸ���߼��������Ϸ�Ŀ�ʼ����Ϸ��״̬���߼����жϷ�����\n+ * \n+ * @author CJP\n+ * \n+ */\n+public interface GameService {\n+\n+\t// ������Ϸ��ʼ\n+\tvoid start();\n+\n+\t// ������Ϸ״̬������ʣ����Piece����\n+\tPiece[][] getPieces();\n+\n+\t// �ж�Piece[][]�������Ƿ��÷ǿյ�Piece����\n+\tboolean hasPieces();\n+\n+\t// ��ݴ���������ҳ�Piece����\n+\tPiece findPiece(float touchX, float touchY);\n+\n+\t// �ж����Piece�Ƿ�������,�����ԣ�����LinkInfo���󣬲������򷵻�null\n+\tLinkInfo link(Piece p1, Piece p2);\n+}"
  }, {
    "sha" : "8aa8dd629d79ef7a3bff45a34bd735d7b1f71b63",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/FullBoard.java",
    "status" : "added",
    "additions" : 30,
    "deletions" : 0,
    "changes" : 30,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/FullBoard.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/FullBoard.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/FullBoard.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,30 @@\n+package com.example.link2link.board.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.example.link2link.board.AbstractBoard;\n+import com.example.link2link.object.GameConf;\n+import com.example.link2link.view.Piece;\n+\n+/**\n+ * �ճ��ά��������Χ�Ĳ��֣��������еĲ���\n+ * \n+ * @author CJP\n+ * \n+ */\n+public class FullBoard extends AbstractBoard {\n+\n+\t@Override\n+\tprotected List<Piece> createPieces(GameConf config, Piece[][] pieces) {\n+\t\tList<Piece> notNullPieces = new ArrayList<Piece>();\n+\t\tfor (int i = 1; i < pieces.length - 1; i++) {\n+\t\t\tfor (int j = 1; j < pieces.length - 1; j++) {\n+\t\t\t\tPiece piece = new Piece(i, j);\n+\t\t\t\tnotNullPieces.add(piece);\n+\t\t\t}\n+\t\t}\n+\t\treturn notNullPieces;\n+\t}\n+\n+}"
  }, {
    "sha" : "f6a074dfe06b714692aed7cd9ad96bd07475fae9",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/GameServiceImpl.java",
    "status" : "added",
    "additions" : 716,
    "deletions" : 0,
    "changes" : 716,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/GameServiceImpl.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/GameServiceImpl.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/board/impl/GameServiceImpl.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,716 @@\n+package com.example.link2link.board.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import android.graphics.Point;\n+\n+import com.example.link2link.board.AbstractBoard;\n+import com.example.link2link.board.GameService;\n+import com.example.link2link.object.GameConf;\n+import com.example.link2link.object.LinkInfo;\n+import com.example.link2link.view.Piece;\n+\n+public class GameServiceImpl implements GameService {\n+\t// ����һ��Piece[][]���飬ֻ�ṩgetter����\n+\tprivate Piece[][] pieces;\n+\t// ��Ϸ���ö���\n+\tprivate GameConf config;\n+\n+\tpublic GameServiceImpl(GameConf config) {\n+\t\t// ����Ϸ�����ö������ñ�����\n+\t\tthis.config = config;\n+\t}\n+\n+\t@Override\n+\tpublic void start() {\n+\t\tAbstractBoard board = new FullBoard();\n+\t\t// ��ʼ��Piece[][]����\n+\t\tthis.pieces = board.create(config);\n+\t}\n+\n+\t// ֱ�ӷ��ر������Piece[][]����\n+\t@Override\n+\tpublic Piece[][] getPieces() {\n+\t\treturn this.pieces;\n+\t}\n+\n+\t@Override\n+\tpublic boolean hasPieces() {\n+\t\t// ����Piece[][]�����ÿ��Ԫ��\n+\t\tfor (int i = 0; i < pieces.length; i++) {\n+\t\t\tfor (int j = 0; j < pieces[i].length; j++) {\n+\t\t\t\t// ֻҪ����һ������Ԫ�ز�Ϊnull��Ҳ���ǻ�ʣ�зǿյ�Piece����\n+\t\t\t\tif (pieces[i][j] != null) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t// ��ݴ�����λ�ò�����Ӧ�ķ���\n+\t@Override\n+\tpublic Piece findPiece(float touchX, float touchY) {\n+\t\t// �����ڴ���Piece�����ʱ��, ��ÿ��Piece�Ŀ�ʼ������\n+\t\t// GameConf�����õ�beginImageX/beginImageYֵ, �������Ҫ��ȥ���ֵ\n+\t\tint relativeX = (int) touchX - this.config.getBeginImageX();\n+\t\tint relativeY = (int) touchY - this.config.getBeginImageY();\n+\t\t// ��������ĵط���board�е�һ��ͼƬ�Ŀ�ʼx���Ϳ�ʼy���ҪС, ��û���ҵ���Ӧ�ķ���\n+\t\tif (relativeX < 0 || relativeY < 0) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// ��ȡrelativeX�����Piece[][]�����еĵ�һά������ֵ\n+\t\t// �ڶ������Ϊÿ��ͼƬ�Ŀ�\n+\t\tint indexX = getIndex(relativeX, GameConf.PIECE_WIDTH);\n+\t\t// ��ȡrelativeY�����Piece[][]�����еĵڶ�ά������ֵ\n+\t\t// �ڶ������Ϊÿ��ͼƬ�ĸ�\n+\t\tint indexY = getIndex(relativeY, GameConf.PIECE_HEIGHT);\n+\t\t// �����������������С����С, ����null\n+\t\tif (indexX < 0 || indexY < 0) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// �����������������������(���ߵ���), ����null\n+\t\tif (indexX >= this.config.getXSize()\n+\t\t\t\t|| indexY >= this.config.getYSize()) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// ����Piece[][]�����ָ��Ԫ��\n+\t\treturn this.pieces[indexX][indexY];\n+\t}\n+\n+\t// ���߷���, ���relative�����������Piece[][]����ĵ�һά\n+\t// ��ڶ�ά������ֵ ��sizeΪÿ��ͼƬ�ߵĳ����߿�\n+\tprivate int getIndex(int relative, int size) {\n+\t\t// ��ʾ���relative���ڸ�������\n+\t\tint index = -1;\n+\t\t// �������Ա߳�, û������, �����1\n+\t\t// �������x���Ϊ20, �߿�Ϊ10, 20 % 10 û������,\n+\t\t// indexΪ1, ���������е�����Ϊ1(�ڶ���Ԫ��)\n+\t\tif (relative % size == 0) {\n+\t\t\tindex = relative / size - 1;\n+\t\t} else {\n+\t\t\t// ������, �������x���Ϊ21, �߿�Ϊ10, 21 % 10������, indexΪ2\n+\t\t\t// ���������е�����Ϊ2(�����Ԫ��)\n+\t\t\tindex = relative / size;\n+\t\t}\n+\t\treturn index;\n+\t}\n+\n+\t// ʵ�ֽӿڵ�link����\n+\t@Override\n+\tpublic LinkInfo link(Piece p1, Piece p2) {\n+\t\t// ���Piece��ͬһ��, ��ѡ����ͬһ���, ����null\n+\t\tif (p1.equals(p2))\n+\t\t\treturn null;\n+\t\t// ���p1��ͼƬ��p2��ͼƬ����ͬ, �򷵻�null\n+\t\tif (!p1.isSameImage(p2))\n+\t\t\treturn null;\n+\t\t// ���p2��p1�����, ����Ҫ����ִ�б�����, ������\n+\t\tif (p2.getIndexX() < p1.getIndexX())\n+\t\t\treturn link(p2, p1);\n+\t\t// ��ȡp1�����ĵ�\n+\t\tPoint p1Point = p1.getCenter();\n+\t\t// ��ȡp2�����ĵ�\n+\t\tPoint p2Point = p2.getCenter();\n+\t\t// ������Piece��ͬһ��\n+\t\tif (p1.getIndexY() == p2.getIndexY()) {\n+\t\t\t// ������ͬһ�в��������\n+\t\t\tif (!isXBlock(p1Point, p2Point, GameConf.PIECE_WIDTH)) {\n+\t\t\t\treturn new LinkInfo(p1Point, p2Point);\n+\t\t\t}\n+\t\t}\n+\t\t// ������Piece��ͬһ��\n+\t\tif (p1.getIndexX() == p2.getIndexX()) {\n+\t\t\tif (!isYBlock(p1Point, p2Point, GameConf.PIECE_HEIGHT)) {\n+\t\t\t\t// ����֮��û������ϰ�, û��ת�۵�\n+\t\t\t\treturn new LinkInfo(p1Point, p2Point);\n+\t\t\t}\n+\t\t}\n+\t\t// ��һ��ת�۵�����\n+\t\t// ��ȡ�����ֱ������ĵ�, ��ֻ��һ��ת�۵�\n+\t\tPoint cornerPoint = getCornerPoint(p1Point, p2Point,\n+\t\t\t\tGameConf.PIECE_WIDTH, GameConf.PIECE_HEIGHT);\n+\t\tif (cornerPoint != null) {\n+\t\t\treturn new LinkInfo(p1Point, cornerPoint, p2Point);\n+\t\t}\n+\t\t// ��map��key��ŵ�һ��ת�۵�, value��ŵڶ���ת�۵�,\n+\t\t// map��size()˵���ж����ֿ�����ķ�ʽ\n+\t\tMap<Point, Point> turns = getLinkPoints(p1Point, p2Point,\n+\t\t\t\tGameConf.PIECE_WIDTH, GameConf.PIECE_WIDTH);\n+\t\tif (turns.size() != 0) {\n+\t\t\treturn getShortcut(p1Point, p2Point, turns,\n+\t\t\t\t\tgetDistance(p1Point, p2Point));\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t/**\n+\t * ��ȡ���ת�۵�����\n+\t * \n+\t * @param point1\n+\t * @param point2\n+\t * @return Map�����ÿ��key-value�Դ��һ����ӷ�ʽ�� ����key��value�ֱ����1���2����ӵ�\n+\t */\n+\tprivate Map<Point, Point> getLinkPoints(Point point1, Point point2,\n+\t\t\tint pieceWidth, int pieceHeight) {\n+\t\tMap<Point, Point> result = new HashMap<Point, Point>();\n+\t\t// ��ȡ��point1Ϊ���ĵ�����, ����, ���µ�ͨ��\n+\t\tList<Point> p1UpChanel = getUpChanel(point1, point2.y, pieceHeight);\n+\t\tList<Point> p1RightChanel = getRightChanel(point1, point2.x, pieceWidth);\n+\t\tList<Point> p1DownChanel = getDownChanel(point1, point2.y, pieceHeight);\n+\t\t// ��ȡ��point2Ϊ���ĵ�����, ����, ���ϵ�ͨ��\n+\t\tList<Point> p2DownChanel = getDownChanel(point2, point1.y, pieceHeight);\n+\t\tList<Point> p2LeftChanel = getLeftChanel(point2, point1.x, pieceWidth);\n+\t\tList<Point> p2UpChanel = getUpChanel(point2, point1.y, pieceHeight);\n+\t\t// ��ȡBoard�����߶�\n+\t\tint heightMax = (this.config.getYSize() + 1) * pieceHeight\n+\t\t\t\t+ this.config.getBeginImageY();\n+\t\t// ��ȡBoard�������\n+\t\tint widthMax = (this.config.getXSize() + 1) * pieceWidth\n+\t\t\t\t+ this.config.getBeginImageX();\n+\t\t// ��ȷ������Ĺ�ϵ\n+\t\t// point2��point1�����Ͻǻ������½�\n+\t\tif (isLeftUp(point1, point2) || isLeftDown(point1, point2)) {\n+\t\t\t// ����λ, ���ñ�����\n+\t\t\treturn getLinkPoints(point2, point1, pieceWidth, pieceHeight);\n+\t\t}\n+\t\t// p1��p2λ��ͬһ�в���ֱ�����\n+\t\tif (point1.y == point2.y) {\n+\t\t\t// ��ͬһ��\n+\t\t\t// ���ϱ���\n+\t\t\t// ��p1�����ĵ����ϱ����ȡ�㼯��\n+\t\t\tp1UpChanel = getUpChanel(point1, 0, pieceHeight);\n+\t\t\t// ��p2�����ĵ����ϱ����ȡ�㼯��\n+\t\t\tp2UpChanel = getUpChanel(point2, 0, pieceHeight);\n+\t\t\tMap<Point, Point> upLinkPoints = getXLinkPoints(p1UpChanel,\n+\t\t\t\t\tp2UpChanel, pieceHeight);\n+\t\t\t// ���±���, ������Board(�з���ĵط�)�ı߿�\n+\t\t\t// ��p1���ĵ����±����ȡ�㼯��\n+\t\t\tp1DownChanel = getDownChanel(point1, heightMax, pieceHeight);\n+\t\t\t// ��p2���ĵ����±����ȡ�㼯��\n+\t\t\tp2DownChanel = getDownChanel(point2, heightMax, pieceHeight);\n+\t\t\tMap<Point, Point> downLinkPoints = getXLinkPoints(p1DownChanel,\n+\t\t\t\t\tp2DownChanel, pieceHeight);\n+\t\t\tresult.putAll(upLinkPoints);\n+\t\t\tresult.putAll(downLinkPoints);\n+\t\t}\n+\t\t// p1��p2λ��ͬһ�в���ֱ�����\n+\t\tif (point1.x == point2.x) {\n+\t\t\t// ��ͬһ��\n+\t\t\t// �������\n+\t\t\t// ��p1�����ĵ���������ȡ�㼯��\n+\t\t\tList<Point> p1LeftChanel = getLeftChanel(point1, 0, pieceWidth);\n+\t\t\t// ��p2�����ĵ���������ȡ�㼯��\n+\t\t\tp2LeftChanel = getLeftChanel(point2, 0, pieceWidth);\n+\t\t\tMap<Point, Point> leftLinkPoints = getYLinkPoints(p1LeftChanel,\n+\t\t\t\t\tp2LeftChanel, pieceWidth);\n+\t\t\t// ���ұ���, ���ó���Board�ı߿��з���ĵط���\n+\t\t\t// ��p1�����ĵ����ұ����ȡ�㼯��\n+\t\t\tp1RightChanel = getRightChanel(point1, widthMax, pieceWidth);\n+\t\t\t// ��p2�����ĵ����ұ����ȡ�㼯��\n+\t\t\tList<Point> p2RightChanel = getRightChanel(point2, widthMax,\n+\t\t\t\t\tpieceWidth);\n+\t\t\tMap<Point, Point> rightLinkPoints = getYLinkPoints(p1RightChanel,\n+\t\t\t\t\tp2RightChanel, pieceWidth);\n+\t\t\tresult.putAll(leftLinkPoints);\n+\t\t\tresult.putAll(rightLinkPoints);\n+\t\t}\n+\t\t// point2λ��point1�����Ͻ�\n+\t\tif (isRightUp(point1, point2)) {\n+\t\t\t// ��ȡpoint1���ϱ���, point2���±���ʱ���������ӵĵ�\n+\t\t\tMap<Point, Point> upDownLinkPoints = getXLinkPoints(p1UpChanel,\n+\t\t\t\t\tp2DownChanel, pieceWidth);\n+\t\t\t// ��ȡpoint1���ұ���, point2�������ʱ���������ӵĵ�\n+\t\t\tMap<Point, Point> rightLeftLinkPoints = getYLinkPoints(\n+\t\t\t\t\tp1RightChanel, p2LeftChanel, pieceHeight);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tp1UpChanel = getUpChanel(point1, 0, pieceHeight);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tp2UpChanel = getUpChanel(point2, 0, pieceHeight);\n+\t\t\t// ��ȡpoint1���ϱ���, point2���ϱ���ʱ���������ӵĵ�\n+\t\t\tMap<Point, Point> upUpLinkPoints = getXLinkPoints(p1UpChanel,\n+\t\t\t\t\tp2UpChanel, pieceWidth);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tp1DownChanel = getDownChanel(point1, heightMax, pieceHeight);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tp2DownChanel = getDownChanel(point2, heightMax, pieceHeight);\n+\t\t\t// ��ȡpoint1���±���, point2���±���ʱ���������ӵĵ�\n+\t\t\tMap<Point, Point> downDownLinkPoints = getXLinkPoints(p1DownChanel,\n+\t\t\t\t\tp2DownChanel, pieceWidth);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tp1RightChanel = getRightChanel(point1, widthMax, pieceWidth);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tList<Point> p2RightChanel = getRightChanel(point2, widthMax,\n+\t\t\t\t\tpieceWidth);\n+\t\t\t// ��ȡpoint1���ұ���, point2���ұ���ʱ���������ӵĵ�\n+\t\t\tMap<Point, Point> rightRightLinkPoints = getYLinkPoints(\n+\t\t\t\t\tp1RightChanel, p2RightChanel, pieceHeight);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tList<Point> p1LeftChanel = getLeftChanel(point1, 0, pieceWidth);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tp2LeftChanel = getLeftChanel(point2, 0, pieceWidth);\n+\t\t\t// ��ȡpoint1�������, point2���ұ���ʱ���������ӵĵ�\n+\t\t\tMap<Point, Point> leftLeftLinkPoints = getYLinkPoints(p1LeftChanel,\n+\t\t\t\t\tp2LeftChanel, pieceHeight);\n+\t\t\tresult.putAll(upDownLinkPoints);\n+\t\t\tresult.putAll(rightLeftLinkPoints);\n+\t\t\tresult.putAll(upUpLinkPoints);\n+\t\t\tresult.putAll(downDownLinkPoints);\n+\t\t\tresult.putAll(rightRightLinkPoints);\n+\t\t\tresult.putAll(leftLeftLinkPoints);\n+\t\t}\n+\t\t// point2λ��point1�����½�\n+\t\tif (isRightDown(point1, point2)) {\n+\t\t\t// ��ȡpoint1���±���, point2���ϱ���ʱ�������ӵĵ�\n+\t\t\tMap<Point, Point> downUpLinkPoints = getXLinkPoints(p1DownChanel,\n+\t\t\t\t\tp2UpChanel, pieceWidth);\n+\t\t\t// ��ȡpoint1���ұ���, point2�������ʱ�������ӵĵ�\n+\t\t\tMap<Point, Point> rightLeftLinkPoints = getYLinkPoints(\n+\t\t\t\t\tp1RightChanel, p2LeftChanel, pieceHeight);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tp1UpChanel = getUpChanel(point1, 0, pieceHeight);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tp2UpChanel = getUpChanel(point2, 0, pieceHeight);\n+\t\t\t// ��ȡpoint1���ϱ���, point2���ϱ���ʱ�������ӵĵ�\n+\t\t\tMap<Point, Point> upUpLinkPoints = getXLinkPoints(p1UpChanel,\n+\t\t\t\t\tp2UpChanel, pieceWidth);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tp1DownChanel = getDownChanel(point1, heightMax, pieceHeight);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tp2DownChanel = getDownChanel(point2, heightMax, pieceHeight);\n+\t\t\t// ��ȡpoint1���±���, point2���±���ʱ�������ӵĵ�\n+\t\t\tMap<Point, Point> downDownLinkPoints = getXLinkPoints(p1DownChanel,\n+\t\t\t\t\tp2DownChanel, pieceWidth);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tList<Point> p1LeftChanel = getLeftChanel(point1, 0, pieceWidth);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tp2LeftChanel = getLeftChanel(point2, 0, pieceWidth);\n+\t\t\t// ��ȡpoint1�������, point2�������ʱ�������ӵĵ�\n+\t\t\tMap<Point, Point> leftLeftLinkPoints = getYLinkPoints(p1LeftChanel,\n+\t\t\t\t\tp2LeftChanel, pieceHeight);\n+\t\t\t// ��ȡ��p1Ϊ���ĵ�����ͨ��\n+\t\t\tp1RightChanel = getRightChanel(point1, widthMax, pieceWidth);\n+\t\t\t// ��ȡ��p2Ϊ���ĵ�����ͨ��\n+\t\t\tList<Point> p2RightChanel = getRightChanel(point2, widthMax,\n+\t\t\t\t\tpieceWidth);\n+\t\t\t// ��ȡpoint1���ұ���, point2���ұ���ʱ���������ӵĵ�\n+\t\t\tMap<Point, Point> rightRightLinkPoints = getYLinkPoints(\n+\t\t\t\t\tp1RightChanel, p2RightChanel, pieceHeight);\n+\t\t\tresult.putAll(downUpLinkPoints);\n+\t\t\tresult.putAll(rightLeftLinkPoints);\n+\t\t\tresult.putAll(upUpLinkPoints);\n+\t\t\tresult.putAll(downDownLinkPoints);\n+\t\t\tresult.putAll(leftLeftLinkPoints);\n+\t\t\tresult.putAll(rightRightLinkPoints);\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ��ȡp1��p2֮����̵������Ϣ\n+\t * \n+\t * @param p1\n+\t * @param p2\n+\t * @param turns\n+\t *            ��ת�۵��map\n+\t * @param shortDistance\n+\t *            ���֮�����̾���\n+\t * @return p1��p2֮����̵������Ϣ\n+\t */\n+\tprivate LinkInfo getShortcut(Point p1, Point p2, Map<Point, Point> turns,\n+\t\t\tint shortDistance) {\n+\t\tList<LinkInfo> infos = new ArrayList<LinkInfo>();\n+\t\t// ������Map,\n+\t\tfor (Point point1 : turns.keySet()) {\n+\t\t\tPoint point2 = turns.get(point1);\n+\t\t\t// ��ת�۵���ѡ����װ��LinkInfo����, �ŵ�List������\n+\t\t\tinfos.add(new LinkInfo(p1, point1, point2, p2));\n+\t\t}\n+\t\treturn getShortcut(infos, shortDistance);\n+\t}\n+\n+\t/**\n+\t * ��infos�л�ȡ�������̵��Ǹ�LinkInfo����\n+\t * \n+\t * @param infos\n+\t * @return �������̵��Ǹ�LinkInfo����\n+\t */\n+\tprivate LinkInfo getShortcut(List<LinkInfo> infos, int shortDistance) {\n+\t\tint temp1 = 0;\n+\t\tLinkInfo result = null;\n+\t\tfor (int i = 0; i < infos.size(); i++) {\n+\t\t\tLinkInfo info = infos.get(i);\n+\t\t\t// ���������ܾ���\n+\t\t\tint distance = countAll(info.getLinkPoints());\n+\t\t\t// ��ѭ����һ��Ĳ����temp1����\n+\t\t\tif (i == 0) {\n+\t\t\t\ttemp1 = distance - shortDistance;\n+\t\t\t\tresult = info;\n+\t\t\t}\n+\t\t\t// �����һ��ѭ����ֵ��temp1�Ļ�С, ���õ�ǰ��ֵ��Ϊtemp1\n+\t\t\tif (distance - shortDistance < temp1) {\n+\t\t\t\ttemp1 = distance - shortDistance;\n+\t\t\t\tresult = info;\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ����List<Point>�����е�ľ����ܺ�\n+\t * \n+\t * @param points\n+\t *            ��Ҫ�������ӵ�\n+\t * @return ���е�ľ�����ܺ�\n+\t */\n+\tprivate int countAll(List<Point> points) {\n+\t\tint result = 0;\n+\t\tfor (int i = 0; i < points.size() - 1; i++) {\n+\t\t\t// ��ȡ��i���\n+\t\t\tPoint point1 = points.get(i);\n+\t\t\t// ��ȡ��i + 1���\n+\t\t\tPoint point2 = points.get(i + 1);\n+\t\t\t// �����i������i + 1���ľ��룬����ӵ��ܾ�����\n+\t\t\tresult += getDistance(point1, point2);\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ��ȡ���LinkPoint֮�����̾���\n+\t * \n+\t * @param p1\n+\t *            ��һ���\n+\t * @param p2\n+\t *            �ڶ����\n+\t * @return ����ľ�������ܺ�\n+\t */\n+\tprivate int getDistance(Point p1, Point p2) {\n+\t\tint xDistance = Math.abs(p1.x - p2.x);\n+\t\tint yDistance = Math.abs(p1.y - p2.y);\n+\t\treturn xDistance + yDistance;\n+\t}\n+\n+\t/**\n+\t * ��������, ���жϵ�һ��ϵ�Ԫ�ص�x�������һ����е�Ԫ��x�����ͬ(����), �����ͬ, ����ͬһ��, ���ж��Ƿ����ϰ�,\n+\t * û����ӵ�����Map��ȥ\n+\t * \n+\t * @param p1Chanel\n+\t * @param p2Chanel\n+\t * @param pieceHeight\n+\t * @return\n+\t */\n+\tprivate Map<Point, Point> getYLinkPoints(List<Point> p1Chanel,\n+\t\t\tList<Point> p2Chanel, int pieceHeight) {\n+\t\tMap<Point, Point> result = new HashMap<Point, Point>();\n+\t\tfor (int i = 0; i < p1Chanel.size(); i++) {\n+\t\t\tPoint temp1 = p1Chanel.get(i);\n+\t\t\tfor (int j = 0; j < p2Chanel.size(); j++) {\n+\t\t\t\tPoint temp2 = p2Chanel.get(j);\n+\t\t\t\t// ���x�����ͬ(��ͬһ��)\n+\t\t\t\tif (temp1.x == temp2.x) {\n+\t\t\t\t\t// û���ϰ�, �ŵ�map��ȥ\n+\t\t\t\t\tif (!isYBlock(temp1, temp2, pieceHeight)) {\n+\t\t\t\t\t\tresult.put(temp1, temp2);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ��������, ���жϵ�һ��ϵ�Ԫ�ص�y�������һ����е�Ԫ��y�����ͬ(����), �����ͬ, ����ͬһ��, ���ж��Ƿ����ϰ�, û��\n+\t * ��ӵ�����map��ȥ\n+\t * \n+\t * @param p1Chanel\n+\t * @param p2Chanel\n+\t * @param pieceWidth\n+\t * @return ��ſ��Ժ���ֱ����ӵ���ӵ�ļ�ֵ��\n+\t */\n+\tprivate Map<Point, Point> getXLinkPoints(List<Point> p1Chanel,\n+\t\t\tList<Point> p2Chanel, int pieceWidth) {\n+\t\tMap<Point, Point> result = new HashMap<Point, Point>();\n+\t\tfor (int i = 0; i < p1Chanel.size(); i++) {\n+\t\t\t// �ӵ�һͨ����ȡһ���\n+\t\t\tPoint temp1 = p1Chanel.get(i);\n+\t\t\t// �ٱ���ڶ���ͨ��, ���µڶ�ͨ�����Ƿ��е������temp1�������\n+\t\t\tfor (int j = 0; j < p2Chanel.size(); j++) {\n+\t\t\t\tPoint temp2 = p2Chanel.get(j);\n+\t\t\t\t// ���y�����ͬ(��ͬһ��), ���ж�����֮���Ƿ���ֱ���ϰ�\n+\t\t\t\tif (temp1.y == temp2.y) {\n+\t\t\t\t\tif (!isXBlock(temp1, temp2, pieceWidth)) {\n+\t\t\t\t\t\t// û���ϰ���ֱ�Ӽӵ�����map��\n+\t\t\t\t\t\tresult.put(temp1, temp2);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * �ж�point2�Ƿ���point1�����Ͻ�\n+\t * \n+\t * @param point1\n+\t * @param point2\n+\t * @return p2λ��p1�����Ͻ�ʱ����true�����򷵻�false\n+\t */\n+\tprivate boolean isLeftUp(Point point1, Point point2) {\n+\t\treturn (point2.x < point1.x && point2.y < point1.y);\n+\t}\n+\n+\t/**\n+\t * �ж�point2�Ƿ���point1�����½�\n+\t * \n+\t * @param point1\n+\t * @param point2\n+\t * @return p2λ��p1�����½�ʱ����true�����򷵻�false\n+\t */\n+\tprivate boolean isLeftDown(Point point1, Point point2) {\n+\t\treturn (point2.x < point1.x && point2.y > point1.y);\n+\t}\n+\n+\t/**\n+\t * �ж�point2�Ƿ���point1�����Ͻ�\n+\t * \n+\t * @param point1\n+\t * @param point2\n+\t * @return p2λ��p1�����Ͻ�ʱ����true�����򷵻�false\n+\t */\n+\tprivate boolean isRightUp(Point point1, Point point2) {\n+\t\treturn (point2.x > point1.x && point2.y < point1.y);\n+\t}\n+\n+\t/**\n+\t * �ж�point2�Ƿ���point1�����½�\n+\t * \n+\t * @param point1\n+\t * @param point2\n+\t * @return p2λ��p1�����½�ʱ����true�����򷵻�false\n+\t */\n+\tprivate boolean isRightDown(Point point1, Point point2) {\n+\t\treturn (point2.x > point1.x && point2.y > point1.y);\n+\t}\n+\n+\t/**\n+\t * ��ȡ�����ͬһ�л���ͬһ�е������ֱ����ӵ�, ��ֻ��һ��ת�۵�\n+\t * \n+\t * @param point1\n+\t *            ��һ���\n+\t * @param point2\n+\t *            �ڶ����\n+\t * @return �����ͬһ�л���ͬһ�е������ֱ����ӵ�\n+\t */\n+\tprivate Point getCornerPoint(Point point1, Point point2, int pieceWidth,\n+\t\t\tint pieceHeight) {\n+\t\t// ���ж��������λ�ù�ϵ\n+\t\t// point2��point1�����Ͻ�, point2��point1�����½�\n+\t\tif (isLeftUp(point1, point2) || isLeftDown(point1, point2)) {\n+\t\t\t// ����λ, ���µ��ñ�����\n+\t\t\treturn getCornerPoint(point2, point1, pieceWidth, pieceHeight);\n+\t\t}\n+\t\t// ��ȡp1����, ����, ���µ����ͨ��\n+\t\tList<Point> point1RightChanel = getRightChanel(point1, point2.x,\n+\t\t\t\tpieceWidth);\n+\t\tList<Point> point1UpChanel = getUpChanel(point1, point2.y, pieceHeight);\n+\t\tList<Point> point1DownChanel = getDownChanel(point1, point2.y,\n+\t\t\t\tpieceHeight);\n+\t\t// ��ȡp2����, ����, ���µ����ͨ��\n+\t\tList<Point> point2DownChanel = getDownChanel(point2, point1.y,\n+\t\t\t\tpieceHeight);\n+\t\tList<Point> point2LeftChanel = getLeftChanel(point2, point1.x,\n+\t\t\t\tpieceWidth);\n+\t\tList<Point> point2UpChanel = getUpChanel(point2, point1.y, pieceHeight);\n+\t\tif (isRightUp(point1, point2)) {\n+\t\t\t// point2��point1�����Ͻ�\n+\t\t\t// ��ȡp1���Һ�p2���µĽ���\n+\t\t\tPoint linkPoint1 = getWrapPoint(point1RightChanel, point2DownChanel);\n+\t\t\t// ��ȡp1���Ϻ�p2����Ľ���\n+\t\t\tPoint linkPoint2 = getWrapPoint(point1UpChanel, point2LeftChanel);\n+\t\t\t// ��������һ���, ���û�н���, �򷵻�null\n+\t\t\treturn (linkPoint1 == null) ? linkPoint2 : linkPoint1;\n+\t\t}\n+\t\tif (isRightDown(point1, point2)) {\n+\t\t\t// point2��point1�����½�\n+\t\t\t// ��ȡp1���º�p2����Ľ���\n+\t\t\tPoint linkPoint1 = getWrapPoint(point1DownChanel, point2LeftChanel);\n+\t\t\t// ��ȡp1���Һ�p2���µĽ���\n+\t\t\tPoint linkPoint2 = getWrapPoint(point1RightChanel, point2UpChanel);\n+\t\t\treturn (linkPoint1 == null) ? linkPoint2 : linkPoint1;\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t/**\n+\t * �������ͨ��, ��ȡ���ǵĽ���\n+\t * \n+\t * @param p1Chanel\n+\t *            ��һ����ͨ��\n+\t * @param p2Chanel\n+\t *            �ڶ�����ͨ��\n+\t * @return ���ͨ���н��㣬���ؽ��㣬���򷵻�null\n+\t */\n+\tprivate Point getWrapPoint(List<Point> p1Chanel, List<Point> p2Chanel) {\n+\t\tfor (int i = 0; i < p1Chanel.size(); i++) {\n+\t\t\tPoint temp1 = p1Chanel.get(i);\n+\t\t\tfor (int j = 0; j < p2Chanel.size(); j++) {\n+\t\t\t\tPoint temp2 = p2Chanel.get(j);\n+\t\t\t\tif (temp1.equals(temp2)) {\n+\t\t\t\t\t// ������List����Ԫ����ͬһ��, ���������ͨ���н���\n+\t\t\t\t\treturn temp1;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t/**\n+\t * �ж����y�����ͬ�ĵ����֮���Ƿ����ϰ�, ��p1Ϊ�������ұ���\n+\t * \n+\t * @param p1\n+\t * @param p2\n+\t * @param pieceWidth\n+\t * @return ���Piece֮�����ϰ�����true�����򷵻�false\n+\t */\n+\tprivate boolean isXBlock(Point p1, Point p2, int pieceWidth) {\n+\t\tif (p2.x < p1.x) {\n+\t\t\t// ���p2��p1���, �����λ�õ��ñ�����\n+\t\t\treturn isXBlock(p2, p1, pieceWidth);\n+\t\t}\n+\t\tfor (int i = p1.x + pieceWidth; i < p2.x; i = i + pieceWidth) {\n+\t\t\tif (hasPiece(i, p1.y)) {// ���ϰ�\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * �ж����x�����ͬ�ĵ����֮���Ƿ����ϰ�, ��p1Ϊ�������±���\n+\t * \n+\t * @param p1\n+\t * @param p2\n+\t * @param pieceHeight\n+\t * @return ���Piece֮�����ϰ�����true�����򷵻�false\n+\t */\n+\tprivate boolean isYBlock(Point p1, Point p2, int pieceHeight) {\n+\t\tif (p2.y < p1.y) {\n+\t\t\t// ���p2��p1������, �����λ�����µ��ñ�����\n+\t\t\treturn isYBlock(p2, p1, pieceHeight);\n+\t\t}\n+\t\tfor (int i = p1.y + pieceHeight; i < p2.y; i = i + pieceHeight) {\n+\t\t\tif (hasPiece(p1.x, i)) {\n+\t\t\t\t// ���ϰ�\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * �ж�GamePanel�е�x, y������Ƿ���Piece����\n+\t * \n+\t * @param x\n+\t * @param y\n+\t * @return true ��ʾ�и������piece���� false ��ʾû��\n+\t */\n+\tprivate boolean hasPiece(int x, int y) {\n+\t\tif (findPiece(x, y) == null)\n+\t\t\treturn false;\n+\t\treturn true;\n+\t}\n+\n+\t/**\n+\t * ��һ��Point����,����������ͨ��\n+\t * \n+\t * @param p\n+\t * @param pieceWidth\n+\t *            pieceͼƬ�Ŀ�\n+\t * @param min\n+\t *            �������ʱ��С�Ľ���\n+\t * @return ��Point��ߵ�ͨ��\n+\t */\n+\tprivate List<Point> getLeftChanel(Point p, int min, int pieceWidth) {\n+\t\tList<Point> result = new ArrayList<Point>();\n+\t\t// ��ȡ����ͨ��, ��һ����������, ����ΪPieceͼƬ�Ŀ�\n+\t\tfor (int i = p.x - pieceWidth; i >= min; i = i - pieceWidth) {\n+\t\t\t// ���ϰ�, ��ʾͨ���Ѿ�����ͷ, ֱ�ӷ���\n+\t\t\tif (hasPiece(i, p.y)) {\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t\tresult.add(new Point(i, p.y));\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ��һ��Point����, ��������ұ�ͨ��\n+\t * \n+\t * @param p\n+\t * @param pieceWidth\n+\t * @param max\n+\t *            ����ʱ�����ҽ���\n+\t * @return ��Point�ұߵ�ͨ��\n+\t */\n+\tprivate List<Point> getRightChanel(Point p, int max, int pieceWidth) {\n+\t\tList<Point> result = new ArrayList<Point>();\n+\t\t// ��ȡ����ͨ��, ��һ������ұ���, ����ΪPieceͼƬ�Ŀ�\n+\t\tfor (int i = p.x + pieceWidth; i <= max; i = i + pieceWidth) {\n+\t\t\t// ���ϰ�, ��ʾͨ���Ѿ�����ͷ, ֱ�ӷ���\n+\t\t\tif (hasPiece(i, p.y)) {\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t\tresult.add(new Point(i, p.y));\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ��һ��Point����, �����������ͨ��\n+\t * \n+\t * @param p\n+\t * @param min\n+\t *            ���ϱ���ʱ��С�Ľ���\n+\t * @param pieceHeight\n+\t * @return ��Point�����ͨ��\n+\t */\n+\tprivate List<Point> getUpChanel(Point p, int min, int pieceHeight) {\n+\t\tList<Point> result = new ArrayList<Point>();\n+\t\t// ��ȡ����ͨ��, ��һ������ұ���, ����ΪPieceͼƬ�ĸ�\n+\t\tfor (int i = p.y - pieceHeight; i >= min; i = i - pieceHeight) {\n+\t\t\t// ���ϰ�, ��ʾͨ���Ѿ�����ͷ, ֱ�ӷ���\n+\t\t\tif (hasPiece(p.x, i)) {\n+\t\t\t\t// ������ϰ�, ֱ�ӷ���\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t\tresult.add(new Point(p.x, i));\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ��һ��Point����, �����������ͨ��\n+\t * \n+\t * @param p\n+\t * @param max\n+\t *            ���ϱ���ʱ��������\n+\t * @return ��Point�����ͨ��\n+\t */\n+\tprivate List<Point> getDownChanel(Point p, int max, int pieceHeight) {\n+\t\tList<Point> result = new ArrayList<Point>();\n+\t\t// ��ȡ����ͨ��, ��һ������ұ���, ����ΪPieceͼƬ�ĸ�\n+\t\tfor (int i = p.y + pieceHeight; i <= max; i = i + pieceHeight) {\n+\t\t\t// ���ϰ�, ��ʾͨ���Ѿ�����ͷ, ֱ�ӷ���\n+\t\t\tif (hasPiece(p.x, i)) {\n+\t\t\t\t// ������ϰ�, ֱ�ӷ���\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t\tresult.add(new Point(p.x, i));\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+}"
  }, {
    "sha" : "923a9caf2ffabe81d6dc40eda8c26a4252254428",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/GameConf.java",
    "status" : "added",
    "additions" : 79,
    "deletions" : 0,
    "changes" : 79,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/GameConf.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/GameConf.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/GameConf.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,79 @@\n+package com.example.link2link.object;\n+\n+import android.content.Context;\n+\n+/**\n+ * ������Ϸ��������Ϣ�����ÿ�����ͼƬ�Ŀ��ߣ���Ϸ����ʱ�������������һά���ڶ�ά�ĳ��ȣ�\n+ * Board�е�һ��ͼƬ���ֵ�x��y��꣬��Ϸͨ�ص�ʱ������Ϸ��������\n+ * \n+ * @author CJP\n+ * \n+ */\n+public class GameConf {\n+\t// ����������ÿ����ͼƬ�Ŀ���\n+\tpublic static final int PIECE_WIDTH = 40;\n+\tpublic static final int PIECE_HEIGHT = 40;\n+\t// ��¼��Ϸ����ʱ�䣨100�룩.\n+\tpublic static int DEFAULT_TIME = 100;\n+\t// Piece[][]�����һά�ĳ���\n+\tprivate int xSize;\n+\t// Piece[][]����ڶ�ά�ĳ���\n+\tprivate int ySize;\n+\t// Board�е�һ��ͼƬ���ֵ�x���\n+\tprivate int beginImageX;\n+\t// Board�е�һ��ͼƬ���ֵ�y���\n+\tprivate int beginImageY;\n+\t// ��¼��Ϸ����ʱ��, ��λ�Ǻ���\n+\tprivate long gameTime;\n+\tprivate Context context;\n+\n+\t/**\n+\t * �ṩһ���������\n+\t * \n+\t * @param xSize\n+\t *            Piece[][]�����һά����\n+\t * @param ySize\n+\t *            Piece[][]����ڶ�ά����\n+\t * @param beginImageX\n+\t *            Board�е�һ��ͼƬ���ֵ�x���\n+\t * @param beginImageY\n+\t *            Board�е�һ��ͼƬ���ֵ�y���\n+\t * @param gameTime\n+\t *            ����ÿ�ֵ�ʱ��, ��λ����\n+\t * @param context\n+\t *            Ӧ��������\n+\t */\n+\tpublic GameConf(int xSize, int ySize, int beginImageX, int beginImageY,\n+\t\t\tlong gameTime, Context context) {\n+\t\tthis.xSize = xSize;\n+\t\tthis.ySize = ySize;\n+\t\tthis.beginImageX = beginImageX;\n+\t\tthis.beginImageY = beginImageY;\n+\t\tthis.gameTime = gameTime;\n+\t\tthis.context = context;\n+\t}\n+\n+\tpublic long getGameTime() {\n+\t\treturn gameTime;\n+\t}\n+\n+\tpublic int getXSize() {\n+\t\treturn xSize;\n+\t}\n+\n+\tpublic int getYSize() {\n+\t\treturn ySize;\n+\t}\n+\n+\tpublic int getBeginImageX() {\n+\t\treturn beginImageX;\n+\t}\n+\n+\tpublic int getBeginImageY() {\n+\t\treturn beginImageY;\n+\t}\n+\n+\tpublic Context getContext() {\n+\t\treturn context;\n+\t}\n+}"
  }, {
    "sha" : "8bfc3fd3aed57b3697d41da0b235b3a2bab86815",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/LinkInfo.java",
    "status" : "added",
    "additions" : 44,
    "deletions" : 0,
    "changes" : 44,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/LinkInfo.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/LinkInfo.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/object/LinkInfo.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,44 @@\n+package com.example.link2link.object;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import android.graphics.Point;\n+\n+/**\n+ * �������ڷ�װ����֮��������Ϣ���������ͨ��һ����ֱ�������ͨ������������ͨ������������������Ҫ������������ߵĵ����Ϣ��\n+ * \n+ * @author CJP\n+ * \n+ */\n+public class LinkInfo {\n+\n+\t// ����һ������ڱ�����ӵ�\n+\tprivate List<Point> points = new ArrayList<Point>();\n+\n+\t// �ṩ��һ�������ʾ���Point����ֱ�������û��ת�۵�\n+\tpublic LinkInfo(Point p1, Point p2) {\n+\t\tpoints.add(p1);\n+\t\tpoints.add(p2);\n+\t}\n+\n+\t// �ṩ�ڶ��������ʾ���Point���������p2��p1��p3֮���ת�۵�\n+\tpublic LinkInfo(Point p1, Point p2, Point p3) {\n+\t\tpoints.add(p1);\n+\t\tpoints.add(p2);\n+\t\tpoints.add(p3);\n+\t}\n+\n+\t// �ṩ����������ʾ�ĸ�Point���������p2��p3��p1��p4��ת�۵�\n+\tpublic LinkInfo(Point p1, Point p2, Point p3, Point p4) {\n+\t\tpoints.add(p1);\n+\t\tpoints.add(p2);\n+\t\tpoints.add(p3);\n+\t\tpoints.add(p4);\n+\t}\n+\n+\t// ������Ӽ���\n+\tpublic List<Point> getLinkPoints() {\n+\t\treturn points;\n+\t}\n+}"
  }, {
    "sha" : "6992a3c1ed1d16ec4dcefff86a06a8c2f4cdff3b",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/util/ImageUtil.java",
    "status" : "added",
    "additions" : 117,
    "deletions" : 0,
    "changes" : 117,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/util/ImageUtil.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/util/ImageUtil.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/util/ImageUtil.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,117 @@\n+package com.example.link2link.util;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Random;\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+\n+import com.example.link2link.R;\n+import com.example.link2link.view.PieceImage;\n+\n+public class ImageUtil {\n+\n+\t// ����һ��List���ڱ�����������ͼƬ��Դ��ID\n+\tprivate static List<Integer> imageValues = getImageValues();\n+\n+\t// ��ȡ��������ͼƬ��ID\n+\tpublic static List<Integer> getImageValues() {\n+\t\ttry {\n+\t\t\t// ͨ����õ�R.drawable���е����ԣ�����ȡ��drawableĿ¼�µ�����ͼƬ\n+\t\t\tField[] drawableFields = R.drawable.class.getFields();\n+\t\t\t// ����һ��List���ڱ�����Ҫ������������ͼƬ��ID\n+\t\t\tList<Integer> resourceValues = new ArrayList<Integer>();\n+\t\t\tfor (Field field : drawableFields) {\n+\t\t\t\t// ����Field�������p_��ͷ����ȷ�����ڷ���ͼƬ,������ӵ�List��\n+\t\t\t\tif (field.getName().indexOf(\"p_\") != -1) {\n+\t\t\t\t\tresourceValues.add(field.getInt(R.drawable.class));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn resourceValues;\n+\t\t} catch (Exception e) {\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * ����sourceValues�ļ����л�ȡsize��ͼƬ�����صĽ��Ϊ����ȡ��ͼƬ�ļ���\n+\t * \n+\t * @param sourceValues\n+\t * @param size\n+\t * @return\n+\t */\n+\tpublic static List<Integer> getRandomValues(List<Integer> sourceValues,\n+\t\t\tint size) {\n+\t\t// ����һ������������������ȡĳһ��ͼƬ\n+\t\tRandom random = new Random();\n+\t\t// �������ϣ����ڱ�������ȡ����ͼƬ\n+\t\tList<Integer> result = new ArrayList<Integer>();\n+\t\tfor (int i = 0; i < size; i++) {\n+\t\t\ttry {\n+\t\t\t\t// ����ȡһ����0��sourceValues.size()֮�����ֵ\n+\t\t\t\tint index = random.nextInt(sourceValues.size());\n+\t\t\t\t// ��������ҵ���Ӧ��ͼƬ��ԴID\n+\t\t\t\tInteger image = sourceValues.get(index);\n+\t\t\t\t// ������ӵ������\n+\t\t\t\tresult.add(image);\n+\t\t\t} catch (IndexOutOfBoundsException e) {\n+\t\t\t\treturn result;\n+\t\t\t}\n+\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * ���size��drawableĿ¼�»�ȡͼƬ��Դ�������Ǹ���һ�ݣ�����ɢ�����ڼ����е�λ��\n+\t * \n+\t * @param size\n+\t * @return\n+\t */\n+\tpublic static List<Integer> getPlayValues(int size) {\n+\t\tif (size % 2 != 0) {\n+\t\t\t// ���size����2������0����size��1\n+\t\t\tsize += 1;\n+\t\t}\n+\t\t// �����е�ͼƬ������ȡsize��һ�����\n+\t\tList<Integer> playImageValues = getRandomValues(imageValues, size / 2);\n+\t\t// ��playImageValues���ϵ�Ԫ�����һ������֤����ͼƬ������֮��Ե�ͼƬ\n+\t\tplayImageValues.addAll(playImageValues);\n+\t\t// ������������ͼƬ��ɢ\n+\t\tCollections.shuffle(playImageValues);\n+\t\treturn playImageValues;\n+\t}\n+\n+\t/**\n+\t * ��ͼƬId����ת����PieceImage���󼯺�\n+\t * \n+\t * @param context\n+\t * @param size\n+\t * @return\n+\t */\n+\tpublic static List<PieceImage> getPlayImages(Context context, int size) {\n+\t\t// ��ȡͼƬID��ɵļ���\n+\t\tList<Integer> resourceValues = getPlayValues(size);\n+\t\t// �����װ��PieceImage�����ͼƬ��Դ����\n+\t\tList<PieceImage> result = new ArrayList<PieceImage>();\n+\t\tfor (Integer value : resourceValues) {\n+\t\t\t// ���ͼƬ��ID��ͼƬ��װ��Bitmap����\n+\t\t\tBitmap bm = BitmapFactory.decodeResource(context.getResources(),\n+\t\t\t\t\tvalue);\n+\t\t\t// ��װͼƬId��ͼƬ\n+\t\t\tPieceImage pieceImage = new PieceImage(bm, value);\n+\t\t\tresult.add(pieceImage);\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\t// ��ȡѡ�б�ʶ��ͼƬ\n+\tpublic static Bitmap getSelectImage(Context context) {\n+\t\tBitmap bm = BitmapFactory.decodeResource(context.getResources(),\n+\t\t\t\tR.drawable.selected);\n+\t\treturn bm;\n+\t}\n+}"
  }, {
    "sha" : "a2cb051efe4ff195d1b5a37b9b77e466af4717d7",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/GameView.java",
    "status" : "added",
    "additions" : 116,
    "deletions" : 0,
    "changes" : 116,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/GameView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/GameView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/GameView.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,116 @@\n+package com.example.link2link.view;\n+\n+import java.util.List;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.BitmapShader;\n+import android.graphics.Canvas;\n+import android.graphics.Paint;\n+import android.graphics.Point;\n+import android.graphics.Shader;\n+import android.util.AttributeSet;\n+import android.view.View;\n+\n+import com.example.link2link.R;\n+import com.example.link2link.board.GameService;\n+import com.example.link2link.object.LinkInfo;\n+import com.example.link2link.util.ImageUtil;\n+\n+public class GameView extends View {\n+\n+\t// ��Ϸ�߼���ʵ����\n+\tprivate GameService gameService;\n+\t// ���浱ǰ�Ѿ���ѡ�еķ���\n+\tprivate Piece selectedPiece;\n+\t// �����Ϣ����\n+\tprivate LinkInfo linkInfo;\n+\tprivate Paint paint;\n+\t// ѡ�б�ʶ��ͼƬ����\n+\tprivate Bitmap selectImage;\n+\n+\tpublic GameView(Context context, AttributeSet attrs) {\n+\t\tsuper(context, attrs);\n+\t\tthis.paint = new Paint();\n+\t\t// ʹ��λͼƽ����Ϊ��������̫��ף�\n+\t\tthis.paint.setShader(new BitmapShader(BitmapFactory.decodeResource(\n+\t\t\t\tcontext.getResources(), R.drawable.heart),\n+\t\t\t\tShader.TileMode.REPEAT, Shader.TileMode.REPEAT));\n+\t\t// ��������ߵĴ�ϸ\n+\t\tthis.paint.setStrokeWidth(9);\n+\t\tthis.selectImage = ImageUtil.getSelectImage(context);\n+\t}\n+\n+\tpublic void setLinkInfo(LinkInfo linkInfo) {\n+\t\tthis.linkInfo = linkInfo;\n+\t}\n+\n+\tpublic void setGameService(GameService gameService) {\n+\t\tthis.gameService = gameService;\n+\t}\n+\n+\t@Override\n+\tprotected void onDraw(Canvas canvas) {\n+\t\tsuper.onDraw(canvas);\n+\t\tif (this.gameService == null) {\n+\t\t\treturn;\n+\t\t}\n+\t\t// ������Ϸ��ǰ״̬������ʣ�¶��ٷ���\n+\t\tPiece[][] pieces = gameService.getPieces();\n+\t\tif (pieces != null) {\n+\t\t\t// ����pieces���������е�piece�����\n+\t\t\tfor (int i = 0; i < pieces.length; i++) {\n+\t\t\t\tfor (int j = 0; j < pieces[i].length; j++) {\n+\t\t\t\t\tif (pieces[i][j] != null) {\n+\t\t\t\t\t\t// �õ����Piece����\n+\t\t\t\t\t\tPiece piece = pieces[i][j];\n+\t\t\t\t\t\t// ��ݷ������Ͻ�X��Y�����Ʒ���\n+\t\t\t\t\t\tcanvas.drawBitmap(piece.getImage().getImage(),\n+\t\t\t\t\t\t\t\tpiece.getBeginX(), piece.getBeginY(), null);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\t// ���ǰ��������linkInfo����, �������Ϣ\n+\t\tif (this.linkInfo != null) {\n+\t\t\t// ���������\n+\t\t\tdrawLine(this.linkInfo, canvas);\n+\t\t\t// ����������linkInfo����\n+\t\t\tthis.linkInfo = null;\n+\t\t}\n+\t\t// ��ѡ�б�ʶ��ͼƬ\n+\t\tif (this.selectedPiece != null) {\n+\t\t\tcanvas.drawBitmap(this.selectImage, this.selectedPiece.getBeginX(),\n+\t\t\t\t\tthis.selectedPiece.getBeginY(), null);\n+\t\t}\n+\t}\n+\n+\t// ���LinkInfo��������ߵķ�����\n+\tprivate void drawLine(LinkInfo linkInfo, Canvas canvas) {\n+\t\t// ��ȡLinkInfo�з�װ��������ӵ�\n+\t\tList<Point> points = linkInfo.getLinkPoints();\n+\t\t// ��α���linkInfo�е�ÿ����ӵ�\n+\t\tfor (int i = 0; i < points.size() - 1; i++) {\n+\t\t\t// ��ȡ��ǰ��ӵ�����һ����ӵ�\n+\t\t\tPoint currentPoint = points.get(i);\n+\t\t\tPoint nextPoint = points.get(i + 1);\n+\t\t\t// �������\n+\t\t\tcanvas.drawLine(currentPoint.x, currentPoint.y, nextPoint.x,\n+\t\t\t\t\tnextPoint.y, this.paint);\n+\t\t}\n+\t}\n+\n+\t// ���õ�ǰѡ�з���ķ���\n+\tpublic void setSelectedPiece(Piece piece) {\n+\t\tthis.selectedPiece = piece;\n+\t}\n+\n+\t// ��ʼ��Ϸ����\n+\tpublic void startGame() {\n+\t\tthis.gameService.start();\n+\t\tthis.postInvalidate();\n+\t}\n+\n+}"
  }, {
    "sha" : "cf1a982d937aa62829f81d654361ae2b9fe9bf71",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/Piece.java",
    "status" : "added",
    "additions" : 86,
    "deletions" : 0,
    "changes" : 86,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/Piece.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/Piece.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/Piece.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,86 @@\n+package com.example.link2link.view;\n+\n+import android.graphics.Point;\n+\n+/**\n+ * ��װ����Ϸ�����ϵķ��飬��������ϵ�ͼƬ����������Ͻ���꣬�����ڶ�ά�����е�����ֵ�� \n+ * ��������ĵ���ж������Ƿ���ͬ���߼�\n+ * \n+ * @author CJP\n+ * \n+ */\n+public class Piece {\n+\n+\t// ��ʾ�÷����ϵ�ͼƬ\n+\tprivate PieceImage image;\n+\t// �ɷ������Ͻǵ������������Ϸ�����е�λ��\n+\t// 1.��ʾ�÷�������Ͻǵ�x���\n+\tprivate int beginX;\n+\t// 2.��ʾ�÷�������Ͻǵ�y���\n+\tprivate int beginY;\n+\t// �ö�����Piece[][]�����е�һά������ֵ\n+\tprivate int indexX;\n+\t// �ö�����Piece[][]�����еڶ�ά������ֵ\n+\tprivate int indexY;\n+\n+\tpublic Piece(int indexX, int indexY) {\n+\t\tsuper();\n+\t\tthis.indexX = indexX;\n+\t\tthis.indexY = indexY;\n+\t}\n+\n+\tpublic PieceImage getImage() {\n+\t\treturn image;\n+\t}\n+\n+\tpublic void setImage(PieceImage image) {\n+\t\tthis.image = image;\n+\t}\n+\n+\tpublic int getBeginX() {\n+\t\treturn beginX;\n+\t}\n+\n+\tpublic void setBeginX(int beginX) {\n+\t\tthis.beginX = beginX;\n+\t}\n+\n+\tpublic int getBeginY() {\n+\t\treturn beginY;\n+\t}\n+\n+\tpublic void setBeginY(int beginY) {\n+\t\tthis.beginY = beginY;\n+\t}\n+\n+\tpublic int getIndexX() {\n+\t\treturn indexX;\n+\t}\n+\n+\tpublic void setIndexX(int indexX) {\n+\t\tthis.indexX = indexX;\n+\t}\n+\n+\tpublic int getIndexY() {\n+\t\treturn indexY;\n+\t}\n+\n+\tpublic void setIndexY(int indexY) {\n+\t\tthis.indexY = indexY;\n+\t}\n+\n+\t// ��ȡ�÷�������ĵ�\n+\tpublic Point getCenter() {\n+\t\treturn new Point(getImage().getImage().getWidth() / 2 + getBeginX(),\n+\t\t\t\tgetImage().getImage().getHeight() / 2 + getBeginY());\n+\t}\n+\n+\t// �ж������ϵ�ͼƬ�Ƿ���ͬ\n+\tpublic boolean isSameImage(Piece other) {\n+\t\tif (image != null) {\n+\t\t\treturn image.getImageId() == other.image.getImageId();\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+}"
  }, {
    "sha" : "873ab63390541d68e15d05799e05b340e2f89c70",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/PieceImage.java",
    "status" : "added",
    "additions" : 40,
    "deletions" : 0,
    "changes" : 40,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/PieceImage.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/PieceImage.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901204/com/example/link2link/view/PieceImage.java?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,40 @@\n+package com.example.link2link.view;\n+\n+import android.graphics.Bitmap;\n+\n+/**\n+ * ��װ�˷����ϵ�ͼƬ���ɱ�ʾͼƬ��Bitmap�����ͼƬ��Դ��Id����\n+ * \n+ * @author CJP\n+ * \n+ */\n+public class PieceImage {\n+\n+\t// ��ʾ�����ϵ�ͼƬ��Bitmap����\n+\tprivate Bitmap image;\n+\t// ��ʾ�����ϵ�ͼƬ��Դ��Id,��Ϊ�ж������ϵ�ͼƬ�Ƿ���ͬ�ı�ʶ\n+\tprivate int imageId;\n+\n+\tpublic PieceImage(Bitmap image, int imageId) {\n+\t\tsuper();\n+\t\tthis.image = image;\n+\t\tthis.imageId = imageId;\n+\t}\n+\n+\tpublic Bitmap getImage() {\n+\t\treturn image;\n+\t}\n+\n+\tpublic void setImage(Bitmap image) {\n+\t\tthis.image = image;\n+\t}\n+\n+\tpublic int getImageId() {\n+\t\treturn imageId;\n+\t}\n+\n+\tpublic void setImageId(int imageId) {\n+\t\tthis.imageId = imageId;\n+\t}\n+\n+}"
  }, {
    "sha" : "44c5e8e955de08bac02e144d4cf1ac26285d377a",
    "filename" : "app/src/main/res/drawable/bg.jpg",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/bg.jpg",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/bg.jpg",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/bg.jpg?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "5f60b002993e2216fed0f25206df2f5f4cfe9a78",
    "filename" : "app/src/main/res/drawable/button_selector.xml",
    "status" : "added",
    "additions" : 11,
    "deletions" : 0,
    "changes" : 11,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/button_selector.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/button_selector.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/button_selector.xml?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc",
    "patch" : "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\t<!-- 指定按钮按下时的图片 -->\n+\t<item android:state_pressed=\"true\"\n+\t\tandroid:drawable=\"@drawable/start_down\"\n+\t/>\n+\t<!-- 指定按钮松开时的图片 -->\t\n+\t<item android:state_pressed=\"false\"\n+\t\tandroid:drawable=\"@drawable/start\"\n+\t/>\n+</selector>\n\\ No newline at end of file"
  }, {
    "sha" : "2a8166b518eb52fde951d1ee1edbf78e13968398",
    "filename" : "app/src/main/res/drawable/heart.gif",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/heart.gif",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/heart.gif",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/heart.gif?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "134d5490bd3310559cc944d44d24857eef29f2a1",
    "filename" : "app/src/main/res/drawable/ic_action_search.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/ic_action_search.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/ic_action_search.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/ic_action_search.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "1ffce89af1587f239a4b986261c29753e3bd309b",
    "filename" : "app/src/main/res/drawable/lost.jpg",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/lost.jpg",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/lost.jpg",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/lost.jpg?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "d317b2138744840796da4003029d9e7eea276356",
    "filename" : "app/src/main/res/drawable/p_1.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_1.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_1.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_1.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "5be40ebf079535e40363e587d5a214de474ab63c",
    "filename" : "app/src/main/res/drawable/p_10.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_10.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_10.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_10.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "ab2f33ef9b06766e3e5c0cfd1d5ea87b7a728c09",
    "filename" : "app/src/main/res/drawable/p_11.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_11.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_11.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_11.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "562934c29ee2ee5862ec16588f07ce33cfc94d36",
    "filename" : "app/src/main/res/drawable/p_12.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_12.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_12.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_12.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "93eb85e61e8bd0cb6ed3cceaf6acdd8f532af98d",
    "filename" : "app/src/main/res/drawable/p_13.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_13.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_13.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_13.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "98340157d159d0920daa1aa91877f2fe061fd865",
    "filename" : "app/src/main/res/drawable/p_14.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_14.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_14.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_14.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "c72247ed91ab23220194483c086b27b7d7c2fc33",
    "filename" : "app/src/main/res/drawable/p_15.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_15.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_15.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_15.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "6e61129f4d3d41f806e9291519c751db6e2778ec",
    "filename" : "app/src/main/res/drawable/p_16.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_16.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_16.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_16.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "e5ecf29f17c1c3274ef893a7632a9f5a5d505b13",
    "filename" : "app/src/main/res/drawable/p_17.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_17.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_17.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_17.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "a2ba28770362ebf33e416fdb5e1a8f68e5aa9a99",
    "filename" : "app/src/main/res/drawable/p_18.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_18.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_18.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_18.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "1e77f74ffd425a4a647b5b8635c1b30d75b45187",
    "filename" : "app/src/main/res/drawable/p_19.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_19.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_19.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_19.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "ff88628531b9a6d6ab382687e077f5737d49dcfc",
    "filename" : "app/src/main/res/drawable/p_2.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_2.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_2.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_2.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "38ae8359a0bf4c5a10a5b5b24e0b13cd1dca4b7b",
    "filename" : "app/src/main/res/drawable/p_20.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_20.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_20.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_20.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "daf7a5c34813ed11e4e59fe76bfa50cd7b20f0af",
    "filename" : "app/src/main/res/drawable/p_3.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_3.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_3.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_3.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "12d29187ca49641d67ab201f135e7ab879160b80",
    "filename" : "app/src/main/res/drawable/p_4.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_4.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_4.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_4.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "9301f52bf8ba604cd2be2e7d3db6ffca94c7d57c",
    "filename" : "app/src/main/res/drawable/p_5.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_5.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_5.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_5.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "4e5eafdd58d3be7f0a11508ca6808ed160beadb9",
    "filename" : "app/src/main/res/drawable/p_6.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_6.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_6.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_6.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "f714c68ce4d0d3abfe8d92f7fef262cf678c8a9a",
    "filename" : "app/src/main/res/drawable/p_7.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_7.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_7.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_7.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "9015596bbd96eae857280c3b2470ca6f205fe6bb",
    "filename" : "app/src/main/res/drawable/p_8.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_8.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_8.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_8.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "8be306da84490db3e5b4c80f70b7c5e57c86ac97",
    "filename" : "app/src/main/res/drawable/p_9.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_9.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/p_9.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/p_9.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "df99729ca979c8ee1994e29ab1498321a9527bd2",
    "filename" : "app/src/main/res/drawable/pause.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/pause.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/pause.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/pause.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "cb675cc9ca5c6e175f8242ce88a2f60de490b9a4",
    "filename" : "app/src/main/res/drawable/play.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/play.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/play.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/play.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "cb0ce146b21021a108addf52266c285ffa6f505a",
    "filename" : "app/src/main/res/drawable/selected.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/selected.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/selected.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/selected.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "7a059c937f0652b83fc259235bdb084cf2463592",
    "filename" : "app/src/main/res/drawable/start.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/start.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/start.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/start.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "7a83c5c01c9b965bd3466ae59dc8dbe2481a563b",
    "filename" : "app/src/main/res/drawable/start_down.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/start_down.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/start_down.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/start_down.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "66eecf2b5cccc8d3744ef3cea8c389082d3dcd65",
    "filename" : "app/src/main/res/drawable/stop.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/stop.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/stop.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/stop.png?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  }, {
    "sha" : "a4780fbf3b07393554c06a7f7ed363c349c1eeb4",
    "filename" : "app/src/main/res/drawable/success.gif",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/success.gif",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/008f6b82ca7433092ef847b4bf37ac016e4091dc/app/src/main/res/drawable/success.gif",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/success.gif?ref=008f6b82ca7433092ef847b4bf37ac016e4091dc"
  } ],
  "sha" : "008f6b82ca7433092ef847b4bf37ac016e4091dc",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/008f6b82ca7433092ef847b4bf37ac016e4091dc",
  "parents" : [ {
    "sha" : "c2f588383b8f9b0b6fefdf45830bb04e5b019d0a",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/c2f588383b8f9b0b6fefdf45830bb04e5b019d0a",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/c2f588383b8f9b0b6fefdf45830bb04e5b019d0a"
  } ]
}