{
  "committer" : {
    "login" : "loveincloud",
    "id" : 15902896,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15902896?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/loveincloud",
    "html_url" : "https://github.com/loveincloud",
    "followers_url" : "https://api.github.com/users/loveincloud/followers",
    "following_url" : "https://api.github.com/users/loveincloud/following{/other_user}",
    "gists_url" : "https://api.github.com/users/loveincloud/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/loveincloud/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/loveincloud/subscriptions",
    "organizations_url" : "https://api.github.com/users/loveincloud/orgs",
    "repos_url" : "https://api.github.com/users/loveincloud/repos",
    "events_url" : "https://api.github.com/users/loveincloud/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/loveincloud/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 283,
    "additions" : 282,
    "deletions" : 1
  },
  "author" : {
    "login" : "loveincloud",
    "id" : 15902896,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15902896?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/loveincloud",
    "html_url" : "https://github.com/loveincloud",
    "followers_url" : "https://api.github.com/users/loveincloud/followers",
    "following_url" : "https://api.github.com/users/loveincloud/following{/other_user}",
    "gists_url" : "https://api.github.com/users/loveincloud/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/loveincloud/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/loveincloud/subscriptions",
    "organizations_url" : "https://api.github.com/users/loveincloud/orgs",
    "repos_url" : "https://api.github.com/users/loveincloud/repos",
    "events_url" : "https://api.github.com/users/loveincloud/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/loveincloud/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/03217568112fb8f713b7a85772a05699ea1f987c",
  "commit" : {
    "author" : {
      "name" : "loveincloud",
      "email" : "2587687121@qq.com",
      "date" : "2016-05-04T01:03:48Z"
    },
    "committer" : {
      "name" : "loveincloud",
      "email" : "2587687121@qq.com",
      "date" : "2016-05-04T01:03:48Z"
    },
    "message" : "#90 #58 labs4",
    "tree" : {
      "sha" : "15f05fd081a9a79698a65bb2035bc52e3f5f3072",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/15f05fd081a9a79698a65bb2035bc52e3f5f3072"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/03217568112fb8f713b7a85772a05699ea1f987c",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/03217568112fb8f713b7a85772a05699ea1f987c/comments",
  "files" : [ {
    "sha" : "07c1b7e3b7340e791e755a64201ed7c24d0f7dc6",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MainActivity.java",
    "status" : "modified",
    "additions" : 232,
    "deletions" : 1,
    "changes" : 233,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/03217568112fb8f713b7a85772a05699ea1f987c/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MainActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/03217568112fb8f713b7a85772a05699ea1f987c/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MainActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MainActivity.java?ref=03217568112fb8f713b7a85772a05699ea1f987c",
    "patch" : "@@ -1,13 +1,244 @@\n package edu.hzuapps.androidworks.homeworks.net1314080903215;\n \n+import android.os.AsyncTask;\n+import android.os.Handler;\n+import android.os.Message;\n import android.support.v7.app.AppCompatActivity;\n import android.os.Bundle;\n+import android.view.View;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.net.InetSocketAddress;\n+import java.net.Socket;\n+\n+public class Net1314080903215_MainActivity extends AppCompatActivity{\n+\n+    //----------------------------- UI变量 ---------------------------\n+    private TextView tvIP;\n+\n+    //----------------------------------------------------------------\n+    private Handler handler;\n+    private Socket client;\n+    private String ip;\n+    private DataInputStream dis;\n+    private DataOutputStream dos;\n+\n+\n \n-public class Net1314080903215_MainActivity extends AppCompatActivity {\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_net1314080903215__main);\n+\n+        tvIP = (TextView) findViewById(R.id.tvIP);\n+\n+        //接收扫描IP线程返回的可用IP地址\n+        handler = new Handler(){\n+            @Override\n+            public void handleMessage(Message msg) {\n+                super.handleMessage(msg);\n+                switch (msg.what){\n+                    case 1000:\n+                        ip = (String) msg.obj;  //获取扫描的IP地址\n+                        tvIP.setText(ip);   //在界面中显示\n+                        break;\n+                    case 2000:\n+                        Toast.makeText(Net1314080903215_MainActivity.this, msg.obj.toString(), Toast.LENGTH_SHORT).show();\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            }\n+        };\n+\n+        //添加五个按钮的点击事件\n+        //扫描IP\n+        findViewById(R.id.btnScan).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                scan();\n+            }\n+        });\n+        //连接PC\n+        findViewById(R.id.btnConnect).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                connect();\n+            }\n+        });\n+        //关机\n+        findViewById(R.id.btnShutdown).setOnClickListener(new View.OnClickListener(){\n+            @Override\n+            public void onClick(View v) {\n+                shutdown();\n+            }\n+        });\n+        //重启\n+        findViewById(R.id.btnRestart).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                restart();\n+            }\n+        });\n+        //取消\n+        findViewById(R.id.btnCancel).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                cancel();\n+            }\n+        });\n+\n+    }\n+\n+\n+\n+    //----------------------------- 操作实现方法 -----------------------------------------------\n+    public void scan(){\n+        Net1314080903215_MyWifi net1314080903215MyWifi = new Net1314080903215_MyWifi(Net1314080903215_MainActivity.this);\n+        new ScanIP(net1314080903215MyWifi).start();\n+    }\n+\n+    public void connect(){\n+        Toast.makeText(Net1314080903215_MainActivity.this, \"尝试连接服务端\", Toast.LENGTH_SHORT).show();\n+        AsyncTask<String, String, Socket> connect_server = new AsyncTask<String, String, Socket>() {\n+            @Override\n+            protected Socket doInBackground(String... params) {\n+                Socket socket = null;\n+                try {\n+                    socket = new Socket(params[0], 30000);\n+                    publishProgress(\"@success\");\n+                } catch (IOException e) {\n+                    //Toast.makeText(Net1314080903215_MainActivity.this, \"无法建立连接\", Toast.LENGTH_SHORT).show();\n+                    System.out.println(\"连接服务端失败\");\n+                }\n+                return socket;\n+            }\n+\n+            @Override\n+            protected void onProgressUpdate(String... values) {\n+                if(values[0].equals(\"@success\")){\n+                    Toast.makeText(Net1314080903215_MainActivity.this, \"连接服务端成功！\", Toast.LENGTH_SHORT).show();\n+                }\n+                super.onProgressUpdate(values);\n+            }\n+\n+            @Override\n+            protected void onPostExecute(Socket socket) {\n+                client = socket;\n+                try {\n+                    dos = new DataOutputStream(socket.getOutputStream());\n+                    dis = new DataInputStream(socket.getInputStream());\n+                    //启动接收服务端发来消息的线程\n+                    new Receive(dis).start();\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                }\n+                super.onPostExecute(socket);\n+            }\n+        };\n+        connect_server.execute(ip); //启动\n     }\n+\n+    public void shutdown(){\n+        send(\"shutdown\");\n+    }\n+\n+    public void restart(){\n+        send(\"restart\");\n+    }\n+\n+    public void cancel(){\n+        send(\"cancel\");\n+    }\n+\n+    //------------------------------- 通过Socket发送消息 -----------------------------------------------\n+    public void send(String msg){\n+        if(dos!=null){\n+            try {\n+                dos.writeUTF(msg);\n+                dos.flush();\n+//                if(dis!=null){\n+//                    String str = dis.readUTF();\n+////                    Toast.makeText(Net1314080903215_MainActivity.this, str, Toast.LENGTH_SHORT).show();\n+//                    System.out.println(str);\n+//                }else{\n+//                    System.out.println(\"dis is null\");\n+//                }\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+\n+        }else{\n+            System.out.println(\"dos is null\");\n+        }\n+    }\n+\n+    //------------------------------- 扫描IP的线程 ----------------------------------------------------\n+    class ScanIP extends Thread{\n+        String findIP;\n+        Net1314080903215_MyWifi net1314080903215MyWifi;\n+        ScanIP(Net1314080903215_MyWifi net1314080903215MyWifi){\n+            this.net1314080903215MyWifi = net1314080903215MyWifi;\n+        }\n+        @Override\n+        public void run() {\n+            String serverIP = net1314080903215MyWifi.getServerIp();\n+            int t = serverIP.lastIndexOf(\".\") + 1;\n+            String resultIP = serverIP.substring(0, t);\n+            for(int i=1; i<255; i++){\n+                Socket socket = new Socket();\n+                InetSocketAddress s = new InetSocketAddress(resultIP + i, 30000);\n+                try {\n+                    socket.connect(s, 50);\n+                    socket.close();\n+\n+                    //把IP发给主UI\n+                    Message msg = Message.obtain();\n+                    msg.what = 1000;\n+                    msg.obj = resultIP + i;\n+                    handler.sendMessage(msg);\n+\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                }\n+                findIP = resultIP + i;\n+                break;\n+            }\n+            super.run();\n+        }\n+    }\n+\n+    //---------------------------------- 侦听发送过来消息的线程 ---------------------------------------\n+    class Receive extends Thread{\n+        private DataInputStream dis;\n+        Receive(DataInputStream dis){\n+            this.dis = dis;\n+        }\n+\n+        @Override\n+        public void run() {\n+            String str;\n+            if(dis!=null){\n+                while(true){\n+                    try {\n+                        str = dis.readUTF();\n+                        Message msg = Message.obtain();\n+                        msg.what = 2000;\n+                        msg.obj = str;\n+                        handler.sendMessage(msg);\n+                    } catch (IOException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            }else{\n+                System.out.println(\"dis is null\");\n+            }\n+        }\n+    }\n+\n }"
  }, {
    "sha" : "a56723f2401f4dd0c7d8fdba6a477a2c72af1ece",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MyWifi.java",
    "status" : "added",
    "additions" : 50,
    "deletions" : 0,
    "changes" : 50,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/03217568112fb8f713b7a85772a05699ea1f987c/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MyWifi.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/03217568112fb8f713b7a85772a05699ea1f987c/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MyWifi.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903215/Net1314080903215_MyWifi.java?ref=03217568112fb8f713b7a85772a05699ea1f987c",
    "patch" : "@@ -0,0 +1,50 @@\n+package edu.hzuapps.androidworks.homeworks.net1314080903215;\n+\n+import android.content.Context;\n+import android.net.DhcpInfo;\n+import android.net.wifi.WifiInfo;\n+import android.net.wifi.WifiManager;\n+\n+/**\n+ * Created by Administrator on 2016/4/12.\n+ */\n+public class Net1314080903215_MyWifi {\n+    private WifiManager wifiManager;\n+    private WifiInfo wifiInfo;\n+    private DhcpInfo dhcpInfo;\n+\n+    public Net1314080903215_MyWifi(Context context){\n+        wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);\n+        wifiInfo = wifiManager.getConnectionInfo();\n+        dhcpInfo = wifiManager.getDhcpInfo();\n+    }\n+    //得到本机ip\n+    public String getLocalIp(){\n+        return FormatString(dhcpInfo.ipAddress);\n+    }\n+    //得到服务器ip（热点ip）\n+    public String getServerIp(){\n+        return FormatString(dhcpInfo.serverAddress);\n+    }\n+    //转换ip格式为*.*.*.*\n+    public String FormatString(int value){\n+        String strValue = \"\";\n+        byte[] ary = intToByteArray(value);\n+        for(int i = ary.length - 1; i>=0; i--){\n+            strValue += (ary[i]&0xFF);\n+            if(i>0){\n+                strValue += \".\";\n+            }\n+        }\n+        return strValue;\n+    }\n+\n+    private byte[] intToByteArray(int value) {\n+        byte[] b = new byte[4];\n+        for(int i=0; i<4; i++){\n+            int offset = (b.length - 1 - i)*8;\n+            b[i] = (byte) ((value>>>offset)&0xFF);\n+        }\n+        return b;\n+    }\n+}"
  } ],
  "sha" : "03217568112fb8f713b7a85772a05699ea1f987c",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/03217568112fb8f713b7a85772a05699ea1f987c",
  "parents" : [ {
    "sha" : "a329a8fc6f94a39a50b34c567503d967e6ef875c",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/a329a8fc6f94a39a50b34c567503d967e6ef875c",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/a329a8fc6f94a39a50b34c567503d967e6ef875c"
  } ]
}