{
  "committer" : {
    "login" : "zengsn",
    "id" : 627946,
    "avatar_url" : "https://avatars.githubusercontent.com/u/627946?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zengsn",
    "html_url" : "https://github.com/zengsn",
    "followers_url" : "https://api.github.com/users/zengsn/followers",
    "following_url" : "https://api.github.com/users/zengsn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zengsn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zengsn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zengsn/subscriptions",
    "organizations_url" : "https://api.github.com/users/zengsn/orgs",
    "repos_url" : "https://api.github.com/users/zengsn/repos",
    "events_url" : "https://api.github.com/users/zengsn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zengsn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 450,
    "additions" : 450,
    "deletions" : 0
  },
  "author" : {
    "login" : "zengsn",
    "id" : 627946,
    "avatar_url" : "https://avatars.githubusercontent.com/u/627946?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zengsn",
    "html_url" : "https://github.com/zengsn",
    "followers_url" : "https://api.github.com/users/zengsn/followers",
    "following_url" : "https://api.github.com/users/zengsn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zengsn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zengsn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zengsn/subscriptions",
    "organizations_url" : "https://api.github.com/users/zengsn/orgs",
    "repos_url" : "https://api.github.com/users/zengsn/repos",
    "events_url" : "https://api.github.com/users/zengsn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zengsn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
  "commit" : {
    "author" : {
      "name" : "Zeng Shaoning",
      "email" : "shaoning.zeng@gmail.com",
      "date" : "2016-05-27T15:46:02Z"
    },
    "committer" : {
      "name" : "Zeng Shaoning",
      "email" : "shaoning.zeng@gmail.com",
      "date" : "2016-05-27T15:46:02Z"
    },
    "message" : "Merge pull request #854 from zhapingzi/master\n\n#90 #95 #49 labs4 & labs9",
    "tree" : {
      "sha" : "1c200d3c625905d2c298b1597feccba1e0efaf4e",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/1c200d3c625905d2c298b1597feccba1e0efaf4e"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/comments",
  "files" : [ {
    "sha" : "7fcf92eca7d994edfa0186fb52a0bb34d7623bde",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_MainActivity.java",
    "status" : "added",
    "additions" : 47,
    "deletions" : 0,
    "changes" : 47,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_MainActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_MainActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_MainActivity.java?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
    "patch" : "@@ -0,0 +1,47 @@\n+package edu.hzuapps.androidworks.homeworks.net1314080903149;\n+\n+import android.os.Bundle;\n+import android.support.design.widget.FloatingActionButton;\n+import android.support.design.widget.Snackbar;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.Toolbar;\n+import android.view.View;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+\n+public class Net1314080903149_MainActivity extends AppCompatActivity {\n+\n+    private Net1314080903149_wuziqiPanel net1314080903149_wuziqiPanel;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_net1314080903149__main);\n+        net1314080903149_wuziqiPanel= (Net1314080903149_wuziqiPanel) findViewById(R.id.Zp);\n+\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        // Inflate the menu; this adds items to the action bar if it is present.\n+        getMenuInflater().inflate(R.menu.menu_net1314080903149__main, menu);\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+        // Handle action bar item clicks here. The action bar will\n+        // automatically handle clicks on the Home/Up button, so long\n+        // as you specify a parent activity in AndroidManifest.xml.\n+        int id = item.getItemId();\n+\n+        //noinspection SimplifiableIfStatement\n+        if (id == R.id.action_settings) {\n+            net1314080903149_wuziqiPanel.start();\n+            return true;\n+        }\n+\n+        return super.onOptionsItemSelected(item);\n+    }\n+}\n+"
  }, {
    "sha" : "bc4468c3dc62e49efa02ecaad23fb9191a00ffb8",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_wuziqiPanel.java",
    "status" : "added",
    "additions" : 354,
    "deletions" : 0,
    "changes" : 354,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_wuziqiPanel.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_wuziqiPanel.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903149/Net1314080903149_wuziqiPanel.java?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
    "patch" : "@@ -0,0 +1,354 @@\n+package edu.hzuapps.androidworks.homeworks.net1314080903149;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+import android.graphics.Paint;\n+import android.graphics.Point;\n+import android.os.Bundle;\n+import android.os.Parcelable;\n+import android.util.AttributeSet;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.widget.Toast;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Created by Administrator on 2016/5/27.\n+ */\n+public class Net1314080903149_wuziqiPanel extends View\n+{\n+    private int mPanelWidth;\n+    private float mLineHeight;\n+    private int MAX_LINE=10;\n+    private int MAX_COUNT_IN_LINE=5;    //设置一个常量，相邻的同色棋子最多5个\n+\n+    private Paint mPaint = new Paint();\n+\n+    private Bitmap mWhitePiece;\n+    private Bitmap mBlackPiece;\n+\n+    private float ratioPiece0fLightHeight=3*1.0f/4;    //棋子的大小是行高的3/4\n+\n+    private boolean mIsWhite=true;                            //白棋先走\n+    private ArrayList<Point> mWhiteArray=new ArrayList<>();   //存放玩家点击的坐标\n+    private ArrayList<Point> mBlackArray=new ArrayList<>();\n+\n+    private boolean mIsGameOver;\n+    private boolean mIsWhiteWinner;\n+\n+    public Net1314080903149_wuziqiPanel(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        //setBackgroundColor(0x44ff0000);\n+        init();\n+    }\n+\n+    private void init() {\n+        mPaint.setColor(0x88000000);       //网格颜色是灰色，半透明\n+        mPaint.setAntiAlias(true);\n+        mPaint.setDither(true);\n+        mPaint.setStyle(Paint.Style.STROKE);\n+\n+        mWhitePiece= BitmapFactory.decodeResource(getResources(), R.drawable.stone_w2);   //引入棋子的图片\n+        mBlackPiece= BitmapFactory.decodeResource(getResources(),R.drawable.stone_b1);\n+    }\n+\n+    @Override\n+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+        int widthSize = MeasureSpec.getSize(widthMeasureSpec);\n+        int widthMode = MeasureSpec.getMode(widthMeasureSpec);\n+\n+        int heightSize = MeasureSpec.getSize(heightMeasureSpec);\n+        int heighMode = MeasureSpec.getMode(heightMeasureSpec);\n+\n+        int width =Math.min(widthSize, heightSize);\n+        if (widthMode==MeasureSpec.UNSPECIFIED)\n+        {\n+            width=heightSize;\n+        }else if (heighMode==MeasureSpec.UNSPECIFIED)\n+        {\n+            width=widthSize;\n+        }\n+        setMeasuredDimension(width, width);\n+    }\n+\n+    @Override\n+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {     //对尺寸相关的一些变量进行赋值\n+        super.onSizeChanged(w, h, oldw, oldh);\n+\n+        mPanelWidth=w;\n+        mLineHeight=mPanelWidth*1.0f/MAX_LINE;   //行高\n+\n+        int pieceWidth = (int) (mLineHeight*ratioPiece0fLightHeight);         //定义棋子的大小\n+        mWhitePiece=Bitmap.createScaledBitmap(mWhitePiece,pieceWidth,pieceWidth,false);\n+        mBlackPiece=Bitmap.createScaledBitmap(mBlackPiece,pieceWidth,pieceWidth,false);\n+    }\n+\n+    @Override\n+    public boolean onTouchEvent(MotionEvent event) {\n+        int action = event.getAction();\n+        if(action==MotionEvent.ACTION_UP)\n+        {\n+            if(mIsGameOver) return false;      //如果游戏结束，return false\n+            int x= (int) event.getX();\n+            int y= (int) event.getY();\n+            Point p =getValidPoint(x,y);\n+\n+            if (mWhiteArray.contains(p)||mBlackArray.contains(p))\n+            {\n+                return false;\n+            }\n+\n+            if(mIsWhite)\n+            {\n+                mWhiteArray.add(p);\n+            }else\n+            {\n+                mBlackArray.add(p);\n+            }\n+            invalidate();\n+            mIsWhite=!mIsWhite;\n+\n+        }\n+        return true;\n+    }\n+\n+    private Point getValidPoint(int x, int y) {\n+        return new Point((int)(x/mLineHeight), (int) (y/mLineHeight));\n+    }\n+\n+\n+    @Override\n+    protected void onDraw(Canvas canvas) {\n+        super.onDraw(canvas);\n+        drawBoard(canvas);     //创建一个方法，用来绘制棋盘\n+        drawPieces(canvas);   //创建一个方法，用来绘制棋子\n+        checkGameOver();     //创建一个方法，游戏结束\n+    }\n+\n+    private void checkGameOver() {                              //检查是否已经有五子连珠了\n+        boolean whitewin= checkFiveInLine(mWhiteArray);        //白棋赢\n+        boolean blackwin= checkFiveInLine(mBlackArray);        //黑棋赢\n+        if(whitewin||blackwin)\n+        {\n+            mIsGameOver=true;                              //白棋赢或黑棋赢，游戏结束\n+            mIsWhiteWinner=whitewin;\n+            String text=mIsWhiteWinner?\"白棋胜利\":\"黑棋胜利\";   //如果白棋胜利，显示白棋胜利，否则显示黑棋胜利\n+            Toast.makeText(getContext(), text, Toast.LENGTH_SHORT).show();\n+        }\n+    }\n+\n+    private boolean checkFiveInLine(List<Point> points) {         //判断是否五子连珠\n+        for (Point p:points)            //针对每一个棋子进行循环\n+        {\n+            int x =p.x;\n+            int y =p.y;\n+            boolean win =checkHorizontal(x,y,points);\n+            if (win)return true;\n+            win=checkVertical(x,y,points);\n+            if (win)return true;\n+            win=checkLeftDiagonal(x,y,points);\n+            if (win)return true;\n+            win=checkRightDiagonal(x,y,points);\n+            if (win)return true;\n+        }\n+        return false;\n+    }\n+\n+    private boolean checkHorizontal(int x, int y, List<Point> points) {        //判断x,y位置的棋子，横向相邻的棋子是否五个同色\n+        int count=1;\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断横向左边棋子个数\n+        {\n+            if(points.contains(new Point(x-i,y)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;\n+\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断横向右边边棋子个数\n+        {\n+            if(points.contains(new Point(x+i,y)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;  //如果相邻棋子达到5个，return true\n+\n+        return false;\n+    }\n+\n+    private boolean checkVertical(int x, int y, List<Point> points) {        //判断x,y位置的棋子，纵向相邻的棋子是否五个同色\n+        int count=1;\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断纵向上边棋子个数\n+        {\n+            if(points.contains(new Point(x,y-i)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;\n+\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断纵向下边棋子个数\n+        {\n+            if(points.contains(new Point(x,y+i)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;  //如果相邻棋子达到5个，return true\n+\n+        return false;\n+    }\n+\n+    private boolean checkLeftDiagonal(int x, int y, List<Point> points) {        //判断x,y位置的棋子，左斜相邻的棋子是否五个同色\n+        int count=1;\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断左斜左下棋子个数\n+        {\n+            if(points.contains(new Point(x-i,y+i)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;\n+\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断左斜右上棋子个数\n+        {\n+            if(points.contains(new Point(x+i,y-i)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;  //如果相邻棋子达到5个，return true\n+\n+        return false;\n+    }\n+\n+    private boolean checkRightDiagonal(int x, int y, List<Point> points) {        //判断x,y位置的棋子，右斜的棋子是否五个同色\n+        int count=1;\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断右斜左上棋子个数\n+        {\n+            if(points.contains(new Point(x-i,y-i)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;\n+\n+        for (int i=1;i<MAX_COUNT_IN_LINE;i++)      //判断右斜右上棋子个数\n+        {\n+            if(points.contains(new Point(x+i,y+i)))\n+            {\n+                count++;\n+            }else\n+            {\n+                break;        //不是同色棋子结束循环\n+            }\n+        }\n+\n+        if (count==MAX_COUNT_IN_LINE) return true;  //如果相邻棋子达到5个，return true\n+\n+        return false;\n+    }\n+\n+\n+    private void drawPieces(Canvas canvas) {\n+        for(int i=0,n=mWhiteArray.size();i<n;i++)     //绘制白子\n+        {\n+            Point whitePoint = mWhiteArray.get(i);\n+            canvas.drawBitmap(mWhitePiece,\n+                    (whitePoint.x+(1-ratioPiece0fLightHeight)/2)*mLineHeight,\n+                    (whitePoint.y+(1-ratioPiece0fLightHeight)/2)*mLineHeight,null);\n+        }\n+\n+        for(int i=0,n=mBlackArray.size();i<n;i++)     //绘制黑子\n+        {\n+            Point blackPoint = mBlackArray.get(i);\n+            canvas.drawBitmap(mBlackPiece,\n+                    (blackPoint.x+(1-ratioPiece0fLightHeight)/2)*mLineHeight,\n+                    (blackPoint.y+(1-ratioPiece0fLightHeight)/2)*mLineHeight,null);\n+        }\n+    }\n+\n+    private void drawBoard(Canvas canvas) {     //绘制棋盘\n+        int w= mPanelWidth;                    //棋盘宽度\n+        float lineHeight = mLineHeight;\n+        for (int i=0;i<MAX_LINE;i++)\n+        {\n+            int startX=(int)(lineHeight/2);      //起始坐标\n+            int endX=(int)(w-lineHeight/2);     //结束坐标\n+            int y=(int)((0.5+i)*lineHeight);\n+            canvas.drawLine(startX,y,endX,y,mPaint);     //绘制横线\n+            canvas.drawLine(y,startX,y,endX,mPaint);    //绘制纵线\n+        }\n+    }\n+\n+    public void start()\n+    {\n+        mWhiteArray.clear();\n+        mBlackArray.clear();\n+        mIsGameOver=false;\n+        mIsWhiteWinner = false;\n+        invalidate();\n+    }\n+\n+    private static final String INSTANCE =\"instance\";\n+    private static final String INSTANCE_GAME_OVER =\"instance_game_over\";\n+    private static final String INSTANCE_WHITE_ARRAY =\"instance_white_array\";\n+    private static final String INSTANCE_BLACK_ARRAY =\"instance_black_array\";\n+\n+    @Override\n+    protected Parcelable onSaveInstanceState() {              //对棋子位置的存储\n+        Bundle bundle = new Bundle();\n+        bundle.putParcelable(INSTANCE, super.onSaveInstanceState());\n+        bundle.putBoolean(INSTANCE_GAME_OVER, mIsGameOver);\n+        bundle.putParcelableArrayList(INSTANCE_WHITE_ARRAY, mWhiteArray);\n+        bundle.putParcelableArrayList(INSTANCE_BLACK_ARRAY, mBlackArray);\n+        return bundle;\n+    }\n+\n+    @Override\n+    protected void onRestoreInstanceState(Parcelable state) {        //对棋子位置的恢复\n+        if(state instanceof  Bundle)\n+        {\n+            Bundle bundle=(Bundle)state;\n+            mIsGameOver=bundle.getBoolean(INSTANCE_GAME_OVER);\n+            mWhiteArray=bundle.getParcelableArrayList(INSTANCE_WHITE_ARRAY);\n+            mBlackArray=bundle.getParcelableArrayList(INSTANCE_BLACK_ARRAY);\n+            super.onRestoreInstanceState(bundle.getParcelable(INSTANCE));\n+            return;\n+        }\n+        super.onRestoreInstanceState(state);\n+    }\n+}"
  }, {
    "sha" : "27ec0b2557423a57abf860c14810d58c728902bc",
    "filename" : "app/src/main/res/drawable-xhdpi/bg.jpg",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/drawable-xhdpi/bg.jpg",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/drawable-xhdpi/bg.jpg",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable-xhdpi/bg.jpg?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2"
  }, {
    "sha" : "99a918b15600fbb9a17e828eb405258343952074",
    "filename" : "app/src/main/res/drawable/stone_b1.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/drawable/stone_b1.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/drawable/stone_b1.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/stone_b1.png?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2"
  }, {
    "sha" : "4600346091266865eaa51e10805478969972e0e2",
    "filename" : "app/src/main/res/drawable/stone_w2.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/drawable/stone_w2.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/drawable/stone_w2.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/stone_w2.png?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2"
  }, {
    "sha" : "41922eb30821148a824e8bbc23fa4311563471dd",
    "filename" : "app/src/main/res/layout/activity_net1314080903149__main.xml",
    "status" : "added",
    "additions" : 20,
    "deletions" : 0,
    "changes" : 20,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/layout/activity_net1314080903149__main.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/layout/activity_net1314080903149__main.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/layout/activity_net1314080903149__main.xml?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
    "patch" : "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+    <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:tools=\"http://schemas.android.com/tools\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:background=\"@drawable/bg\"\n+        android:paddingBottom=\"16dp\"\n+        tools:context=\"edu.hzuapps.androidworks.homeworks.net1314080903149.Net1314080903149_MainActivity\">\n+\n+\n+        <edu.hzuapps.androidworks.homeworks.net1314080903149.Net1314080903149_wuziqiPanel\n+            android:id=\"@+id/Zp\"\n+            android:layout_centerInParent=\"true\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\" />\n+\n+\n+    </RelativeLayout>\n+\n+"
  }, {
    "sha" : "c5ec33a452421c6be1199ddb4642b37a17e6cd07",
    "filename" : "app/src/main/res/layout/content_net1314080903149__main.xml",
    "status" : "added",
    "additions" : 19,
    "deletions" : 0,
    "changes" : 19,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/layout/content_net1314080903149__main.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/layout/content_net1314080903149__main.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/layout/content_net1314080903149__main.xml?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
    "patch" : "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n+    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n+    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n+    android:paddingTop=\"@dimen/activity_vertical_margin\"\n+    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n+    tools:context=\"edu.hzuapps.androidworks.homeworks.net1314080903149.Net1314080903149_MainActivity\"\n+    tools:showIn=\"@layout/activity_net1314080903149__main\">\n+\n+    <TextView\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"Hello World!\" />\n+</RelativeLayout>"
  }, {
    "sha" : "d2dd92473c3a03ff795c2113bd0d34b5dee57c26",
    "filename" : "app/src/main/res/menu/menu_net1314080903149__main.xml",
    "status" : "added",
    "additions" : 10,
    "deletions" : 0,
    "changes" : 10,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/menu/menu_net1314080903149__main.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2/app/src/main/res/menu/menu_net1314080903149__main.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/menu/menu_net1314080903149__main.xml?ref=1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
    "patch" : "@@ -0,0 +1,10 @@\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    tools:context=\"edu.hzuapps.androidworks.homeworks.net1314080903149.Net1314080903149_MainActivity\">\n+    <item\n+        android:id=\"@+id/action_settings\"\n+        android:orderInCategory=\"100\"\n+        android:title=\"再来一局\"\n+        app:showAsAction=\"never\" />\n+</menu>"
  } ],
  "sha" : "1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/1b9aa32d3dd4c12008d21eb1fe7bd9d15ff264d2",
  "parents" : [ {
    "sha" : "01c84e07c5fdf26b8b0cb3d4a4ec27cfcb672eaa",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/01c84e07c5fdf26b8b0cb3d4a4ec27cfcb672eaa",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/01c84e07c5fdf26b8b0cb3d4a4ec27cfcb672eaa"
  }, {
    "sha" : "bf9d8543bbfc283a7eeefc6e2ff393580901dabd",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/bf9d8543bbfc283a7eeefc6e2ff393580901dabd",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/bf9d8543bbfc283a7eeefc6e2ff393580901dabd"
  } ]
}