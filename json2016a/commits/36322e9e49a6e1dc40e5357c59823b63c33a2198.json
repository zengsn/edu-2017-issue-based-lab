{
  "committer" : {
    "login" : "zengsn",
    "id" : 627946,
    "avatar_url" : "https://avatars.githubusercontent.com/u/627946?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zengsn",
    "html_url" : "https://github.com/zengsn",
    "followers_url" : "https://api.github.com/users/zengsn/followers",
    "following_url" : "https://api.github.com/users/zengsn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zengsn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zengsn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zengsn/subscriptions",
    "organizations_url" : "https://api.github.com/users/zengsn/orgs",
    "repos_url" : "https://api.github.com/users/zengsn/repos",
    "events_url" : "https://api.github.com/users/zengsn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zengsn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 526,
    "additions" : 524,
    "deletions" : 2
  },
  "author" : {
    "login" : "zengsn",
    "id" : 627946,
    "avatar_url" : "https://avatars.githubusercontent.com/u/627946?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zengsn",
    "html_url" : "https://github.com/zengsn",
    "followers_url" : "https://api.github.com/users/zengsn/followers",
    "following_url" : "https://api.github.com/users/zengsn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zengsn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zengsn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zengsn/subscriptions",
    "organizations_url" : "https://api.github.com/users/zengsn/orgs",
    "repos_url" : "https://api.github.com/users/zengsn/repos",
    "events_url" : "https://api.github.com/users/zengsn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zengsn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/36322e9e49a6e1dc40e5357c59823b63c33a2198",
  "commit" : {
    "author" : {
      "name" : "Zeng Shaoning",
      "email" : "shaoning.zeng@gmail.com",
      "date" : "2016-05-25T07:02:23Z"
    },
    "committer" : {
      "name" : "Zeng Shaoning",
      "email" : "shaoning.zeng@gmail.com",
      "date" : "2016-05-25T07:02:23Z"
    },
    "message" : "Merge pull request #824 from lizicong/master\n\n#90 #91 #92 #93 #94 #95 #544 实验4-9",
    "tree" : {
      "sha" : "6e0cc8c6076f49eb0af5c7bc8b5240dde6e17548",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/6e0cc8c6076f49eb0af5c7bc8b5240dde6e17548"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/36322e9e49a6e1dc40e5357c59823b63c33a2198",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/36322e9e49a6e1dc40e5357c59823b63c33a2198/comments",
  "files" : [ {
    "sha" : "ec4d078b89e7351cc4dee51b9fc9f6fbf06285d3",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/Net_1314080903116_MainActivity.java",
    "status" : "modified",
    "additions" : 138,
    "deletions" : 2,
    "changes" : 140,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/Net_1314080903116_MainActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/Net_1314080903116_MainActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/Net_1314080903116_MainActivity.java?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198",
    "patch" : "@@ -1,13 +1,149 @@\n package edu.hzuapps.androidworks.homeworks.net1314080903116;\n \n+import android.app.Activity;\n import android.support.v7.app.ActionBarActivity;\n import android.os.Bundle;\n+import android.view.MotionEvent;\n+import android.view.SurfaceHolder;\n+import android.view.SurfaceView;\n+import android.view.View;\n \n-public class Net_1314080903116_MainActivity extends ActionBarActivity {\n+import edu.hzuapps.androidworks.homeworks.net1314080903116.R;\n+import edu.hzuapps.androidworks.homeworks.net1314080903116.runnable.MyThread;\n+\n+public class Net_1314080903116_MainActivity extends Activity implements SurfaceHolder.Callback, View.OnTouchListener {\n+    private SurfaceView mSurfaceView;\n+    private MyThread thread;\n+    private int w, h;\n+\n+    private int gameType = 2;\n+    private int gameSpan;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n-        setContentView(R.layout.activity_net_1314080903116__main);\n+        // setContentView(R.layout.activity_main);\n+        starGameView();\n+    }\n+\n+    private void starGameView() {\n+        mSurfaceView = new SurfaceView(this);\n+        mSurfaceView.getHolder().addCallback(this);\n+        mSurfaceView.setOnTouchListener(this);\n+        setContentView(mSurfaceView);\n+\n+    }\n+\n+    @Override\n+    public void surfaceCreated(SurfaceHolder holder) {\n+        // 创建画布是初始化\n+        // 得到画板 然后画板和线程绑定\n+        w = mSurfaceView.getWidth();// 画板宽\n+        h = mSurfaceView.getHeight();// 画板高\n+        // 得到游戏区域\n+        // 留1/5显示时间\n+        gameSpan = h * 4 / (5 * gameType);\n+        thread = new MyThread(this, holder, w, h, gameType);\n+        // mSurfaceView.\n+        thread.start();\n     }\n+\n+    @Override\n+    public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+    @Override\n+    public void surfaceDestroyed(SurfaceHolder holder) {\n+        thread.setStart(false);\n+    }\n+\n+    @Override\n+    public boolean onTouch(View v, MotionEvent event) {\n+        // 点击区域让精灵跳起来\n+        switch (thread.getGameStatu())\n+        {\n+            case MyThread.RUNNING:\n+                confirmRole(event);\n+                break;\n+            case MyThread.STANDOFF:\n+                resStart(event);\n+                break;\n+\n+            default:\n+                break;\n+        }\n+\n+        return true;\n+    }\n+\n+    private void resStart(MotionEvent event) {\n+        int action = event.getAction();\n+        switch (action & MotionEvent.ACTION_MASK) {\n+            case MotionEvent.ACTION_DOWN:\n+                // 第一根手指按下\n+                float y = event.getY();\n+                // 点击了重来\n+                if (y >= h * 0.5 / 5 && y <= h * 1 / 5){\n+                    gameType=2;\n+                    starGameView();\n+                }else if(y >= h * 1  / 5 && y <= h * 1.5 / 5){\n+                    gameType=3;\n+                    starGameView();\n+                }\n+\n+                break;\n+\n+            default:\n+                break;\n+        }\n+\n+    }\n+\n+    private void confirmRole(MotionEvent event) {\n+        int action = event.getAction();\n+        switch (action & MotionEvent.ACTION_MASK) {\n+            case MotionEvent.ACTION_DOWN:\n+                // 第一根手指按下\n+                float y = event.getY();\n+                if (thread.isStart())\n+                    roleJump(y);\n+                break;\n+            case MotionEvent.ACTION_POINTER_DOWN:\n+                // 其他手指陆续按下\n+                float y2 = event.getY(event.getPointerCount() - 1);\n+                if (thread.isStart())\n+                    roleJump(y2);\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n+    /**\n+     * 获取对应区域让对应区域人物跳起来\n+     *\n+     * @param y\n+     */\n+    private void roleJump(float y) {\n+        // 找到区域\n+        try {\n+            for (int i = 0; i < gameType; i++) {\n+                // 判断在那一个游戏区域\n+                int lineD = h / 10 + (i + 1) * gameSpan;\n+                int lineU = h / 10 + (i) * gameSpan;\n+                if (y >= lineU && y < lineD && !thread.roles[i].isJump()) {\n+                    thread.roles[i].setSpeedY(-h / 48);\n+                    // 设置跳起状态\n+                    thread.roles[i].setJump(true);\n+                    break;\n+                }\n+            }\n+        } catch (Exception e) {\n+            // TODO: handle exception\n+        }\n+\n+    }\n+\n }"
  }, {
    "sha" : "240d57d67c5b8f73c7b454f14ec6ddd2867cdd7e",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/role/Role.java",
    "status" : "added",
    "additions" : 132,
    "deletions" : 0,
    "changes" : 132,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/role/Role.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/role/Role.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/role/Role.java?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198",
    "patch" : "@@ -0,0 +1,132 @@\n+package edu.hzuapps.androidworks.homeworks.net1314080903116.role;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.Canvas;\n+import android.graphics.Rect;\n+\n+public class Role {\n+\tprivate Bitmap bitmap;// 当前图片\n+\tprivate Bitmap[] bms;// 完成一个动作的图片数组\n+\tprivate float x, y; // 坐标\n+\tprivate int width, height;// 图片的宽高\n+\tprivate int index;// 记录图片下标\n+\tprivate boolean isJump;// 是否跳起来了\n+\n+\tprivate float speedX, speedY;\n+\n+\tprivate long lastTime = 0;\n+\n+\t// 创建精灵\n+\tpublic Role(Bitmap[] bms) {\n+\t\tthis.bms = bms;\n+\t\tthis.bitmap = bms[0];\n+\t\tthis.width = bitmap.getWidth();\n+\t\tthis.height = bitmap.getHeight();\n+\n+\t}\n+\n+\t// 画自己\n+\tpublic void drawSelf(Canvas canvas) {\n+\n+\t\tif (System.currentTimeMillis() - lastTime >= 200) {\n+\t\t\tindex++;\n+\t\t\tif (index == bms.length) {\n+\t\t\t\tindex = 0;\n+\t\t\t}\n+\t\t\tbitmap = bms[index];\n+\t\t\tlastTime=System.currentTimeMillis();\n+\t\t}\n+\t\t//画自己\n+\t\tcanvas.drawBitmap(bitmap, this.getX(), this.getY()-8,null);\n+\n+\t}\n+\n+\tpublic boolean isJump() {\n+\t\treturn isJump;\n+\t}\n+\n+\tpublic void setJump(boolean isJump) {\n+\t\tthis.isJump = isJump;\n+\t}\n+\n+\tpublic Bitmap getBitmap() {\n+\t\treturn bitmap;\n+\t}\n+\n+\tpublic void setBitmap(Bitmap bitmap) {\n+\t\tthis.bitmap = bitmap;\n+\t}\n+\n+\tpublic Bitmap[] getBms() {\n+\t\treturn bms;\n+\t}\n+\n+\tpublic void setBms(Bitmap[] bms) {\n+\t\tthis.bms = bms;\n+\t}\n+\n+\tpublic float getX() {\n+\t\treturn x;\n+\t}\n+\n+\tpublic void setX(float x) {\n+\t\tthis.x = x;\n+\t}\n+\n+\tpublic float getY() {\n+\t\treturn y;\n+\t}\n+\n+\tpublic void setY(float y) {\n+\t\tthis.y = y;\n+\t}\n+\n+\tpublic int getWidth() {\n+\t\treturn width;\n+\t}\n+\n+\tpublic void setWidth(int width) {\n+\t\tthis.width = width;\n+\t}\n+\n+\tpublic int getHeight() {\n+\t\treturn height;\n+\t}\n+\n+\tpublic void setHeight(int height) {\n+\t\tthis.height = height;\n+\t}\n+\n+\tpublic float getSpeedX() {\n+\t\treturn speedX;\n+\t}\n+\n+\tpublic void setSpeedX(float speedX) {\n+\t\tthis.speedX = speedX;\n+\t}\n+\n+\tpublic float getSpeedY() {\n+\t\treturn speedY;\n+\t}\n+\n+\tpublic void setSpeedY(float speedY) {\n+\t\tthis.speedY = speedY;\n+\t}\n+    \n+\t/**\n+\t * 获取任务矩形\n+\t * @return\n+\t */\n+\tpublic Rect getRectFromRole() {\n+\t\tRect rect=new Rect();\n+\t\t//根据role本身\n+\t\trect.left=(int) this.getX()+8;\n+\t\trect.right=(int) (this.getX()+this.getWidth()-10);\n+\t\trect.top=(int) this.getY();\n+\t\trect.bottom=(int) (this.getY()+this.getHeight());\n+\t\t\n+\t\treturn rect;\n+\t}\n+\t\n+\n+}"
  }, {
    "sha" : "2033fe727c311025bc93e3c8418e6e42d278aeb6",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/runnable/MyThread.java",
    "status" : "added",
    "additions" : 246,
    "deletions" : 0,
    "changes" : 246,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/runnable/MyThread.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/runnable/MyThread.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903116/runnable/MyThread.java?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198",
    "patch" : "@@ -0,0 +1,246 @@\n+package edu.hzuapps.androidworks.homeworks.net1314080903116.runnable;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+import android.graphics.Color;\n+import android.graphics.Paint;\n+import android.graphics.PorterDuff;\n+import android.graphics.Rect;\n+import android.view.SurfaceHolder;\n+import edu.hzuapps.androidworks.homeworks.net1314080903116.R;\n+import java.util.Random;\n+\n+import edu.hzuapps.androidworks.homeworks.net1314080903116.role.Role;\n+\n+public class MyThread extends Thread {\n+\n+\tprivate SurfaceHolder holder;\n+\tprivate Context context;\n+\tprivate int w, h;\n+\tprivate int gameType;\n+\n+\tprivate boolean isStart = true;\n+\t// 获得图片\n+\tprivate int[] paths;\n+\tprivate Bitmap[] bms;\n+\n+\t//\n+\tprivate int gameStatu = 0;\n+\t// 保存游戏状态\n+\tpublic static final int RUNNING = 0;\n+\tpublic static final int STANDOFF = 1;\n+\tpublic static final int GAMEOVER = 2;\n+\t// 精灵\n+\n+\tprivate int gameSpan;\n+\n+\tpublic Role[] roles;\n+\tprivate Rect[] rects;\n+\t// 画笔\n+\tprivate Paint paint;\n+\n+\t// 初始化开始时间\n+\tprivate long beginTime;\n+\t// 上一时间毫秒\n+\tprivate long preTime = 0;\n+\t// 记录第一次位置\n+\tprivate float fristLocation = 0;\n+\n+\tpublic MyThread(Context context, SurfaceHolder holder, int w, int h, int gameType) {\n+\n+\t\tthis.holder = holder;\n+\t\tthis.context = context;\n+\t\tthis.w = w;\n+\t\tthis.h = h;\n+\t\tthis.gameType = gameType;\n+\n+\t\tpaint = new Paint();\n+\t\t// 初始化数组\n+\t\tpaths = new int[] { R.drawable.jingling1, R.drawable.jingling2 };\n+\t\tbms = new Bitmap[paths.length];\n+\t\tfor (int i = 0; i < paths.length; i++) {\n+\t\t\t// 根据路径加载图片\n+\t\t\tbms[i] = BitmapFactory.decodeResource(context.getResources(), paths[i]);\n+\t\t}\n+\t\t// 游戏区域\n+\t\tgameSpan = h * 4 / (5 * gameType);\n+\n+\t\troles = new Role[gameType];\n+\t\trects = new Rect[gameType];\n+\n+\t\t// 初始化精灵\n+\t\tinitSpirit();\n+\n+\t}\n+\n+\tprivate void initSpirit() {\n+\t\t// 初始化精灵\n+\t\tfor (int i = 0; i < gameType; i++) {\n+\t\t\t// 画线 Y坐标\n+\t\t\tint lineY = h / 10 + (i + 1) * gameSpan;\n+\t\t\t// 创建精灵\n+\t\t\tRole role = new Role(bms);\n+\t\t\trole.setX(w / 8);\n+\t\t\trole.setY(lineY - role.getHeight());\n+\t\t\troles[i] = role;\n+\t\t\t// 创建障碍物\n+\t\t\tRect rect = new Rect();\n+\t\t\t// 随机障碍物宽高\n+\t\t\tint random_w = (int) (role.getWidth() * (Math.random() * 5 + 1) /(3*gameType));\n+\t\t\tint random_h = (int) (role.getHeight() * (Math.random() * 5 + 1) /(3*gameType));\n+\n+\t\t\trect.left = 3 * w / 2+random_w;\n+\t\t\trect.right = rect.left + random_w;\n+\t\t\trect.bottom = lineY;\n+\t\t\trect.top = rect.bottom - random_h;\n+\t\t\trects[i] = rect;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void run() {\n+\t\tsuper.run();\n+\t\tbeginTime = System.currentTimeMillis();\n+\t\twhile (isStart) {\n+\t\t\t// 获取画布\n+\t\t\tCanvas canvas = null;\n+\t\t\ttry {\n+\t\t\t\tcanvas = holder.lockCanvas();\n+\t\t\t\tif (canvas != null) {\n+\t\t\t\t\t// 开始画\n+\t\t\t\t\tswitch (gameStatu) {\n+\t\t\t\t\tcase RUNNING:\n+\t\t\t\t\t\t// 正常运行\n+\t\t\t\t\t\tdrawRunningView(canvas);\n+\t\t\t\t\t\tbreak;\n+\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\te.printStackTrace();\n+\n+\t\t\t} finally {\n+\t\t\t\tif (canvas != null) {\n+\t\t\t\t\tholder.unlockCanvasAndPost(canvas);\n+\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t}\n+\t}\n+\n+\tprivate void drawRunningView(Canvas canvas) {\n+\t\t// 设置画笔属性\n+\t\tpaint.setStrokeWidth(5);\n+\t\tcanvas.drawColor(Color.WHITE);\n+\t\tfor (int i = 0; i < gameType; i++) {\n+\n+\t\t\t// 画底部部text版权\n+\t\t\tString text = \"李梓聪制造\";\n+\t\t\tpaint.setTextSize(60);\n+\t\t\tcanvas.drawText(text, w / 2 - (text.length() * 60 / 2), h - h / 20, paint);\n+\t\t\t// 画i根线\n+\t\t\tint lineY = h / 10 + (i + 1) * gameSpan;\n+\t\t\t// 模拟精灵向下速度 待完善\n+\n+\t\t\troles[i].setSpeedY(roles[i].getSpeedY() + h*gameType / 3100f);\n+\t\t\troles[i].setY(roles[i].getY() + roles[i].getSpeedY());\n+\n+\t\t\t// 不能掉到线下\n+\t\t\tif (roles[i].getY() + roles[i].getHeight() >= lineY) {\n+\t\t\t\t// 此时已经落到线上了\n+\t\t\t\troles[i].setY(lineY - roles[i].getHeight());\n+\t\t\t\troles[i].setSpeedY(0);\n+\t\t\t\t// 改变状态(先让小人跳起来写在点击区域中的ontouch事件中)\n+\t\t\t\troles[i].setJump(false);\n+\t\t\t}\n+\n+\t\t\t// 让障碍物重右往左移动，改变left和right\n+\t\t\trects[i].left = rects[i].left - (h / 300);\n+\t\t\trects[i].right = rects[i].right - (h / 300);\n+\t\t\t// 障碍物移出界面\n+\t\t\tif (rects[i].right <= 0) {\n+\t\t\t\t// 重新回到右边生成矩形\n+\t\t\t\t// 随机障碍物宽高\n+\t\t\t\tint random_w = (int) (roles[i].getWidth() * (Math.random() * 5 + 1)/(3*gameType));\n+\t\t\t\tint random_h = (int) (roles[i].getHeight() * (Math.random() * 5 + 1)/(3*gameType));\n+\t\t\t\tint random_start = (int) (w * (new Random().nextFloat() / 5));\n+\n+\t\t\t\trects[i].left = 3 * w / 2 + random_start;\n+\t\t\t\trects[i].right = rects[i].left + random_w;\n+\t\t\t\t// bottom不变\n+\t\t\t\t// rects[i].bottom = lineY;\n+\t\t\t\trects[i].top = rects[i].bottom - random_h;\n+\t\t\t}\n+\t\t\t// 碰撞检测 待完善\n+\t\t\tRect roleRect = roles[i].getRectFromRole();\n+\t\t\t// 添加顶部时间\n+\t\t\tlong myTime = System.currentTimeMillis() - beginTime;\n+\t\t\tString myTimeStr = myTime / 1000 + \".\" + myTime % 1000;\n+\t\t\tString timeText = myTimeStr.substring(0, myTimeStr.length() - 1) + \"''\";\n+\n+\t\t\tif (rects[i].intersect(roleRect)) {\n+\t\t\t\tcanvas.drawColor(Color.WHITE,PorterDuff.Mode.CLEAR);\n+\t\t\t\tcanvas.drawColor(Color.WHITE);\n+\t\t\t\tcanvas.drawText(text, w / 2 - (text.length() * 60 / 2), h - h / 20, paint);\n+\t\t\t\t// 已经发生碰撞\n+\t\t\t\t// 改变游戏状态\n+\t\t\t\t// roleRect.\n+\t\t\t\tpaint.setTextSize(50);\n+\t\t\t\tString topText = \"你挂了，本次成绩为\" + myTimeStr.substring(0, myTimeStr.length() - 1) + \"秒!\";\n+\n+\t\t\t\tcanvas.drawText(topText, w / 2 - (topText.length() * 40 / 2), (float) (h * 0.5 / 5), paint);\n+\n+\t\t\t\tcanvas.drawText(\" 普   通  \", w / 2 - (topText.length() * 10 / 2), (float) (h / 5), paint);\n+\t\t\t\tcanvas.drawText(\" 困   难  \", w / 2 - (topText.length() * 10 / 2), (float) (h *1.5/ 5), paint);\n+\n+\t\t\t\tBitmap bitmap=BitmapFactory.decodeResource(context.getResources(), \n+\t\t\t\t\t\tR.drawable.lizicong2);\n+\t\t\t\tcanvas.drawBitmap(bitmap, w / 2 - bitmap.getWidth()/ 2, \n+\t\t\t\t\t\t(float) (h*2/ 5), paint);\n+\t\t\t\tisStart = false;\n+\t\t\t\tgameStatu = STANDOFF;\n+\t\t\t\treturn;\n+\n+\t\t\t} else {\n+\t\t\t\tif (fristLocation <= 0) {\n+\t\t\t\t\tfristLocation = w / 2 - (timeText.length() * 25 / 2);\n+\t\t\t\t}\n+\n+\t\t\t\tif (myTime - preTime > 10) {\n+\t\t\t\t\tcanvas.drawText(timeText, 0, (float) (h * 0.5 / 5), paint);\n+\t\t\t\t\tpreTime = myTime;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// 画线\n+\t\t\tcanvas.drawLine(0, lineY, w, lineY, paint);\n+\t\t\t// 画小人\n+\t\t\troles[i].drawSelf(canvas);\n+\t\t\t// 画障碍物\n+\t\t\tcanvas.drawRect(rects[i], paint);\n+\n+\t\t}\n+\t}\n+\n+\tpublic boolean isStart() {\n+\t\treturn isStart;\n+\t}\n+\n+\tpublic void setStart(boolean isStart) {\n+\t\tthis.isStart = isStart;\n+\t}\n+\n+\tpublic int getGameStatu() {\n+\t\treturn gameStatu;\n+\t}\n+\n+\tpublic void setGameStatu(int gameStatu) {\n+\t\tthis.gameStatu = gameStatu;\n+\t}\n+}"
  }, {
    "sha" : "ba2535f874287841757fce47e83790ef5d7f1236",
    "filename" : "app/src/main/res/drawable/jingling1.jpg",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/jingling1.jpg",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/jingling1.jpg",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/jingling1.jpg?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198"
  }, {
    "sha" : "3341ba2889e1578f2beaf5c6fb9fb81c610b1da2",
    "filename" : "app/src/main/res/drawable/jingling2.jpg",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/jingling2.jpg",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/jingling2.jpg",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/jingling2.jpg?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198"
  }, {
    "sha" : "2bc785853a003d91b25b3645ad6494039b2bc940",
    "filename" : "app/src/main/res/drawable/lizicong.jpg",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/lizicong.jpg",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/lizicong.jpg",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/lizicong.jpg?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198"
  }, {
    "sha" : "ed9f3ab0a8d2df0c135cf8b855aaa3c474a44bcf",
    "filename" : "app/src/main/res/drawable/lizicong2.jpg",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/lizicong2.jpg",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/drawable/lizicong2.jpg",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/lizicong2.jpg?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198"
  }, {
    "sha" : "a354e9122cdeee8a99d18da047f41f35c268ff81",
    "filename" : "app/src/main/res/values/strings_net1314080903116.xml",
    "status" : "added",
    "additions" : 8,
    "deletions" : 0,
    "changes" : 8,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/values/strings_net1314080903116.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/36322e9e49a6e1dc40e5357c59823b63c33a2198/app/src/main/res/values/strings_net1314080903116.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/values/strings_net1314080903116.xml?ref=36322e9e49a6e1dc40e5357c59823b63c33a2198",
    "patch" : "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+\n+    <string name=\"app_name\">仿一个都不能死</string>\n+    <string name=\"action_settings\">Settings</string>\n+    <string name=\"hello_world\">Hello world!</string>\n+\n+</resources>"
  } ],
  "sha" : "36322e9e49a6e1dc40e5357c59823b63c33a2198",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/36322e9e49a6e1dc40e5357c59823b63c33a2198",
  "parents" : [ {
    "sha" : "604a1a60a9df5ddbfacf6bb6ead02734c13c9e9c",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/604a1a60a9df5ddbfacf6bb6ead02734c13c9e9c",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/604a1a60a9df5ddbfacf6bb6ead02734c13c9e9c"
  }, {
    "sha" : "bfc2c73d84025da520b3abb4e0b223b5e74b7398",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/bfc2c73d84025da520b3abb4e0b223b5e74b7398",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/bfc2c73d84025da520b3abb4e0b223b5e74b7398"
  } ]
}