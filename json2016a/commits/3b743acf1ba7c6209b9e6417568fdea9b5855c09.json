{
  "committer" : {
    "login" : "soleMemory",
    "id" : 17998370,
    "avatar_url" : "https://avatars.githubusercontent.com/u/17998370?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/soleMemory",
    "html_url" : "https://github.com/soleMemory",
    "followers_url" : "https://api.github.com/users/soleMemory/followers",
    "following_url" : "https://api.github.com/users/soleMemory/following{/other_user}",
    "gists_url" : "https://api.github.com/users/soleMemory/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/soleMemory/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/soleMemory/subscriptions",
    "organizations_url" : "https://api.github.com/users/soleMemory/orgs",
    "repos_url" : "https://api.github.com/users/soleMemory/repos",
    "events_url" : "https://api.github.com/users/soleMemory/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/soleMemory/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 126,
    "additions" : 62,
    "deletions" : 64
  },
  "author" : {
    "login" : "soleMemory",
    "id" : 17998370,
    "avatar_url" : "https://avatars.githubusercontent.com/u/17998370?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/soleMemory",
    "html_url" : "https://github.com/soleMemory",
    "followers_url" : "https://api.github.com/users/soleMemory/followers",
    "following_url" : "https://api.github.com/users/soleMemory/following{/other_user}",
    "gists_url" : "https://api.github.com/users/soleMemory/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/soleMemory/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/soleMemory/subscriptions",
    "organizations_url" : "https://api.github.com/users/soleMemory/orgs",
    "repos_url" : "https://api.github.com/users/soleMemory/repos",
    "events_url" : "https://api.github.com/users/soleMemory/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/soleMemory/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/3b743acf1ba7c6209b9e6417568fdea9b5855c09",
  "commit" : {
    "author" : {
      "name" : "soleMemory",
      "email" : "2995855759@qq.com",
      "date" : "2016-05-01T00:14:46Z"
    },
    "committer" : {
      "name" : "soleMemory",
      "email" : "2995855759@qq.com",
      "date" : "2016-05-01T00:14:46Z"
    },
    "message" : "#92 #20 lab6",
    "tree" : {
      "sha" : "b9c38813589db98fb924d6d92ba3242d81fe3dfe",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/b9c38813589db98fb924d6d92ba3242d81fe3dfe"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/3b743acf1ba7c6209b9e6417568fdea9b5855c09",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/3b743acf1ba7c6209b9e6417568fdea9b5855c09/comments",
  "files" : [ {
    "sha" : "a46b04c6d8ef7446bb576b1f117505cfd0cbc6b4",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903234/Net1314080903234GPS.java",
    "status" : "modified",
    "additions" : 62,
    "deletions" : 64,
    "changes" : 126,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3b743acf1ba7c6209b9e6417568fdea9b5855c09/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903234/Net1314080903234GPS.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3b743acf1ba7c6209b9e6417568fdea9b5855c09/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903234/Net1314080903234GPS.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903234/Net1314080903234GPS.java?ref=3b743acf1ba7c6209b9e6417568fdea9b5855c09",
    "patch" : "@@ -44,17 +44,17 @@\n     private Button button;\n     private static final String TAG=\"GpsActivity\";\n \n-    //获取当前时间\n+    //鑾峰彇褰撳墠鏃堕棿\n     SimpleDateFormat formatter= new SimpleDateFormat (\"yyyy.MM.dd HH:mm:ss\");\n     Date curDate  = new Date(System.currentTimeMillis());\n     String str = formatter.format(curDate);\n \n-    //设置按钮\n+    //璁剧疆鎸夐挳\n     private View.OnClickListener btnListener= new View.OnClickListener() {\n-        @Override\n+        @Override   \n         public void onClick(View v) {\n             if(getListView().getVisibility()==View.VISIBLE) {\n-                Toast.makeText(getApplicationContext(),\"显示历史记录\",Toast.LENGTH_SHORT).show();\n+                Toast.makeText(getApplicationContext(),\"鏄剧ず鍘嗗彶璁板綍\",Toast.LENGTH_SHORT).show();\n                 setListAdapter(adapter);\n                 refresh();\n             }\n@@ -64,8 +64,6 @@ public void onClick(View v) {\n     };\n \n \n-\n-\n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n@@ -74,7 +72,7 @@ public void onCreate(Bundle savedInstanceState) {\n         button.setOnClickListener(btnListener);\n \n \n-        //读数据库\n+        //璇绘暟鎹簱\n         db =new Db(this);\n         dbRead = db.getReadableDatabase();\n         dbWrite=db.getWritableDatabase();\n@@ -91,40 +89,40 @@ public void onCreate(Bundle savedInstanceState) {\n         editText=(EditText)findViewById(R.id.editText);\n         lm=(LocationManager)getSystemService(Context.LOCATION_SERVICE);\n \n-        //判断GPS是否正常启动\n+        //鍒ゆ柇GPS鏄惁姝ｅ父鍚姩\n         if(!lm.isProviderEnabled(LocationManager.GPS_PROVIDER)){\n-            Toast.makeText(this, \"请开启GPS导航...\", Toast.LENGTH_SHORT).show();\n-            //返回开启GPS导航设置界面\n+            Toast.makeText(this, \"璇峰紑鍚疓PS瀵艰埅...\", Toast.LENGTH_SHORT).show();\n+            //杩斿洖寮�鍚疓PS瀵艰埅璁剧疆鐣岄潰\n             Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\n             startActivityForResult(intent,0);\n             return;\n         }\n \n-        //为获取地理位置信息时设置查询条件\n+        //涓鸿幏鍙栧湴鐞嗕綅缃俊鎭椂璁剧疆鏌ヨ鏉′欢\n         String bestProvider = lm.getBestProvider(getCriteria(), true);\n-        //获取位置信息\n-        //如果不设置查询要求，getLastKnownLocation方法传人的参数为LocationManager.GPS_PROVIDER\n+        //鑾峰彇浣嶇疆淇℃伅\n+        //濡傛灉涓嶈缃煡璇㈣姹傦紝getLastKnownLocation鏂规硶浼犱汉鐨勫弬鏁颁负LocationManager.GPS_PROVIDER\n         Location location= lm.getLastKnownLocation(bestProvider);\n         updateView(location);\n-        //监听状态\n+        //鐩戝惉鐘舵��\n         lm.addGpsStatusListener(listener);\n-        //绑定监听，有4个参数\n-        //参数1，设备：有GPS_PROVIDER和NETWORK_PROVIDER两种\n-        //参数2，位置信息更新周期，单位毫秒\n-        //参数3，位置变化最小距离：当位置距离变化超过此值时，将更新位置信息\n-        //参数4，监听\n-        //备注：参数2和3，如果参数3不为0，则以参数3为准；参数3为0，则通过时间来定时更新；两者为0，则随时刷新\n-\n-        // 1秒更新一次，或最小位移变化超过1米更新一次；\n-        //注意：此处更新准确度非常低，推荐在service里面启动一个Thread，在run中sleep(10000);然后执行handler.sendMessage(),更新位置\n+        //缁戝畾鐩戝惉锛屾湁4涓弬鏁�\n+        //鍙傛暟1锛岃澶囷細鏈塆PS_PROVIDER鍜孨ETWORK_PROVIDER涓ょ\n+        //鍙傛暟2锛屼綅缃俊鎭洿鏂板懆鏈燂紝鍗曚綅姣\n+        //鍙傛暟3锛屼綅缃彉鍖栨渶灏忚窛绂伙細褰撲綅缃窛绂诲彉鍖栬秴杩囨鍊兼椂锛屽皢鏇存柊浣嶇疆淇℃伅\n+        //鍙傛暟4锛岀洃鍚�\n+        //澶囨敞锛氬弬鏁�2鍜�3锛屽鏋滃弬鏁�3涓嶄负0锛屽垯浠ュ弬鏁�3涓哄噯锛涘弬鏁�3涓�0锛屽垯閫氳繃鏃堕棿鏉ュ畾鏃舵洿鏂帮紱涓よ�呬负0锛屽垯闅忔椂鍒锋柊\n+\n+        // 1绉掓洿鏂颁竴娆★紝鎴栨渶灏忎綅绉诲彉鍖栬秴杩�1绫虫洿鏂颁竴娆★紱\n+        //娉ㄦ剰锛氭澶勬洿鏂板噯纭害闈炲父浣庯紝鎺ㄨ崘鍦╯ervice閲岄潰鍚姩涓�涓猅hread锛屽湪run涓璼leep(10000);鐒跺悗鎵цhandler.sendMessage(),鏇存柊浣嶇疆\n         lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 5000, 10, locationListener);\n     }\n \n-    //位置监听\n+    //浣嶇疆鐩戝惉\n     private LocationListener locationListener=new LocationListener() {\n \n         /**\n-         * 位置信息变化时触发\n+         * 浣嶇疆淇℃伅鍙樺寲鏃惰Е鍙�\n          */\n              public void onLocationChanged(Location location) {\n             updateView(location);\n@@ -139,42 +137,42 @@ public void onLocationChanged(Location location) {\n \n \n //\n-//            Log.i(TAG, \"时间：\" + location.getTime());\n-//            Log.i(TAG, \"经度：\"+location.getLongitude());\n-//            Log.i(TAG, \"纬度：\"+location.getLatitude());\n-//            Log.i(TAG, \"海拔：\"+location.getAltitude());\n+//            Log.i(TAG, \"鏃堕棿锛�\" + location.getTime());\n+//            Log.i(TAG, \"缁忓害锛�\"+location.getLongitude());\n+//            Log.i(TAG, \"绾害锛�\"+location.getLatitude());\n+//            Log.i(TAG, \"娴锋嫈锛�\"+location.getAltitude());\n         }\n \n         /**\n-         * GPS状态变化时触发\n+         * GPS鐘舵�佸彉鍖栨椂瑙﹀彂\n          */\n         public void onStatusChanged(String provider, int status, Bundle extras) {\n             switch (status) {\n-                //GPS状态为可见时\n+                //GPS鐘舵�佷负鍙鏃�\n                 case LocationProvider.AVAILABLE:\n-                    Log.i(TAG, \"当前GPS状态为可见状态\");\n+                    Log.i(TAG, \"褰撳墠GPS鐘舵�佷负鍙鐘舵��\");\n                     break;\n-                //GPS状态为服务区外时\n+                //GPS鐘舵�佷负鏈嶅姟鍖哄鏃�\n                 case LocationProvider.OUT_OF_SERVICE:\n-                    Log.i(TAG, \"当前GPS状态为服务区外状态\");\n+                    Log.i(TAG, \"褰撳墠GPS鐘舵�佷负鏈嶅姟鍖哄鐘舵��\");\n                     break;\n-                //GPS状态为暂停服务时\n+                //GPS鐘舵�佷负鏆傚仠鏈嶅姟鏃�\n                 case LocationProvider.TEMPORARILY_UNAVAILABLE:\n-                    Log.i(TAG, \"当前GPS状态为暂停服务状态\");\n+                    Log.i(TAG, \"褰撳墠GPS鐘舵�佷负鏆傚仠鏈嶅姟鐘舵��\");\n                     break;\n             }\n         }\n \n         /**\n-         * GPS开启时触发\n+         * GPS寮�鍚椂瑙﹀彂\n          */\n         public void onProviderEnabled(String provider) {\n             Location location=lm.getLastKnownLocation(provider);\n             updateView(location);\n         }\n \n         /**\n-         * GPS禁用时触发\n+         * GPS绂佺敤鏃惰Е鍙�\n          */\n         public void onProviderDisabled(String provider) {\n             updateView(null);\n@@ -183,85 +181,85 @@ public void onProviderDisabled(String provider) {\n \n     };\n \n-    //状态监听\n+    //鐘舵�佺洃鍚�\n     GpsStatus.Listener listener = new GpsStatus.Listener() {\n         public void onGpsStatusChanged(int event) {\n             switch (event) {\n-                //第一次定位\n+                //绗竴娆″畾浣�\n                 case GpsStatus.GPS_EVENT_FIRST_FIX:\n-                    Log.i(TAG, \"第一次定位\");\n+                    Log.i(TAG, \"绗竴娆″畾浣�\");\n                     break;\n-                //卫星状态改变\n+                //鍗槦鐘舵�佹敼鍙�\n                 case GpsStatus.GPS_EVENT_SATELLITE_STATUS:\n-                    Log.i(TAG, \"卫星状态改变\");\n-                    //获取当前状态\n+                    Log.i(TAG, \"鍗槦鐘舵�佹敼鍙�\");\n+                    //鑾峰彇褰撳墠鐘舵��\n                     GpsStatus gpsStatus=lm.getGpsStatus(null);\n-                    //获取卫星颗数的默认最大值\n+                    //鑾峰彇鍗槦棰楁暟鐨勯粯璁ゆ渶澶у��\n                     int maxSatellites = gpsStatus.getMaxSatellites();\n-                    //创建一个迭代器保存所有卫星\n+                    //鍒涘缓涓�涓凯浠ｅ櫒淇濆瓨鎵�鏈夊崼鏄�\n                     Iterator<GpsSatellite> iters = gpsStatus.getSatellites().iterator();\n                     int count = 0;\n                     while (iters.hasNext() && count <= maxSatellites) {\n                         GpsSatellite s = iters.next();\n                         count++;\n                     }\n-                    System.out.println(\"搜索到：\"+count+\"颗卫星\");\n+                    System.out.println(\"鎼滅储鍒帮細\"+count+\"棰楀崼鏄�\");\n                     break;\n-                //定位启动\n+                //瀹氫綅鍚姩\n                 case GpsStatus.GPS_EVENT_STARTED:\n-                    Log.i(TAG, \"定位启动\");\n+                    Log.i(TAG, \"瀹氫綅鍚姩\");\n                     break;\n-                //定位结束\n+                //瀹氫綅缁撴潫\n                 case GpsStatus.GPS_EVENT_STOPPED:\n-                    Log.i(TAG, \"定位结束\");\n+                    Log.i(TAG, \"瀹氫綅缁撴潫\");\n                     break;\n             }\n         };\n     };\n \n     /**\n-     * 实时更新文本内容\n+     * 瀹炴椂鏇存柊鏂囨湰鍐呭\n      *\n      * @param location\n      */\n     private void updateView(Location location){\n         if(location!=null){\n-            editText.setText(\"位置信息\\n\\n经度：\");\n+            editText.setText(\"浣嶇疆淇℃伅\\n\\n缁忓害锛�\");\n             editText.append(String.valueOf(location.getLongitude()));\n-            editText.append(\"\\n纬度：\");\n+            editText.append(\"\\n绾害锛�\");\n             editText.append(String.valueOf(location.getLatitude()));\n-            editText.append(\"\\n海拔：\");\n+            editText.append(\"\\n娴锋嫈锛�\");\n             editText.append(String.valueOf(location.getAltitude()));\n \n \n \n-            editText.append(\"\\n时间：\");\n+            editText.append(\"\\n鏃堕棿锛�\");\n             editText.append(str);\n \n \n         }else{\n-            //清空EditText对象\n+            //娓呯┖EditText瀵硅薄\n             editText.getEditableText().clear();\n         }\n     }\n \n     /**\n-     * 返回查询条件\n+     * 杩斿洖鏌ヨ鏉′欢\n      * @return\n      */\n     private Criteria getCriteria(){\n         Criteria criteria=new Criteria();\n-        //设置定位精确度 Criteria.ACCURACY_COARSE比较粗略，Criteria.ACCURACY_FINE则比较精细\n+        //璁剧疆瀹氫綅绮剧‘搴� Criteria.ACCURACY_COARSE姣旇緝绮楃暐锛孋riteria.ACCURACY_FINE鍒欐瘮杈冪簿缁�\n         criteria.setAccuracy(Criteria.ACCURACY_FINE);\n-        //设置是否要求速度\n+        //璁剧疆鏄惁瑕佹眰閫熷害\n         criteria.setSpeedRequired(false);\n-        // 设置是否允许运营商收费\n+        // 璁剧疆鏄惁鍏佽杩愯惀鍟嗘敹璐�\n         criteria.setCostAllowed(false);\n-        //设置是否需要方位信息\n+        //璁剧疆鏄惁闇�瑕佹柟浣嶄俊鎭�\n         criteria.setBearingRequired(false);\n-        //设置是否需要海拔信息\n+        //璁剧疆鏄惁闇�瑕佹捣鎷斾俊鎭�\n         criteria.setAltitudeRequired(false);\n-        // 设置对电源的需求\n+        // 璁剧疆瀵圭數婧愮殑闇�姹�\n         criteria.setPowerRequirement(Criteria.POWER_LOW);\n         return criteria;\n     }"
  } ],
  "sha" : "3b743acf1ba7c6209b9e6417568fdea9b5855c09",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/3b743acf1ba7c6209b9e6417568fdea9b5855c09",
  "parents" : [ {
    "sha" : "14da11b2921e323c1242f1a839684fd4cd9fb1df",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/14da11b2921e323c1242f1a839684fd4cd9fb1df",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/14da11b2921e323c1242f1a839684fd4cd9fb1df"
  } ]
}