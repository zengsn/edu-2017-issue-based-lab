{
  "committer" : {
    "login" : "1314080901137",
    "id" : 15098257,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15098257?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/1314080901137",
    "html_url" : "https://github.com/1314080901137",
    "followers_url" : "https://api.github.com/users/1314080901137/followers",
    "following_url" : "https://api.github.com/users/1314080901137/following{/other_user}",
    "gists_url" : "https://api.github.com/users/1314080901137/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/1314080901137/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/1314080901137/subscriptions",
    "organizations_url" : "https://api.github.com/users/1314080901137/orgs",
    "repos_url" : "https://api.github.com/users/1314080901137/repos",
    "events_url" : "https://api.github.com/users/1314080901137/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/1314080901137/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 2107,
    "additions" : 2107,
    "deletions" : 0
  },
  "author" : {
    "login" : "1314080901137",
    "id" : 15098257,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15098257?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/1314080901137",
    "html_url" : "https://github.com/1314080901137",
    "followers_url" : "https://api.github.com/users/1314080901137/followers",
    "following_url" : "https://api.github.com/users/1314080901137/following{/other_user}",
    "gists_url" : "https://api.github.com/users/1314080901137/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/1314080901137/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/1314080901137/subscriptions",
    "organizations_url" : "https://api.github.com/users/1314080901137/orgs",
    "repos_url" : "https://api.github.com/users/1314080901137/repos",
    "events_url" : "https://api.github.com/users/1314080901137/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/1314080901137/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
  "commit" : {
    "author" : {
      "name" : "1314080901137",
      "email" : "417015301@qq.com",
      "date" : "2016-06-25T03:08:53Z"
    },
    "committer" : {
      "name" : "1314080901137",
      "email" : "417015301@qq.com",
      "date" : "2016-06-25T03:08:53Z"
    },
    "message" : "#95 #167 1314080901137 之前代码冲突 现在重新交",
    "tree" : {
      "sha" : "2d5ae9c0db0329fb5c9a6ed51b1904c818c40677",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/2d5ae9c0db0329fb5c9a6ed51b1904c818c40677"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/comments",
  "files" : [ {
    "sha" : "4c3245edc28016487247641e71877e16e3ce5039",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AccelerometerHandler.java",
    "status" : "added",
    "additions" : 47,
    "deletions" : 0,
    "changes" : 47,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AccelerometerHandler.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AccelerometerHandler.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AccelerometerHandler.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,47 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n+\n+public class AccelerometerHandler implements SensorEventListener {\n+    float accelX;\n+    float accelY;\n+    float accelZ;\n+\n+    public AccelerometerHandler(Context context) {\n+        SensorManager manager = (SensorManager) context\n+                .getSystemService(Context.SENSOR_SERVICE);\n+        if (manager.getSensorList(Sensor.TYPE_ACCELEROMETER).size() != 0) {\n+            Sensor accelerometer = manager.getSensorList(\n+                    Sensor.TYPE_ACCELEROMETER).get(0);\n+            manager.registerListener(this, accelerometer,\n+                    SensorManager.SENSOR_DELAY_GAME);\n+        }\n+    }\n+\n+    @Override\n+    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n+    }\n+\n+    @Override\n+    public void onSensorChanged(SensorEvent event) {\n+        accelX = event.values[0];\n+        accelY = event.values[1];\n+        accelZ = event.values[2];\n+    }\n+\n+    public float getAccelX() {\n+        return accelX;\n+    }\n+\n+    public float getAccelY() {\n+        return accelY;\n+    }\n+\n+    public float getAccelZ() {\n+        return accelZ;\n+    }\n+}"
  }, {
    "sha" : "40ec54ab4c74afaf333282977a2e5b16f30abfe9",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFastRenderView.java",
    "status" : "added",
    "additions" : 60,
    "deletions" : 0,
    "changes" : 60,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFastRenderView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFastRenderView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFastRenderView.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,60 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.Canvas;\n+import android.graphics.Rect;\n+import android.view.SurfaceHolder;\n+import android.view.SurfaceView;\n+\n+public class AndroidFastRenderView extends SurfaceView implements Runnable {\n+    AndroidGame game;\n+    Bitmap framebuffer;\n+    Thread renderThread = null;\n+    SurfaceHolder holder;\n+    volatile boolean running = false;\n+    \n+    public AndroidFastRenderView(AndroidGame game, Bitmap framebuffer) {\n+        super(game);\n+        this.game = game;\n+        this.framebuffer = framebuffer;\n+        this.holder = getHolder();\n+    }\n+\n+    public void resume() { \n+        running = true;\n+        renderThread = new Thread(this);\n+        renderThread.start();         \n+    }      \n+    \n+    public void run() {\n+        Rect dstRect = new Rect();\n+        long startTime = System.nanoTime();\n+        while(running) {  \n+      \t\n+            if(!holder.getSurface().isValid())\n+                continue;           \n+            \n+            float deltaTime = (System.nanoTime()-startTime) / 1000000000.0f;\n+            startTime = System.nanoTime();\n+\n+            game.getCurrentScreen().update(deltaTime);\n+            game.getCurrentScreen().present(deltaTime);\n+            \n+            Canvas canvas = holder.lockCanvas();\n+            canvas.getClipBounds(dstRect);\n+            canvas.drawBitmap(framebuffer, null, dstRect, null);                           \n+            holder.unlockCanvasAndPost(canvas);\n+        }\n+    }\n+\n+    public void pause() {                        \n+        running = false;                        \n+        while(true) {\n+            try {\n+                renderThread.join();\n+                break;\n+            } catch (InterruptedException e) {\n+            }\n+        }\n+    }        \n+}\n\\ No newline at end of file"
  }, {
    "sha" : "fac85de59981f08c13923e186b8ea6b508dd7496",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFileIO.java",
    "status" : "added",
    "additions" : 38,
    "deletions" : 0,
    "changes" : 38,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFileIO.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFileIO.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidFileIO.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,38 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+\n+import android.content.res.AssetManager;\n+import android.os.Environment;\n+\n+\n+public class AndroidFileIO implements FileIO {\n+    AssetManager assets;\n+    String externalStoragePath;\n+\n+    public AndroidFileIO(AssetManager assets) {\n+        this.assets = assets;\n+        this.externalStoragePath = Environment.getExternalStorageDirectory()\n+                .getAbsolutePath() + File.separator;\n+    }\n+\n+    @Override\n+    public InputStream readAsset(String fileName) throws IOException {\n+        return assets.open(fileName);\n+    }\n+\n+    @Override\n+    public InputStream readFile(String fileName) throws IOException {\n+        return new FileInputStream(externalStoragePath + fileName);\n+    }\n+\n+    @Override\n+    public OutputStream writeFile(String fileName) throws IOException {\n+        return new FileOutputStream(externalStoragePath + fileName);\n+    }\n+}"
  }, {
    "sha" : "a24a87479456026f14a65848745c5d25d29003d2",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGame.java",
    "status" : "added",
    "additions" : 108,
    "deletions" : 0,
    "changes" : 108,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGame.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGame.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGame.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,108 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.Configuration;\n+import android.graphics.Bitmap;\n+import android.graphics.Bitmap.Config;\n+import android.os.Bundle;\n+import android.os.PowerManager;\n+import android.os.PowerManager.WakeLock;\n+import android.view.Window;\n+import android.view.WindowManager;\n+\n+\n+public abstract class AndroidGame extends Activity implements Game {\n+    AndroidFastRenderView renderView;\n+    Graphics graphics;\n+    Input input;\n+    FileIO fileIO;\n+    Screen screen;\n+    WakeLock wakeLock;\n+    \n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+\n+        requestWindowFeature(Window.FEATURE_NO_TITLE);\n+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+                WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+\n+        boolean isLandscape = getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE;\n+        int frameBufferWidth = isLandscape ? 800 : 480;\n+        int frameBufferHeight = isLandscape ? 480 : 800;\n+        Bitmap frameBuffer = Bitmap.createBitmap(frameBufferWidth,\n+                frameBufferHeight, Config.RGB_565);\n+        \n+        float scaleX = (float) frameBufferWidth\n+                / getWindowManager().getDefaultDisplay().getWidth();\n+        float scaleY = (float) frameBufferHeight\n+                / getWindowManager().getDefaultDisplay().getHeight();\n+\n+        renderView = new AndroidFastRenderView(this, frameBuffer);\n+        graphics = new AndroidGraphics(getAssets(), frameBuffer);\n+        fileIO = new AndroidFileIO(getAssets());\n+        input = new AndroidInput(this, renderView, scaleX, scaleY);\n+        screen = getStartScreen();\n+        setContentView(renderView);\n+        \n+        PowerManager powerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);\n+        wakeLock = powerManager.newWakeLock(PowerManager.FULL_WAKE_LOCK, \"GLGame\");\n+        \n+    }\n+\n+    @Override\n+    public void onResume() {\n+        super.onResume();\n+        wakeLock.acquire();\n+        screen.resume();\n+        renderView.resume();\n+    }\n+\n+    @Override\n+    public void onPause() {\n+        super.onPause();\n+        wakeLock.release();\n+        renderView.pause();\n+        screen.pause();\n+\n+        if (isFinishing())\n+            screen.dispose();\n+    }\n+\n+    @Override\n+    public Input getInput() {\n+        return input;\n+    }\n+\n+    @Override\n+    public FileIO getFileIO() {\n+        return fileIO;\n+    }\n+\n+    @Override\n+    public Graphics getGraphics() {\n+        return graphics;\n+    }\n+\n+    @Override\n+    public void setScreen(Screen screen) {\n+        if (screen == null){;\n+        \tthis.screen.pause();\n+            this.screen.dispose();\n+        \tfinish();\n+        \treturn;\n+        }\n+            \n+\n+        this.screen.pause();\n+        this.screen.dispose();\n+        screen.resume();\n+        screen.update(0);\n+        this.screen = screen;\n+    }\n+    \n+    public Screen getCurrentScreen() {\n+        return screen;\n+    }\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "891f917e5486de62845481f11bdee6dcc3e98be7",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGraphics.java",
    "status" : "added",
    "additions" : 141,
    "deletions" : 0,
    "changes" : 141,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGraphics.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGraphics.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidGraphics.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,141 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import android.content.res.AssetManager;\n+import android.graphics.Bitmap;\n+import android.graphics.Bitmap.Config;\n+import android.graphics.BitmapFactory;\n+import android.graphics.BitmapFactory.Options;\n+import android.graphics.Canvas;\n+import android.graphics.Paint;\n+import android.graphics.Paint.Style;\n+import android.graphics.Rect;\n+\n+\n+public class AndroidGraphics implements Graphics {\n+    AssetManager assets;\n+    Bitmap frameBuffer;\n+    Canvas canvas;\n+    Paint paint;\n+    Rect srcRect = new Rect();\n+    Rect dstRect = new Rect();\n+\n+    public AndroidGraphics(AssetManager assets, Bitmap frameBuffer) {\n+        this.assets = assets;\n+        this.frameBuffer = frameBuffer;\n+        this.canvas = new Canvas(frameBuffer);\n+        this.paint = new Paint();\n+    }\n+\n+    @Override\n+    public Pixmap newPixmap(String fileName, PixmapFormat format) {\n+        Config config = null;\n+        if (format == PixmapFormat.RGB565)\n+            config = Config.RGB_565;\n+        else if (format == PixmapFormat.ARGB4444)\n+            config = Config.ARGB_4444;\n+        else\n+            config = Config.ARGB_8888;\n+\n+        Options options = new Options();\n+        options.inPreferredConfig = config;\n+\n+        InputStream in = null;\n+        Bitmap bitmap = null;\n+        try {\n+            in = assets.open(fileName);\n+            bitmap = BitmapFactory.decodeStream(in);\n+            if (bitmap == null)\n+                throw new RuntimeException(\"Couldn't load bitmap from asset '\"\n+                        + fileName + \"'\");\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Couldn't load bitmap from asset '\"\n+                    + fileName + \"'\");\n+        } finally {\n+            if (in != null) {\n+                try {\n+                    in.close();\n+                } catch (IOException e) {\n+                }\n+            }\n+        }\n+\n+        if (bitmap.getConfig() == Config.RGB_565)\n+            format = PixmapFormat.RGB565;\n+        else if (bitmap.getConfig() == Config.ARGB_4444)\n+            format = PixmapFormat.ARGB4444;\n+        else\n+            format = PixmapFormat.ARGB8888;\n+\n+        return new AndroidPixmap(bitmap, format);\n+    }\n+\n+    @Override\n+    public void clear(int color) {\n+        canvas.drawRGB((color & 0xff0000) >> 16, (color & 0xff00) >> 8,\n+                (color & 0xff));\n+    }\n+\n+    @Override\n+    public void drawPixel(int x, int y, int color) {\n+        paint.setColor(color);\n+        canvas.drawPoint(x, y, paint);\n+    }\n+\n+    @Override\n+    public void drawLine(int x, int y, int x2, int y2, int color) {\n+        paint.setColor(color);\n+        canvas.drawLine(x, y, x2, y2, paint);\n+    }\n+\n+    @Override\n+    public void drawRect(int x, int y, int width, int height, int color) {\n+        paint.setColor(color);\n+        paint.setStyle(Style.FILL);\n+        canvas.drawRect(x, y, x + width - 1, y + width - 1, paint);\n+    }\n+\n+    @Override\n+    public void drawPixmap(Pixmap pixmap, int x, int y, int srcX, int srcY,\n+            int srcWidth, int srcHeight) {\n+        srcRect.left = srcX;\n+        srcRect.top = srcY;\n+       \n+        \n+        srcRect.right = srcX + srcWidth;\n+        srcRect.bottom = srcY + srcHeight;\n+        \n+        dstRect.left = x;\n+        dstRect.top = y;\n+\n+        dstRect.right = x + srcWidth;\n+        dstRect.bottom = y + srcHeight;\n+\n+        canvas.drawBitmap(((AndroidPixmap) pixmap).bitmap, srcRect, dstRect,\n+                null);\n+    }\n+    \n+    @Override\n+    public void drawPixmap(Pixmap pixmap, int x, int y) {\n+        canvas.drawBitmap(((AndroidPixmap)pixmap).bitmap, x, y, null);\n+    }\n+\n+    @Override\n+    public int getWidth() {\n+        return frameBuffer.getWidth();\n+    }\n+\n+    @Override\n+    public int getHeight() {\n+        return frameBuffer.getHeight();\n+    }\n+\n+\t@Override\n+\tpublic void drawText(String text, int x, int y , int color , int textSize) {\n+\t\tpaint.setColor(color);\n+\t\tpaint.setTextSize(textSize);\n+\t\tpaint.setTextAlign(Paint.Align.CENTER);\n+\t\tcanvas.drawText(text, x, y, paint);\n+\t}\n+}"
  }, {
    "sha" : "1056a1bbb6814cb45b180ddcb5118d583ae77ca7",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidInput.java",
    "status" : "added",
    "additions" : 67,
    "deletions" : 0,
    "changes" : 67,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidInput.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidInput.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidInput.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,67 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.List;\n+import android.content.Context;\n+import android.os.Build.VERSION;\n+import android.view.View;\n+\n+\n+public class AndroidInput implements Input {    \n+    AccelerometerHandler accelHandler;\n+    KeyboardHandler keyHandler;\n+    TouchHandler touchHandler;\n+\n+    public AndroidInput(Context context, View view, float scaleX, float scaleY) {\n+        accelHandler = new AccelerometerHandler(context);\n+        keyHandler = new KeyboardHandler(view);               \n+        if(Integer.parseInt(VERSION.SDK) < 5) \n+            touchHandler = new SingleTouchHandler(view, scaleX, scaleY);\n+        else\n+            touchHandler = new MultiTouchHandler(view, scaleX, scaleY);        \n+    }\n+\n+    @Override\n+    public boolean isKeyPressed(int keyCode) {\n+        return keyHandler.isKeyPressed(keyCode);\n+    }\n+\n+    @Override\n+    public boolean isTouchDown(int pointer) {\n+        return touchHandler.isTouchDown(pointer);\n+    }\n+\n+    @Override\n+    public int getTouchX(int pointer) {\n+        return touchHandler.getTouchX(pointer);\n+    }\n+\n+    @Override\n+    public int getTouchY(int pointer) {\n+        return touchHandler.getTouchY(pointer);\n+    }\n+\n+    @Override\n+    public float getAccelX() {\n+        return accelHandler.getAccelX();\n+    }\n+\n+    @Override\n+    public float getAccelY() {\n+        return accelHandler.getAccelY();\n+    }\n+\n+    @Override\n+    public float getAccelZ() {\n+        return accelHandler.getAccelZ();\n+    }\n+\n+    @Override\n+    public List<TouchEvent> getTouchEvents() {\n+        return touchHandler.getTouchEvents();\n+    }\n+    \n+    @Override\n+    public List<KeyEvent> getKeyEvents() {\n+        return keyHandler.getKeyEvents();\n+    }\n+}"
  }, {
    "sha" : "561307b74ce4856373ce60386bd7c647ce8b3cb8",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidPixmap.java",
    "status" : "added",
    "additions" : 35,
    "deletions" : 0,
    "changes" : 35,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidPixmap.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidPixmap.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37AndroidPixmap.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,35 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import android.graphics.Bitmap;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Graphics.PixmapFormat;\n+\n+\n+public class AndroidPixmap implements Pixmap {\n+    Bitmap bitmap;\n+    PixmapFormat format;\n+    \n+    public AndroidPixmap(Bitmap bitmap, PixmapFormat format) {\n+        this.bitmap = bitmap;\n+        this.format = format;\n+    }\n+\n+    @Override\n+    public int getWidth() {\n+        return bitmap.getWidth();\n+    }\n+\n+    @Override\n+    public int getHeight() {\n+        return bitmap.getHeight();\n+    }\n+\n+    @Override\n+    public PixmapFormat getFormat() {\n+        return format;\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        bitmap.recycle();\n+    }      \n+}"
  }, {
    "sha" : "10a00787a4d0df62b4ba7477760ac1b2dfd2d4a5",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Assets.java",
    "status" : "added",
    "additions" : 21,
    "deletions" : 0,
    "changes" : 21,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Assets.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Assets.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Assets.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,21 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+\n+\n+public class Assets {\n+\t\n+\tpublic static Pixmap items;\n+\tpublic static Pixmap city;\n+\tpublic static Pixmap controls;\n+\tpublic static Pixmap spade;\n+\tpublic static Pixmap tank;\n+\tpublic static Pixmap player;\n+\tpublic static Pixmap titles;\n+\tpublic static Pixmap bullets;\n+\tpublic static Pixmap level;\n+\tpublic static Pixmap life;\n+\tpublic static Pixmap tank_safe1;\n+\tpublic static Pixmap tank_safe2;\n+\n+\t\n+}"
  }, {
    "sha" : "fe8aa9ab62cebc130a480bbf44a09358eb653eea",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Bullet.java",
    "status" : "added",
    "additions" : 81,
    "deletions" : 0,
    "changes" : 81,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Bullet.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Bullet.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Bullet.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,81 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;;\n+\n+public abstract class Bullet extends ObjectCubo {\n+\t\n+\tpublic static final int[] player_bullet_type = { 0 , 1 , 2 , 3};\n+\tpublic static final int[] player_bullet_strength = { 1 , 1 , 2 , 4};\n+\tpublic static final int[] player_bullet_speed ={ Setting.Bullet_Mode_Speed , Setting.Bullet_Fast_Speed ,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t Setting.Bullet_Fast_Speed , Setting.Bullet_Fast_Speed };\n+\t\n+\tpublic static final int[] enemy_bullet_type = {0 , 1 , 2 , 3 , 4 , 5 , 6 , 7};\n+\tpublic static final int[] enemy_bullet_strength = {1 , 2 , 1 , 1 , 1 , 1 , 2 , 4};//stack the life of tank;\n+\tpublic static final int[] enemy_bullet_speed = {Setting.Bullet_Mode_Speed , Setting.Bullet_Fast_Speed , \n+\t\t\t\t\t\t\t\t\t   Setting.Bullet_Mode_Speed , Setting.Bullet_Fast_Speed ,\n+\t\t\t\t\t\t\t\t\t   Setting.Bullet_Mode_Speed , Setting.Bullet_Mode_Speed ,\n+\t\t\t\t\t\t\t\t\t   Setting.Bullet_Mode_Speed , Setting.Bullet_Fast_Speed };\n+\t\n+\tpublic boolean isGood;\n+\tpublic int direction;\n+\tpublic int bullet_type;\n+\tpublic int bullet_strength;\n+\tpublic int bullet_speed;\n+\t\n+\tpublic Bullet(MapListener mapListener){\n+\t\tthis.mapListener = mapListener;\n+\t\tthis.width = Setting.Bullet_Size;\n+\t\tthis.height = Setting.Bullet_Size;\n+\t\tisLive = false;\n+\t}\n+\t\t\t\n+\tpublic void initBullet(int x ,int y ,int direction){\n+\t\tthis.x = x ;\n+\t\tthis.y = y;\n+\t\tthis.direction = direction;\n+\t\tsetGood();\n+\t}\n+\t\n+\tpublic abstract void setGood();\n+\tpublic abstract void changeType( int type );\n+\t\n+\tpublic void update(float deltaTime){\n+\t\tmove();\n+\t}\n+\t\n+\tpublic void move(){\t\t\n+\t\tif(!isLive)\n+\t\t\treturn;\n+\t\t\n+\t\tint x1 = x;\n+\t\tint y1 = y;\n+\t\tswitch(direction){\n+\t\t\tcase Setting.LEFT:\n+\t\t\t\tx1 -= bullet_speed;\n+\t\t\t\tbreak;\n+\t\t\tcase Setting.UP:\n+\t\t\t\ty1 -= bullet_speed;\n+\t\t\t\tbreak;\n+\t\t\tcase Setting.RIGHT:\n+\t\t\t\tx1 += bullet_speed;\n+\t\t\t\tbreak;\n+\t\t\tcase Setting.DOWN:\n+\t\t\t\ty1 += bullet_speed;\n+\t\t\t\tbreak;\n+\t\t}\n+\t\tbulletIsLive(x1 , y1);\n+\t\tif(isLive){\n+\t\t\tx = x1;\n+\t\t\ty = y1;\n+\t\t}\n+\t};\n+\t\n+\tpublic void bulletIsLive( int x ,int y){\n+\t\tisLive = ( x < - Setting.Bullet_Size/2 || x >= 480 - Setting.Bullet_Size/2 || y < 0 || y >= 480 - Setting.Bullet_Size/2) ? false : true;\n+\t\tif(isLive){\n+\t\t\tisLive = mapListener.checkBullet(this ,x, y);\n+\t\t}\t\t\t\n+\t}\n+\t\n+\tpublic void checkMiss(){\n+\t\t\n+\t}\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "889317207eaf54b431c614f7f10fa145990ac24c",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Color.java",
    "status" : "added",
    "additions" : 10,
    "deletions" : 0,
    "changes" : 10,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Color.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Color.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Color.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,10 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+public class Color {\n+    public static int convert (int r, int g, int b, int a) {\n+        return ((a & 0xff) << 24) |\n+               ((r & 0xff) << 16) |\n+               ((g & 0xff) << 8) |\n+               ((b & 0xff));               \n+    }\n+}"
  }, {
    "sha" : "80d6c3cccce1204937b31c3cf970b2319651b5f0",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37FileIO.java",
    "status" : "added",
    "additions" : 13,
    "deletions" : 0,
    "changes" : 13,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37FileIO.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37FileIO.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37FileIO.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,13 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+\n+public interface FileIO {\n+    public InputStream readAsset(String fileName) throws IOException;\n+\n+    public InputStream readFile(String fileName) throws IOException;\n+\n+    public OutputStream writeFile(String fileName) throws IOException;\n+}"
  }, {
    "sha" : "2415813e4f850a16a7003ba5ec9ecdf33aae87aa",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Game.java",
    "status" : "added",
    "additions" : 15,
    "deletions" : 0,
    "changes" : 15,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Game.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Game.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Game.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,15 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+public interface Game {\n+    public Input getInput();\n+\n+    public FileIO getFileIO();\n+\n+    public Graphics getGraphics();\n+\n+    public void setScreen(Screen screen);\n+\n+    public Screen getCurrentScreen();\n+\n+    public Screen getStartScreen();\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "4e2e3b73b3ea0ed95c6231e1cd2f81f47b6a29b1",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37GameScreen.java",
    "status" : "added",
    "additions" : 203,
    "deletions" : 0,
    "changes" : 203,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37GameScreen.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37GameScreen.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37GameScreen.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,203 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import android.graphics.Color;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.World.WorldListener;\n+\n+public class GameScreen extends Screen {\n+\n+\tprivate WorldListener worldListener;\n+\tprivate World world;\n+\tpublic int tickTime = 0;\n+\tpublic int[] tickTimes;\n+\tpublic int huTime = 0;\n+\n+\tpublic GameScreen(Game game) {\n+\t\tsuper(game);\n+\t\tfinal FileIO fileIo = game.getFileIO();\n+\t\tworldListener = new WorldListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic int[][] loadMap(int level) {\n+\t\t\t\treturn MapFactory.createMap(fileIo, level);\n+\t\t\t}\n+\t\t};\n+\t\tworld = new World(worldListener);\n+\t\ttickTimes = new int[6];\n+\t}\n+\n+\t@Override\n+\tpublic void update(float deltaTime) {\n+\t\tworld.update(deltaTime);\n+\t\tif (!world.gameOver) {\n+\t\t\tif (game.getInput().isTouchDown(0)) {\n+\t\t\t\tint x = game.getInput().getTouchX(0);\n+\t\t\t\tint y = game.getInput().getTouchY(0);\n+\t\t\t\tif (x < 320 && y > 160) {\n+\t\t\t\t\tworld.player.direction = pressInwhichRect(160, 320, x, y);\n+\t\t\t\t\tworld.player.move(deltaTime);\n+\t\t\t\t} else if( x < 320 && x > 160 && y < 80){\n+\t\t\t\t\tgame.setScreen(new MainMenuScreen(game));\n+\t\t\t\t}else if (x > 320) {\n+\t\t\t\t\tworld.player.shoot(deltaTime);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (game.getInput().isTouchDown(1)) {\n+\t\t\t\tint x = game.getInput().getTouchX(1);\n+\t\t\t\tif (x > 320) {\n+\t\t\t\t\tworld.player.shoot(deltaTime);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void present(float deltaTime) {\n+\t\tGraphics g = game.getGraphics();\n+\t\tdrawWorld(g, deltaTime);\n+\t}\n+\n+\tpublic void drawWorld(Graphics g, float deltaTime) {\n+\n+\t\tg.clear(0);\n+\t\tg.drawPixmap(Assets.controls, 0, 0);\n+\t\tg.drawPixmap(Assets.level, 12, 20);\n+\t\tg.drawText(\"\" + Setting.level, 60, 40, Color.RED, 22);\n+\t\tg.drawText(\"\" + (20 - world.createTankNum), 60, 95, Color.RED, 22);\n+\n+\t\tg.drawPixmap(Assets.life, 20, 125);\n+\t\tif (world.playerLife > 0) {\n+\t\t\tg.drawText(\"\" + world.playerLife, 60, 145, Color.RED, 22);\n+\t\t} else\n+\t\t\tg.drawText(\"\" + 0, 60, 145, Color.RED, 22);\t\t\n+\t\tdrawMap(g);\n+\n+\t\tdrawPlayer(g);\n+\n+\t\tif (world.gameOver) {\n+\t\t\tg.drawText(\"Game Over\", 320 + 240, 240, Color.RED, 80);\n+\t\t}\n+\t}\n+\n+\n+\tprivate void drawPlayer(Graphics g) {\n+\t\tif (world.player.isLive) {\n+\t\t\tswitch (world.player.tank_type) {\n+\t\t\tcase 0:\n+\t\t\t\tg.drawPixmap(Assets.player, 320 + world.player.x,\n+\t\t\t\t\t\tworld.player.y, 0, 22 * world.player.direction,\n+\t\t\t\t\t\tSetting.Tank_Size, Setting.Tank_Size);\n+\t\t\t\tbreak;\n+\t\t\tcase 1:\n+\t\t\t\tg.drawPixmap(Assets.player, 320 + world.player.x,\n+\t\t\t\t\t\tworld.player.y, 22 * 2, 22 * world.player.direction,\n+\t\t\t\t\t\tSetting.Tank_Size, Setting.Tank_Size);\n+\t\t\t\tbreak;\n+\t\t\tcase 2:\n+\t\t\t\tg.drawPixmap(Assets.player, 320 + world.player.x,\n+\t\t\t\t\t\tworld.player.y, 22 * 4, 22 * world.player.direction,\n+\t\t\t\t\t\tSetting.Tank_Size, Setting.Tank_Size);\n+\t\t\t\tbreak;\n+\t\t\tcase 3:\n+\t\t\t\tg.drawPixmap(Assets.player, 320 + world.player.x,\n+\t\t\t\t\t\tworld.player.y, 22 * 6, 22 * world.player.direction,\n+\t\t\t\t\t\tSetting.Tank_Size, Setting.Tank_Size);\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tif (world.player.hasHat) {\n+\t\t\t\ttickTime++;\n+\t\t\t\ttickTime = tickTime % 10;\n+\t\t\t\tif (tickTime == 0) {\n+\t\t\t\t\tg.drawPixmap(Assets.tank_safe1, 320 + world.player.x - 1,\n+\t\t\t\t\t\t\tworld.player.y - 1);\n+\t\t\t\t} else if (tickTime == 5) {\n+\t\t\t\t\tg.drawPixmap(Assets.tank_safe2, 320 + world.player.x - 1,\n+\t\t\t\t\t\t\tworld.player.y - 1);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (world.player.bullet.isLive) {\n+\t\t\tg.drawPixmap(Assets.bullets, 320 + world.player.bullet.x,\n+\t\t\t\t\tworld.player.bullet.y, 4 * world.player.bullet.direction,\n+\t\t\t\t\t0, Setting.Bullet_Size, Setting.Bullet_Size);\n+\t\t}\n+\n+\t\tfor(int i = 0; i< world.map.length ;i++){\n+\t\t\tfor(int j = 0; j< world.map[0].length ;j++){\n+\t\t\t\tif(world.map[i][j] == 3){\n+\t\t\t\t\tg.drawPixmap(Assets.titles, 320 + 24 * j, 24 * i, 24 * 2,\n+\t\t\t\t\t\t\t0, 24, 24);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\n+\tprivate void drawMap(Graphics g) {\n+\t\tfor (int i = 0; i < World.World_Height; i++) {\n+\t\t\tfor (int j = 0; j < World.World_Width; j++) {\n+\t\t\t\tint title = world.map[i][j];\n+\t\t\t\tswitch (title) {\n+\t\t\t\tcase 1:\n+\t\t\t\t\tg.drawPixmap(Assets.titles, 320 + 24 * j, 24 * i, 0, 0, 24,\n+\t\t\t\t\t\t\t24);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase 2:\n+\t\t\t\t\tg.drawPixmap(Assets.titles, 320 + 24 * j, 24 * i, 24, 0,\n+\t\t\t\t\t\t\t24, 24);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase 4:\n+\t\t\t\t\thuTime ++;\n+\t\t\t\t\thuTime = huTime%200;\n+\t\t\t\t\tif(huTime < 100){\n+\t\t\t\t\t\tg.drawPixmap(Assets.titles, 320 + 24 * j, 24 * i, 24 * 3,\n+\t\t\t\t\t\t\t\t0, 24, 24);\n+\t\t\t\t\t}else{\n+\t\t\t\t\t\tg.drawPixmap(Assets.titles, 320 + 24 * j, 24 * i, 24 * 4,\n+\t\t\t\t\t\t\t\t0, 24, 24);\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\t\t\t\t\n+\t\t\t\tcase 6:\n+\t\t\t\t\tg.drawPixmap(Assets.titles, 320 + 24 * j, 24 * i, 24 * 5,\n+\t\t\t\t\t\t\t0, 24, 24);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase 7:\n+\t\t\t\t\tg.drawPixmap(Assets.titles, 320 + 24 * j, 24 * i, 24 * 6,\n+\t\t\t\t\t\t\t0, 24, 24);\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void pause() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void resume() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void dispose() {\n+\t\t\n+\t}\n+\n+\tpublic int pressInwhichRect(int x1, int y1, int x2, int y2) {\n+\t\tif (Math.abs(x2 - x1) > Math.abs(y2 - y1)) {\n+\t\t\tif (x2 - x1 > 0) {\n+\t\t\t\treturn 1;\n+\t\t\t} else {\n+\t\t\t\treturn 3;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (y2 - y1 > 0) {\n+\t\t\t\treturn 2;\n+\t\t\t} else {\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "191e2ce34e6b868c3ecbb753f4ed2f38415ac640",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Graphics.java",
    "status" : "added",
    "additions" : 28,
    "deletions" : 0,
    "changes" : 28,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Graphics.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Graphics.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Graphics.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,28 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+public interface Graphics {\n+    public static enum PixmapFormat {\n+        ARGB8888, ARGB4444, RGB565\n+    }\n+\n+    public Pixmap newPixmap(String fileName, PixmapFormat format);\n+\n+    public void clear(int color);\n+\n+    public void drawPixel(int x, int y, int color);\n+\n+    public void drawLine(int x, int y, int x2, int y2, int color);\n+\n+    public void drawRect(int x, int y, int width, int height, int color);\n+\n+    public void drawPixmap(Pixmap pixmap, int x, int y, int srcX, int srcY,\n+            int srcWidth, int srcHeight);\n+\n+    public void drawPixmap(Pixmap pixmap, int x, int y);\n+\n+    public void drawText(String text , int x , int y , int color , int textSize);\n+    \n+    public int getWidth();\n+\n+    public int getHeight();\n+}"
  }, {
    "sha" : "54ad71c1a2ed2cf782fb623f5ba666797e963102",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Input.java",
    "status" : "added",
    "additions" : 70,
    "deletions" : 0,
    "changes" : 70,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Input.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Input.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Input.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,70 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.List;\n+\n+public interface Input {\n+    public static class KeyEvent {\n+        public static final int KEY_DOWN = 0;\n+        public static final int KEY_UP = 1;\n+\n+        public int type;\n+        public int keyCode;\n+        public char keyChar;\n+\n+        public String toString() {\n+            StringBuilder builder = new StringBuilder();\n+            if (type == KEY_DOWN)\n+                builder.append(\"key down, \");\n+            else\n+                builder.append(\"key up, \");\n+            builder.append(keyCode);\n+            builder.append(\",\");\n+            builder.append(keyChar);\n+            return builder.toString();\n+        }\n+    }\n+\n+    public static class TouchEvent {\n+        public static final int TOUCH_DOWN = 0;\n+        public static final int TOUCH_UP = 1;\n+        public static final int TOUCH_DRAGGED = 2;\n+\n+        public int type;\n+        public int x, y;\n+        public int pointer;\n+\n+        public String toString() {\n+            StringBuilder builder = new StringBuilder();\n+            if (type == TOUCH_DOWN)\n+                builder.append(\"touch down, \");\n+            else if (type == TOUCH_DRAGGED)\n+                builder.append(\"touch dragged, \");\n+            else\n+                builder.append(\"touch up, \");\n+            builder.append(pointer);\n+            builder.append(\",\");\n+            builder.append(x);\n+            builder.append(\",\");\n+            builder.append(y);\n+            return builder.toString();\n+        }\n+    }\n+\n+    public boolean isKeyPressed(int keyCode);\n+\n+    public boolean isTouchDown(int pointer);\n+\n+    public int getTouchX(int pointer);\n+\n+    public int getTouchY(int pointer);\n+\n+    public float getAccelX();\n+\n+    public float getAccelY();\n+\n+    public float getAccelZ();\n+\n+    public List<KeyEvent> getKeyEvents();\n+\n+    public List<TouchEvent> getTouchEvents();\n+}"
  }, {
    "sha" : "9540751a4a22575d759f69681fe611e9a3fce5a1",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37KeyboardHandler.java",
    "status" : "added",
    "additions" : 73,
    "deletions" : 0,
    "changes" : 73,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37KeyboardHandler.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37KeyboardHandler.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37KeyboardHandler.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,73 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import android.view.View;\n+import android.view.View.OnKeyListener;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Input.KeyEvent;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Pool;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Pool.PoolObjectFactory;\n+\n+public class KeyboardHandler implements OnKeyListener {\n+    boolean[] pressedKeys = new boolean[128];\n+    Pool<KeyEvent> keyEventPool;\n+    List<KeyEvent> keyEventsBuffer = new ArrayList<KeyEvent>();    \n+    List<KeyEvent> keyEvents = new ArrayList<KeyEvent>();\n+\n+    public KeyboardHandler(View view) {\n+        PoolObjectFactory<KeyEvent> factory = new PoolObjectFactory<KeyEvent>() {\n+            @Override\n+            public KeyEvent createObject() {\n+                return new KeyEvent();\n+            }\n+        };\n+        keyEventPool = new Pool<KeyEvent>(factory, 100);\n+        view.setOnKeyListener(this);\n+        view.setFocusableInTouchMode(true);\n+        view.requestFocus();\n+    }\n+\n+    @Override\n+    public boolean onKey(View v, int keyCode, android.view.KeyEvent event) {\n+        if (event.getAction() == android.view.KeyEvent.ACTION_MULTIPLE)\n+            return false;\n+\n+        synchronized (this) {\n+            KeyEvent keyEvent = keyEventPool.newObject();\n+            keyEvent.keyCode = keyCode;\n+            keyEvent.keyChar = (char) event.getUnicodeChar();\n+            if (event.getAction() == android.view.KeyEvent.ACTION_DOWN) {\n+                keyEvent.type = KeyEvent.KEY_DOWN;\n+                if(keyCode > 0 && keyCode < 127)\n+                    pressedKeys[keyCode] = true;\n+            }\n+            if (event.getAction() == android.view.KeyEvent.ACTION_UP) {\n+                keyEvent.type = KeyEvent.KEY_UP;\n+                if(keyCode > 0 && keyCode < 127)\n+                    pressedKeys[keyCode] = false;\n+            }\n+            keyEventsBuffer.add(keyEvent);\n+        }\n+        return false;\n+    }\n+\n+    public boolean isKeyPressed(int keyCode) {\n+        if (keyCode < 0 || keyCode > 127)\n+            return false;\n+        return pressedKeys[keyCode];\n+    }\n+\n+    public List<KeyEvent> getKeyEvents() {\n+        synchronized (this) {\n+            int len = keyEvents.size();\n+            for (int i = 0; i < len; i++)\n+                keyEventPool.free(keyEvents.get(i));\n+            keyEvents.clear();\n+            keyEvents.addAll(keyEventsBuffer);\n+            keyEventsBuffer.clear();\n+            return keyEvents;\n+        }\n+    }\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "abd050243e93ba902db616902ecb4c5ae6d0b5ae",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37LoadingScreen.java",
    "status" : "added",
    "additions" : 49,
    "deletions" : 0,
    "changes" : 49,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37LoadingScreen.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37LoadingScreen.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37LoadingScreen.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,49 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Graphics.PixmapFormat;\n+\n+\n+public class LoadingScreen extends Screen {\n+\t\n+\tpublic LoadingScreen(Game game) {\n+\t\tsuper(game);\n+\t}\n+\n+\t@Override\n+\tpublic void update(float deltaTime) {\n+\t\tGraphics g = game.getGraphics();\n+\t\tAssets.items = g.newPixmap(\"items.png\", PixmapFormat.ARGB4444);\t\n+\t\tAssets.city = g.newPixmap(\"city.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.controls = g.newPixmap(\"controls.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.level = g.newPixmap(\"level.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.life = g.newPixmap(\"life.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.tank_safe1 = g.newPixmap(\"tank_safely1.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.tank_safe2 = g.newPixmap(\"tank_safely2.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.player = g.newPixmap(\"player.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.titles = g.newPixmap(\"titles.png\", PixmapFormat.ARGB4444);\n+\t\tAssets.bullets = g.newPixmap(\"bullet.png\", PixmapFormat.ARGB4444);\n+\n+\t\tgame.setScreen(new MainMenuScreen(game));\n+\t}\n+\n+\t@Override\n+\tpublic void present(float deltaTime) {\n+\t\t\n+\t}\n+\n+\t@Override\n+\tpublic void pause() {\n+\t\t\n+\t}\n+\n+\t@Override\n+\tpublic void resume() {\n+\t\t\n+\t}\n+\n+\t@Override\n+\tpublic void dispose() {\n+\t\t\n+\t}\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "b166efffa085076e50c678c27501138804f74f09",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MainMenuScreen.java",
    "status" : "added",
    "additions" : 87,
    "deletions" : 0,
    "changes" : 87,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MainMenuScreen.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MainMenuScreen.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MainMenuScreen.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,87 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.List;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Input.TouchEvent;\n+\n+\n+public class MainMenuScreen extends Screen {\n+\n+\tpublic MainMenuScreen(Game game) {\n+\t\tsuper(game);\n+\t}\n+\n+\t@Override\n+\tpublic void update(float deltaTime) {\n+\t\tList<TouchEvent> events = game.getInput().getTouchEvents();\n+\t\t\n+\t\tfor(int i = 0,length = events.size();i<length;i++){\n+\t\t\tTouchEvent event = events.get(i);\n+\t\t\tif(event.type == TouchEvent.TOUCH_UP){\t\t\t\t\n+\t\t\t\tif(event.x > 352 && event.x < 480 && event.y > 224 && event.y < 288){\n+\t\t\t\t\tgame.setScreen(new GameScreen(game));\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t\tif(event.x > 352 && event.x < 480 && event.y > 320 && event.y < 384){\n+\t\t\t\t\tgame.setScreen(null);\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t\tif(event.x > 736 && event.x < 800 && event.y > 224 && event.y < 288){\n+\t\t\t\t\tSetting.level++;\n+\t\t\t\t\tif(Setting.level > 20){\n+\t\t\t\t\t\tSetting.level = 0;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t\tif(event.x > 736 && event.x < 800 && event.y > 352 && event.y < 416){\n+\t\t\t\t\tSetting.level --;\n+\t\t\t\t\tif(Setting.level < 1){\n+\t\t\t\t\t\tSetting.level = 20;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void present(float deltaTime) {\n+\t\tGraphics g = game.getGraphics();\n+\t\tg.clear(0);\n+\t\tg.drawPixmap(Assets.items, 32*3 , 32 * 2 , 10 * 32, 32 * 2, 19 * 32 , 2*32);\n+\t\tg.drawPixmap(Assets.city, 32 * 6,  32 * 4);\n+\t\tg.drawPixmap(Assets.items, 11 * 32 , 7 *32 , 0 , 0 ,32 * 4 , 32 * 2);\n+\t\tg.drawPixmap(Assets.items, 11 * 32 , 10 * 32 , 32 * 4, 0, 32 * 4, 32 * 2);\n+\n+\t\tint i = 0 , j = 0;\n+\t\tif(Setting.level <10){\n+\t\t\tj = Setting.level;\n+\t\t}else if(Setting.level >= 10 && Setting.level !=20){\n+\t\t\ti = 1;\n+\t\t\tj = Setting.level - 10;\n+\t\t\tg.drawPixmap(Assets.items, 23 * 32 , 32 * 9 , 32 * 1,  32 * 2 , 32, 32 * 2);\n+\t\t}else if(Setting.level == 20){\n+\t\t\ti = 1;\n+\t\t\tj = 0;\n+\t\t\tg.drawPixmap(Assets.items, 23 * 32 , 32 * 9 , 32 * 2,  32 * 2 , 32, 32 * 2);\n+\t\t}\n+\n+\t\tg.drawPixmap(Assets.items, 23 * 32 + 32 * i , 32 * 9 , 32 * j ,  32 * 2 , 32, 32 * 2);\n+\t\t\n+\t}\n+\n+\t@Override\n+\tpublic void pause() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void resume() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void dispose() {\n+\n+\t}\n+\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "cb0fa3baee33f62817b6b185e4bfe9609f587c9c",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MapFactory.java",
    "status" : "added",
    "additions" : 47,
    "deletions" : 0,
    "changes" : 47,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MapFactory.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MapFactory.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MapFactory.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,47 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+\n+\n+public class MapFactory {\n+\tpublic static int[][] a = new int[World.World_Height][World.World_Width];\n+\t\n+\tpublic static int[][] createMap(FileIO file, int level) {\n+\t\tString fileName = \"map\" + level + \".txt\";\n+\t\tInputStream in = null;\n+\t\tInputStreamReader reader = null;\n+\t\tBufferedReader br = null;\n+\t\ttry {\n+\t\t\tin = file.readAsset(fileName);\n+\t\t\treader = new InputStreamReader(in);\n+\t\t\tbr = new BufferedReader(reader);\n+\t\t\tString string = null;\n+\t\t\tint j = 0;\n+\t\t\twhile ((string = br.readLine()) != null && j < World.World_Height) {\n+\t\t\t\tchar[] num = string.toCharArray();\n+\t\t\t\tfor (int i = 0; i < World.World_Width; i++) {\n+\t\t\t\t\ta[j][i] = num[i] - '0';\n+\t\t\t\t}\n+\t\t\t\tj++;\n+\t\t\t}\n+\t\t} catch (IOException e) {\n+\t\t\te.printStackTrace();\n+\t\t}finally{\n+\t\t\t\ttry {\n+\t\t\t\t\tif(in!=null)\n+\t\t\t\t\t\tin.close();\n+\t\t\t\t\tif(reader!=null)\n+\t\t\t\t\t\treader.close();\n+\t\t\t\t\tif(br!=null)\n+\t\t\t\t\t\tbr.close();\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\te.printStackTrace();\n+\t\t\t}\n+\t\t}\n+\t\treturn a;\n+\t}\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "7bb3dc9a691d65ab975944e96e7c3b4d2c9721cc",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MultiTouchHandler.java",
    "status" : "added",
    "additions" : 135,
    "deletions" : 0,
    "changes" : 135,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MultiTouchHandler.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MultiTouchHandler.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37MultiTouchHandler.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,135 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import android.view.MotionEvent;\n+import android.view.View;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Input.TouchEvent;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Pool.PoolObjectFactory;\n+\n+public class MultiTouchHandler implements TouchHandler {\n+    boolean[] isTouched = new boolean[20];\n+    int[] touchX = new int[20];\n+    int[] touchY = new int[20];\n+    Pool<TouchEvent> touchEventPool;\n+    List<TouchEvent> touchEvents = new ArrayList<TouchEvent>();\n+    List<TouchEvent> touchEventsBuffer = new ArrayList<TouchEvent>();\n+    float scaleX;\n+    float scaleY;\n+\n+    public MultiTouchHandler(View view, float scaleX, float scaleY) {\n+        PoolObjectFactory<TouchEvent> factory = new PoolObjectFactory<TouchEvent>() {\n+            @Override\n+            public TouchEvent createObject() {\n+                return new TouchEvent();\n+            }\n+        };\n+        touchEventPool = new Pool<TouchEvent>(factory, 100);\n+        view.setOnTouchListener(this);\n+\n+        this.scaleX = scaleX;\n+        this.scaleY = scaleY;\n+    }\n+\n+    @Override\n+    public boolean onTouch(View v, MotionEvent event) {\n+        synchronized (this) {\n+            int action = event.getAction() & MotionEvent.ACTION_MASK;\n+            int pointerIndex = (event.getAction() & MotionEvent.ACTION_POINTER_ID_MASK) >> MotionEvent.ACTION_POINTER_ID_SHIFT;\n+            int pointerId = event.getPointerId(pointerIndex);\n+            TouchEvent touchEvent;\n+\n+            switch (action) {\n+            case MotionEvent.ACTION_DOWN:\n+            case MotionEvent.ACTION_POINTER_DOWN:\n+                touchEvent = touchEventPool.newObject();\n+                touchEvent.type = TouchEvent.TOUCH_DOWN;\n+                touchEvent.pointer = pointerId;\n+                touchEvent.x = touchX[pointerId] = (int) (event\n+                        .getX(pointerIndex) * scaleX);\n+                touchEvent.y = touchY[pointerId] = (int) (event\n+                        .getY(pointerIndex) * scaleY);\n+                isTouched[pointerId] = true;\n+                touchEventsBuffer.add(touchEvent);\n+                break;\n+\n+            case MotionEvent.ACTION_UP:\n+            case MotionEvent.ACTION_POINTER_UP:\n+            case MotionEvent.ACTION_CANCEL:\n+                touchEvent = touchEventPool.newObject();\n+                touchEvent.type = TouchEvent.TOUCH_UP;\n+                touchEvent.pointer = pointerId;\n+                touchEvent.x = touchX[pointerId] = (int) (event\n+                        .getX(pointerIndex) * scaleX);\n+                touchEvent.y = touchY[pointerId] = (int) (event\n+                        .getY(pointerIndex) * scaleY);\n+                isTouched[pointerId] = false;\n+                touchEventsBuffer.add(touchEvent);\n+                break;\n+\n+            case MotionEvent.ACTION_MOVE:\n+                int pointerCount = event.getPointerCount();\n+                for (int i = 0; i < pointerCount; i++) {\n+                    pointerIndex = i;\n+                    pointerId = event.getPointerId(pointerIndex);\n+\n+                    touchEvent = touchEventPool.newObject();\n+                    touchEvent.type = TouchEvent.TOUCH_DRAGGED;\n+                    touchEvent.pointer = pointerId;\n+                    touchEvent.x = touchX[pointerId] = (int) (event\n+                            .getX(pointerIndex) * scaleX);\n+                    touchEvent.y = touchY[pointerId] = (int) (event\n+                            .getY(pointerIndex) * scaleY);\n+                    touchEventsBuffer.add(touchEvent);\n+                }\n+                break;\n+            }\n+\n+            return true;\n+        }\n+    }\n+\n+    @Override\n+    public boolean isTouchDown(int pointer) {\n+        synchronized (this) {\n+            if (pointer < 0 || pointer >= 20)\n+                return false;\n+            else\n+                return isTouched[pointer];\n+        }\n+    }\n+\n+    @Override\n+    public int getTouchX(int pointer) {\n+        synchronized (this) {\n+            if (pointer < 0 || pointer >= 20)\n+                return 0;\n+            else\n+                return touchX[pointer];\n+        }\n+    }\n+\n+    @Override\n+    public int getTouchY(int pointer) {\n+        synchronized (this) {\n+            if (pointer < 0 || pointer >= 20)\n+                return 0;\n+            else\n+                return touchY[pointer];\n+        }\n+    }\n+\n+    @Override\n+    public List<TouchEvent> getTouchEvents() {\n+        synchronized (this) {\n+            int len = touchEvents.size();\n+            for (int i = 0; i < len; i++)\n+                touchEventPool.free(touchEvents.get(i));\n+            touchEvents.clear();\n+            touchEvents.addAll(touchEventsBuffer);\n+            touchEventsBuffer.clear();\n+            return touchEvents;\n+        }\n+    }\n+}"
  }, {
    "sha" : "d1a157dd9ee2fabcbf0f6a45452c73b6299b0f58",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37ObjectCubo.java",
    "status" : "added",
    "additions" : 24,
    "deletions" : 0,
    "changes" : 24,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37ObjectCubo.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37ObjectCubo.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37ObjectCubo.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,24 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import android.graphics.Rect;\n+\n+public abstract class ObjectCubo {\n+\n+\tpublic int x;\n+\tpublic int y;\n+\tpublic int width;\n+\tpublic int height;\n+\tpublic boolean isLive;\n+\t\n+\tpublic Rect getRect(){\n+\t\treturn new Rect(x, y, x+width, y+height);\n+\t}\n+\t\n+\tpublic MapListener mapListener;\n+\t\n+\tpublic interface MapListener{\n+\t\tpublic boolean checkTankP(Tank tank , int x ,int y);\n+\t\tpublic boolean checkTank(Tank tank , int x ,int y);\n+\t\tpublic boolean checkBullet(Bullet bullet,int x ,int y);\n+\t}\n+}"
  }, {
    "sha" : "896951f475b0d7e553aff8d3a60cd31930d0e1f4",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pixmap.java",
    "status" : "added",
    "additions" : 13,
    "deletions" : 0,
    "changes" : 13,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pixmap.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pixmap.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pixmap.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,13 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Graphics.PixmapFormat;\n+\n+public interface Pixmap {\n+    public int getWidth();\n+\n+    public int getHeight();\n+\n+    public PixmapFormat getFormat();\n+\n+    public void dispose();\n+}"
  }, {
    "sha" : "79b7fef76e8a3289baea67fed48efcf208f01c8d",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Player.java",
    "status" : "added",
    "additions" : 92,
    "deletions" : 0,
    "changes" : 92,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Player.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Player.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Player.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,92 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+public class Player extends Tank {\n+\n+\tpublic boolean hasHat;\n+\tpublic boolean isOnbroad;\n+\tpublic int starNum;\n+\tpublic boolean hasSpade;\n+\tpublic boolean eatBomb;\n+\tpublic float hasShipTime;\n+\tpublic float hasHatTime;\n+\t\n+\tpublic Player(MapListener mapListener) {\n+\t\tsuper(mapListener);\n+\t\tbullet = new PlayerBullet(mapListener);\t\n+\t}\n+\t\n+\t@Override\n+\tpublic void initTank(int x, int y, int type, int direction) {\n+\t\tsuper.initTank(x, y, type, direction);\n+\t\tisOnbroad = false;\n+\t\thasSpade = false;\t\t\n+\t\tstarNum = 0;\n+\t\thasHat = true;\t\t\n+\t\teatBomb = false;\t\t\n+\t\thasHatTime = 0;\n+\t\thasShipTime = 0;\n+\t\tbullet.isLive = false;\n+\t}\n+\t\n+\tpublic void initPlayer(int x, int y , int direction){\n+\t\tthis.direction = direction;\n+\t\tthis.x = x;\n+\t\tthis.y = y;\n+\t\tisOnbroad = false;\n+\t\thasSpade = false;\t\t\n+\t\thasHat = true;\t\t\n+\t\teatBomb = false;\t\t\n+\t\thasHatTime = 0;\n+\t\thasShipTime = 0;\n+\t\tbullet.isLive = false;\n+\t}\n+\n+\n+\t@Override\n+\tpublic void changeType(int type) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif (type < 0 || type > 4) {\n+\t\t\tthrow new RuntimeException(\n+\t\t\t\t\t\"the tank_type of player is now right in changeType()\");\n+\t\t}\n+\t\tthis.tank_type = Tank.player_type[type];\n+\t\tthis.tank_lifes = Tank.player_lifes[type];\n+\t\tthis.tank_speed = Tank.player_speed[type];\n+\t\tbullet.changeType(type);\n+\t}\n+\n+\t@Override\n+\tpublic void update(float deltaTime) {\n+\t\tbullet.update(deltaTime);\n+\t}\n+\n+\t@Override\n+\tpublic void changeDirection(float deltaTime) {\n+\t\t// TODO Auto-generated method stub\n+\t}\n+\n+\t@Override\n+\tpublic void setGood() {\n+\t\t// TODO Auto-generated method stub\n+\t\tthis.isGood = true;\n+\t\tbullet.initBullet(x + Setting.Tank_Size / 2 - Setting.Bullet_Size / 2,\n+\t\t\t\ty + Setting.Tank_Size / 2 - Setting.Bullet_Size / 2, direction);\n+\t}\n+\n+\t@Override\n+\tpublic void shoot(float deltaTime) {\n+\t\tif (bullet == null)\n+\t\t\tthrow new RuntimeException(\n+\t\t\t\t\t\"the bullet in enemytank's shoot is null \");\n+\t\tif (bullet.isLive) {\n+\t\t\treturn;\n+\t\t} else {\n+\t\t\tbullet.isLive = true;\n+\t\t\tbullet.initBullet(x + Setting.Tank_Size / 2 - Setting.Bullet_Size\n+\t\t\t\t\t/ 2, y + Setting.Tank_Size / 2 - Setting.Bullet_Size / 2,\n+\t\t\t\t\tdirection);\n+\t\t}\n+\t}\n+\t\n+\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "95596f84b2f5c6277a3beb2c5f845bb67884cc4e",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37PlayerBullet.java",
    "status" : "added",
    "additions" : 24,
    "deletions" : 0,
    "changes" : 24,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37PlayerBullet.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37PlayerBullet.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37PlayerBullet.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,24 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+public class PlayerBullet extends Bullet {\n+\n+\tpublic PlayerBullet(MapListener mapListener) {\n+\t\tsuper(mapListener);\n+\t}\n+\n+\t@Override\n+\tpublic void changeType(int type) {\n+\t\tthis.bullet_type = type;\n+\t\tthis.bullet_speed = Bullet.player_bullet_speed[type];\n+\t\tthis.bullet_strength = Bullet.player_bullet_strength[type];\n+\t}\n+\n+\t@Override\n+\tpublic void setGood() {\n+\t\tthis.isGood = true;\n+\t}\n+\t\n+\n+\t\t}\n+\n+"
  }, {
    "sha" : "c5573b29ba70940c08308990413ceafd79e346c3",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pool.java",
    "status" : "added",
    "additions" : 36,
    "deletions" : 0,
    "changes" : 36,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pool.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pool.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Pool.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,36 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Pool<T> {\n+    public interface PoolObjectFactory<T> {\n+        public T createObject();\n+    }\n+\n+    private final List<T> freeObjects;\n+    private final PoolObjectFactory<T> factory;\n+    private final int maxSize;\n+\n+    public Pool(PoolObjectFactory<T> factory, int maxSize) {\n+        this.factory = factory;\n+        this.maxSize = maxSize;\n+        this.freeObjects = new ArrayList<T>(maxSize);\n+    }\n+\n+    public T newObject() {\n+        T object = null;\n+\n+        if (freeObjects.size() == 0)\n+            object = factory.createObject();\n+        else\n+            object = freeObjects.remove(freeObjects.size() - 1);\n+\n+        return object;\n+    }\n+\n+    public void free(T object) {\n+        if (freeObjects.size() < maxSize)\n+            freeObjects.add(object);\n+    }\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "8b858299018b076b31601c961db381ed6a918104",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Screen.java",
    "status" : "added",
    "additions" : 19,
    "deletions" : 0,
    "changes" : 19,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Screen.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Screen.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Screen.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,19 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+public abstract class Screen {\n+    protected final Game game;\n+\n+    public Screen(Game game) {\n+        this.game = game;\n+    }\n+\n+    public abstract void update(float deltaTime);\n+\n+    public abstract void present(float deltaTime);\n+\n+    public abstract void pause();\n+\n+    public abstract void resume();\n+\n+    public abstract void dispose();\n+}"
  }, {
    "sha" : "628db4da444eb4376a1862860bdb53c6e6699d79",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Setting.java",
    "status" : "added",
    "additions" : 19,
    "deletions" : 0,
    "changes" : 19,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Setting.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Setting.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Setting.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,19 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+public class Setting {\n+\tpublic static int level = 1;\n+\tpublic static final int Bullet_Mode_Speed = 3;\n+\tpublic static final int Bullet_Fast_Speed = 5;\n+\t\n+\tpublic static final int Tank_Mode_Speed = 1;\n+\tpublic static final int Tank_Fase_Speed = 2;\n+\t\n+\tpublic static final int LEFT = 3;\n+\tpublic static final int UP = 0;\n+\tpublic static final int RIGHT = 1;\n+\tpublic static final int DOWN = 2;\n+\t\n+\tpublic static final int Tank_Size = 22;\n+\tpublic static final int Bullet_Size = 4;\n+\tpublic static final int Item_Size = 24;\n+}"
  }, {
    "sha" : "63e06792a7f484002e28cd5c5b34b1de1453ad7b",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37SingleTouchHandler.java",
    "status" : "added",
    "additions" : 101,
    "deletions" : 0,
    "changes" : 101,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37SingleTouchHandler.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37SingleTouchHandler.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37SingleTouchHandler.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,101 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import android.view.MotionEvent;\n+import android.view.View;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Pool;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Input.TouchEvent;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Pool.PoolObjectFactory;\n+\n+public class SingleTouchHandler implements TouchHandler {\n+    boolean isTouched;\n+    int touchX;\n+    int touchY;\n+    Pool<TouchEvent> touchEventPool;\n+    List<TouchEvent> touchEvents = new ArrayList<TouchEvent>();\n+    List<TouchEvent> touchEventsBuffer = new ArrayList<TouchEvent>();\n+    float scaleX;\n+    float scaleY;\n+    \n+    public SingleTouchHandler(View view, float scaleX, float scaleY) {\n+        PoolObjectFactory<TouchEvent> factory = new PoolObjectFactory<TouchEvent>() {\n+            @Override\n+            public TouchEvent createObject() {\n+                return new TouchEvent();\n+            }            \n+        };\n+        touchEventPool = new Pool<TouchEvent>(factory, 100);\n+        view.setOnTouchListener(this);\n+\n+        this.scaleX = scaleX;\n+        this.scaleY = scaleY;\n+    }\n+    \n+    @Override\n+    public boolean onTouch(View v, MotionEvent event) {\n+        synchronized(this) {\n+            TouchEvent touchEvent = touchEventPool.newObject();\n+            switch (event.getAction()) {\n+            case MotionEvent.ACTION_DOWN:\n+                touchEvent.type = TouchEvent.TOUCH_DOWN;\n+                isTouched = true;\n+                break;\n+            case MotionEvent.ACTION_MOVE:\n+                touchEvent.type = TouchEvent.TOUCH_DRAGGED;\n+                isTouched = true;\n+                break;\n+            case MotionEvent.ACTION_CANCEL:                \n+            case MotionEvent.ACTION_UP:\n+                touchEvent.type = TouchEvent.TOUCH_UP;\n+                isTouched = false;\n+                break;\n+            }\n+            \n+            touchEvent.x = touchX = (int)(event.getX() * scaleX);\n+            touchEvent.y = touchY = (int)(event.getY() * scaleY);\n+            touchEventsBuffer.add(touchEvent);                        \n+            \n+            return true;\n+        }\n+    }\n+\n+    @Override\n+    public boolean isTouchDown(int pointer) {\n+        synchronized(this) {\n+            if(pointer == 0)\n+                return isTouched;\n+            else\n+                return false;\n+        }\n+    }\n+\n+    @Override\n+    public int getTouchX(int pointer) {\n+        synchronized(this) {\n+            return touchX;\n+        }\n+    }\n+\n+    @Override\n+    public int getTouchY(int pointer) {\n+        synchronized(this) {\n+            return touchY;\n+        }\n+    }\n+\n+    @Override\n+    public List<TouchEvent> getTouchEvents() {\n+        synchronized(this) {     \n+            int len = touchEvents.size();\n+            for( int i = 0; i < len; i++ )\n+                touchEventPool.free(touchEvents.get(i));\n+            touchEvents.clear();\n+            touchEvents.addAll(touchEventsBuffer);\n+            touchEventsBuffer.clear();\n+            return touchEvents;\n+        }\n+    }\n+}"
  }, {
    "sha" : "fb17500c8c57e828a077346e5efa921aa19143d3",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Tank.java",
    "status" : "added",
    "additions" : 137,
    "deletions" : 0,
    "changes" : 137,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Tank.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Tank.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37Tank.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,137 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.Random;\n+\n+public abstract class Tank extends ObjectCubo {\n+\n+\tpublic static final int[] player_type = { 0, 1, 2, 3 };\n+\tpublic static final int[] player_lifes = { 1, 1, 1, 2 };\n+\tpublic static final int[] player_speed = { Setting.Tank_Mode_Speed,\n+\t\t\tSetting.Tank_Fase_Speed, Setting.Tank_Fase_Speed,\n+\t\t\tSetting.Tank_Fase_Speed };\n+\n+\tpublic static final int[] enemy_type = { 0, 1, 2, 3, 4, 5, 6, 7 };\n+\tpublic static final int[] enemy_lifes = { 1, 2, 1, 2, 1, 2, 3, 4 };\n+\tpublic static final int[] enemy_speed = { Setting.Tank_Mode_Speed,\n+\t\t\tSetting.Tank_Fase_Speed, Setting.Tank_Mode_Speed,\n+\t\t\tSetting.Tank_Fase_Speed, Setting.Tank_Mode_Speed,\n+\t\t\tSetting.Tank_Mode_Speed, Setting.Tank_Mode_Speed,\n+\t\t\tSetting.Tank_Fase_Speed };\n+\tprotected boolean isGood;\n+\tprotected boolean isPass = true;\n+\tprotected boolean notIntroblue;\n+\t\n+\n+\tpublic int direction;\n+\tpublic int tank_speed;\n+\tpublic int tank_lifes;\n+\tpublic int tank_type;\n+\n+\tpublic Bullet bullet;\n+\tpublic float tickTime;\n+\tpublic float tickTime2;\n+\tpublic Random random = new Random();\n+\n+\tpublic Tank(MapListener mapListener) {\n+\t\tthis.mapListener = mapListener;\n+\t\tthis.width = Setting.Tank_Size;\n+\t\tthis.height = Setting.Tank_Size;\n+\t}\n+\n+\tpublic void initTank(int x, int y, int type, int direction) {\n+\t\tisLive = true;\n+\t\tthis.x = x;\n+\t\tthis.y = y;\n+\t\tthis.tank_type = type;\n+\t\tthis.direction = direction;\n+\t\tsetGood();\t\t\n+\t\tchangeType(type);\t\t\n+\t}\n+\n+\tpublic abstract void setGood();\n+\n+\tpublic abstract void changeType(int type);\n+\n+\tpublic abstract void changeDirection(float deltaTime);\n+\t\n+\tpublic void shoot(float deltaTime) {\n+\t\tif(!isLive)\n+\t\t\treturn;\t\t\t\t\t\n+\t\tif (bullet == null)\n+\t\t\tthrow new RuntimeException(\n+\t\t\t\t\t\"the bullet in enemytank's shoot is null \");\n+\t\tif (bullet.isLive) {\n+\t\t\treturn;\n+\t\t} else {\t\t\t\n+\t\t\ttickTime2 +=deltaTime;\n+\t\t\tif(tickTime2 > new Random().nextFloat()){\n+\t\t\t\ttickTime2 = 0;\n+\t\t\t\tbullet.isLive = true;\n+\t\t\t\tbullet.initBullet(x + Setting.Tank_Size / 2\n+\t\t\t\t\t\t- Setting.Bullet_Size / 2, y + Setting.Tank_Size / 2\n+\t\t\t\t\t\t- Setting.Bullet_Size / 2, direction);\n+\t\t\t}\n+\t\t}\n+\t};\n+\n+\tpublic void update(float deltaTime) {\n+\t\tmove(deltaTime);\n+\t\tshoot(deltaTime);\n+\t\tchangeDirection(deltaTime);\n+\t\tbullet.update(deltaTime);\n+\t}\n+\n+\tpublic void move(float deltaTime) {\n+\t\tif(!isLive)\n+\t\t\treturn;\n+\t\tisPass = true;\n+\t\tnotIntroblue = true;\n+\t\tint x1 = x;\n+\t\tint y1 = y;\n+\t\tswitch (direction) {\n+\t\tcase Setting.LEFT:\n+\t\t\tx1 -= tank_speed;\n+\t\t\tbreak;\n+\t\tcase Setting.UP:\n+\t\t\ty1 -= tank_speed;\n+\t\t\tbreak;\n+\t\tcase Setting.RIGHT:\n+\t\t\tx1 += tank_speed;\n+\t\t\tbreak;\n+\t\tcase Setting.DOWN:\n+\t\t\ty1 += tank_speed;\n+\t\t\tbreak;\n+\t\t}\n+\t\tif (x1 < 0 || x1 >= 480 - Setting.Tank_Size\n+\t\t\t\t|| y1 >= 480 - Setting.Tank_Size || y1 < 0) {\n+\t\t\tif (!isGood)\n+\t\t\t\tchangeDirection(deltaTime);\t\t\t\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tnotIntroblue = mapListener.checkTank(this , x, y)\n+\t\t\t\t&& mapListener.checkTank(this , x + Setting.Tank_Size, y)\n+\t\t\t\t&& mapListener.checkTank(this , x, y + Setting.Tank_Size)\n+\t\t\t\t&& mapListener.checkTank(this , x + Setting.Tank_Size, y\n+\t\t\t\t\t\t+ Setting.Tank_Size) && mapListener.checkTankP(this , x , y);\n+\n+\t\tif (!notIntroblue) {\n+\t\t\tx = x1;\n+\t\t\ty = y1;\n+\t\t\treturn;\n+\t\t} else {\n+\t\t\tisPass = mapListener.checkTank(this , x1, y1)\n+\t\t\t\t\t&& mapListener.checkTank(this ,x1 + Setting.Tank_Size, y1)\n+\t\t\t\t\t&& mapListener.checkTank(this , x1, y1 + Setting.Tank_Size)\n+\t\t\t\t\t&& mapListener.checkTank(this ,x1 + Setting.Tank_Size, y1\n+\t\t\t\t\t\t\t+ Setting.Tank_Size) && mapListener.checkTankP(this ,x1 ,y1);\n+\t\t\tif (!isPass) {\n+\t\t\t\tif (!isGood)\n+\t\t\t\t\tchangeDirection(deltaTime);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tx = x1;\n+\t\t\ty = y1;\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "c617e34f6ee9e67a2d3b10eb5b485c8563898d68",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TankGame.java",
    "status" : "added",
    "additions" : 37,
    "deletions" : 0,
    "changes" : 37,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TankGame.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TankGame.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TankGame.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,37 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import android.view.KeyEvent;\n+\n+\n+public class TankGame extends AndroidGame{\n+\n+\t@Override\n+\tpublic Screen getStartScreen() {\n+\t\treturn new LoadingScreen(this);\n+\t}\n+\n+\t@Override\n+\tpublic boolean onKeyDown(int keyCode, KeyEvent event) {\n+\t\tif(keyCode == KeyEvent.KEYCODE_BACK){\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn super.onKeyDown(keyCode, event);\n+\t}\n+\t\n+\t@Override\n+\tprotected void onStop() {\n+\t\tsuper.onStop();\n+\t\tAssets.items.dispose();\n+\t\tAssets.city.dispose();\n+\t\tAssets.controls.dispose();\n+\t\tAssets.spade.dispose();\n+\t\tAssets.tank.dispose();\n+\t\tAssets.player.dispose();\n+\t\tAssets.titles.dispose();\n+\t\tAssets.bullets.dispose();\n+\t\tAssets.level.dispose();\n+\t\tAssets.tank_safe1.dispose();\n+\t\tAssets.tank_safe2.dispose();\n+\n+\t}\t\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "2e322cc72c6f752cfd994e6257726021aa0fb266",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TestScreen.java",
    "status" : "added",
    "additions" : 102,
    "deletions" : 0,
    "changes" : 102,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TestScreen.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TestScreen.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TestScreen.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,102 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.io.BufferedReader;\n+import java.io.BufferedWriter;\n+import java.io.InputStreamReader;\n+import java.io.OutputStreamWriter;\n+import java.util.List;\n+\n+import android.graphics.Color;\n+import android.util.Log;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Graphics.PixmapFormat;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Input.KeyEvent;\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Input.TouchEvent;\n+\n+class TestScreen extends Screen {\n+    long startTime = System.nanoTime();\n+    int frames;\n+    Pixmap bob;\n+    Pixmap bobAlpha;\n+        \n+    public TestScreen(Game game) {\n+        super(game);    \n+        bob = game.getGraphics().newPixmap(\"bobrgb888.png\", PixmapFormat.RGB565);\n+        bobAlpha = game.getGraphics().newPixmap(\"bobargb8888.png\", PixmapFormat.ARGB4444);\n+        \n+        try {\n+            BufferedReader in = new BufferedReader(new InputStreamReader(game.getFileIO().readAsset(\"test.txt\")));\n+            String text = in.readLine();\n+            in.close();\n+            \n+            BufferedWriter out = new BufferedWriter(new OutputStreamWriter(game.getFileIO().writeFile(\"test.txt\")));\n+            out.write(\"This is a freaking test\");\n+            out.close();\n+            \n+            in = new BufferedReader(new InputStreamReader(game.getFileIO().readFile(\"test.txt\")));\n+            String text2 = in.readLine();\n+            in.close();\n+            \n+            Log.d(\"MrNom\", text + \", \" + text2 );\n+        } catch(Exception ex) {\n+            ex.printStackTrace();\n+        }\n+    }\n+    \n+    @Override\n+    public void update(float deltaTime) {\n+    }\n+\n+    @Override\n+    public void present(float deltaTime) {\n+        Graphics g = game.getGraphics();\n+        Input inp = game.getInput();\n+        g.clear(Color.RED);\n+        g.drawLine(0,0,320, 480, Color.BLUE);\n+        g.drawRect(20,20,100,100, Color.GREEN);\n+        g.drawPixmap(bob, 100, 100);\n+        g.drawPixmap(bobAlpha, 100, 200);\n+        g.drawPixmap(bob, 200, 200, 0, 0, 64, 64);\n+        for(int i=0; i < 2; i++) {\n+            if(inp.isTouchDown(i)) {\n+                g.drawPixmap(bob, inp.getTouchX(i), inp.getTouchY(i), 0, 0, 64, 64);\n+            }\n+        }\n+        \n+        g.drawPixmap(bob, (int)(inp.getAccelX() * 10) + 160 - 16, (int)(inp.getAccelY() * 10) + 240 - 16, 0, 0, 32, 32 );\n+        \n+        List<KeyEvent> keyEvents = inp.getKeyEvents();\n+        int len = keyEvents.size();\n+        for(int i = 0; i < len; i++) {\n+            Log.d(\"MrNom\", keyEvents.get(i).toString());\n+        }\n+        \n+        List<TouchEvent> touchEvents = inp.getTouchEvents();\n+        len = touchEvents.size();\n+        for(int i = 0; i < len; i++) {\n+            Log.d(\"MrNom\", touchEvents.get(i).toString());\n+        }\n+        \n+        frames++;\n+        if(System.nanoTime() - startTime > 1000000000l) {\n+            Log.d(\"MrNom\", \"fps: \" + frames + \", delta: \" + deltaTime);\n+            frames = 0;\n+            startTime = System.nanoTime();\n+        }\n+    }\n+\n+    @Override\n+    public void pause() {\n+        Log.d(\"MrNom\", \"pause\");                \n+    }\n+\n+    @Override\n+    public void resume() {\n+        Log.d(\"MrNom\", \"resume\");   \n+    }\n+\n+    @Override\n+    public void dispose() {\n+        Log.d(\"MrNom\", \"dispose\");\n+    }            \n+}"
  }, {
    "sha" : "c714cf236785c956c817be3ba12616731d52c995",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TouchHandler.java",
    "status" : "added",
    "additions" : 17,
    "deletions" : 0,
    "changes" : 17,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TouchHandler.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TouchHandler.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37TouchHandler.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,17 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.List;\n+\n+import android.view.View.OnTouchListener;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.Input.TouchEvent;\n+\n+public interface TouchHandler extends OnTouchListener {\n+    public boolean isTouchDown(int pointer);\n+    \n+    public int getTouchX(int pointer);\n+    \n+    public int getTouchY(int pointer);\n+    \n+    public List<TouchEvent> getTouchEvents();\n+}"
  }, {
    "sha" : "2d8a29ea03eedde60b39d2b68db9e7a93e9c70fa",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37World.java",
    "status" : "added",
    "additions" : 158,
    "deletions" : 0,
    "changes" : 158,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37World.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37World.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901137/37World.java?ref=3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
    "patch" : "@@ -0,0 +1,158 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901137;\n+\n+import java.util.Random;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901137.ObjectCubo.MapListener;\n+\n+public class World implements MapListener {\n+\n+\tpublic interface WorldListener {\n+\t\tpublic int[][] loadMap(int level);\n+\t}\n+\n+\tpublic static final int World_Width = 20;\n+\tpublic static final int World_Height = 20;\n+\tpublic float[] tickTimes = new float[7];\n+\tpublic float homeIsFeTime;\n+\tpublic int homeshow;\n+\tpublic Player player;\n+\tpublic int createTankNum;\n+\tpublic int movingTankNum;\n+\tpublic int playerLife;\n+\tpublic int[][] map;\n+\tpublic boolean gameOver;\n+\tpublic WorldListener worldListener;\n+\tpublic World(WorldListener worldListener) {\n+\t\tplayer = new Player(this);\n+\t\tthis.worldListener = worldListener;\n+\t\tplayer.initTank(24 * 7 - 5, 480 - Setting.Tank_Size - 1, 0, Setting.UP);\n+\t\tplayerLife = 4;\n+\t\tinitWorld(Setting.level);\n+\t}\n+\n+\tpublic void initWorld(int level) {\n+\t\tplayer.initPlayer(24 * 7 - 5, 480 - Setting.Tank_Size - 1, Setting.UP);\n+\t\tplayer.bullet.isLive = false;\n+\t\tRandom random = new Random();\n+\t\tSetting.level = level;\n+\t\tgameOver = false;\n+\t\tcreateTankNum = 5;\n+\t\tmovingTankNum = 5;\n+\t\tmap = worldListener.loadMap(Setting.level);\n+\t}\n+\n+\tpublic void update(float deltaTime) {\n+\t\tfor (int i = 0; i < 5; i++) {\n+\t\t}\n+\t\tplayer.update(deltaTime);\n+\t\tupdatePlayer(deltaTime);\n+\n+\t\tif (movingTankNum > 0 && !gameOver) {\n+\t\t} else {\n+\t\t\tif (createTankNum >= 20) {\n+\t\t\t\tnextLevel(deltaTime);\n+\t\t\t}\n+\t\t}\n+\t\tif (gameOver) {\n+\t\t\tplayer.changeType(0);\n+\t\t\tfirstLevel(deltaTime);\n+\t\t}\n+\t}\n+\n+\tpublic void firstLevel(float deltaTime) {\n+\t\ttickTimes[6] += deltaTime;\n+\t\tif (tickTimes[6] > 3) {\n+\t\t\thomeshow = 0;\n+\t\t\thomeIsFeTime = 0;\n+\t\t\tinitWorld(1);\n+\t\t\tplayerLife = 4;\n+\t\t\ttickTimes[6] = 0;\n+\t\t}\n+\t}\n+\n+\tpublic void nextLevel(float deltaTime) {\n+\t\ttickTimes[6] += deltaTime;\n+\t\tif (tickTimes[6] > 3 && !gameOver) {\n+\t\t\tif (Setting.level++ > 20) {\n+\t\t\t\tSetting.level = 1;\n+\t\t\t}\n+\t\t\tinitWorld(Setting.level);\n+\t\t\ttickTimes[6] = 0;\n+\t\t\thomeshow = 0;\n+\t\t\thomeIsFeTime = 0;\n+\t\t}\n+\t}\n+\n+\n+\tpublic void updatePlayer(float deltaTime) {\n+\t\tif (playerLife >= 0) {\n+\t\t\tif (player.isLive == false) {\n+\t\t\t\ttickTimes[5] += deltaTime;\n+\t\t\t\tif (tickTimes[5] > 1) {\n+\t\t\t\t\ttickTimes[5] = 0;\n+\t\t\t\t\tplayer.initTank(24 * 7 - 5, 480 - Setting.Tank_Size - 1, 0,\n+\t\t\t\t\t\t\tSetting.UP);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\n+\n+\n+\t@Override\n+\tpublic boolean checkTank(Tank tank, int x, int y) {\n+\t\tint item1 = map[y / Setting.Item_Size][x / Setting.Item_Size];\n+\t\tif (item1 == 0 || item1 == 3)\n+\t\t\treturn true;\n+\t\tif (tank.isGood) {\n+\t\t\tif (item1 == 4 || item1 == 5) {\n+\t\t\t\tif (player.isOnbroad) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic boolean checkBullet(Bullet bullet, int x, int y) {\n+\t\tint y1 = (y + Setting.Bullet_Size / 2) / Setting.Item_Size;\n+\t\tint x1 = (x + Setting.Bullet_Size / 2) / Setting.Item_Size;\n+\t\tint item1 = map[y1][x1];\n+\t\tswitch (item1) {\n+\t\t\tcase 0:\n+\t\t\t\treturn true;\n+\t\t\tcase 1:\n+\t\t\t\tmap[y1][x1] = 0;\n+\t\t\t\treturn false;\n+\t\t\tcase 2:\n+\t\t\t\tif (bullet.bullet_strength == 4) {\n+\t\t\t\t\tmap[y1][x1] = 0;\n+\t\t\t\t}\n+\t\t\t\treturn false;\n+\t\t\tcase 3:\n+\t\t\t\tif (bullet.bullet_strength == 4) {\n+\t\t\t\t\tmap[y1][x1] = 0;\n+\t\t\t\t}\n+\t\t\tcase 4:\n+\t\t\tcase 5:\n+\t\t\tcase 7:\n+\t\t\t\treturn true;\n+\t\t\tcase 6:\n+\t\t\t\treturn false;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic boolean checkTankP(Tank tank, int x, int y) {\n+\t\tint x1 = tank.x;\n+\t\tint y1 = tank.y;\n+\t\ttank.x = x;\n+\t\ttank.y = y;\n+\n+\t\treturn false;\n+\t}\n+\n+}\n\\ No newline at end of file"
  } ],
  "sha" : "3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/3da13fb30cc72d5fe34ff706d42d73b73e8b4a85",
  "parents" : [ {
    "sha" : "c049bd47a06651c97cccf5b2c1d0d33df640045a",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/c049bd47a06651c97cccf5b2c1d0d33df640045a",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/c049bd47a06651c97cccf5b2c1d0d33df640045a"
  } ]
}