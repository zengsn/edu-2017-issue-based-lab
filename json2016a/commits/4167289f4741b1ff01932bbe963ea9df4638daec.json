{
  "committer" : {
    "login" : "lgkk",
    "id" : 13358945,
    "avatar_url" : "https://avatars.githubusercontent.com/u/13358945?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/lgkk",
    "html_url" : "https://github.com/lgkk",
    "followers_url" : "https://api.github.com/users/lgkk/followers",
    "following_url" : "https://api.github.com/users/lgkk/following{/other_user}",
    "gists_url" : "https://api.github.com/users/lgkk/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/lgkk/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/lgkk/subscriptions",
    "organizations_url" : "https://api.github.com/users/lgkk/orgs",
    "repos_url" : "https://api.github.com/users/lgkk/repos",
    "events_url" : "https://api.github.com/users/lgkk/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/lgkk/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 75,
    "additions" : 10,
    "deletions" : 65
  },
  "author" : {
    "login" : "lgkk",
    "id" : 13358945,
    "avatar_url" : "https://avatars.githubusercontent.com/u/13358945?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/lgkk",
    "html_url" : "https://github.com/lgkk",
    "followers_url" : "https://api.github.com/users/lgkk/followers",
    "following_url" : "https://api.github.com/users/lgkk/following{/other_user}",
    "gists_url" : "https://api.github.com/users/lgkk/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/lgkk/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/lgkk/subscriptions",
    "organizations_url" : "https://api.github.com/users/lgkk/orgs",
    "repos_url" : "https://api.github.com/users/lgkk/repos",
    "events_url" : "https://api.github.com/users/lgkk/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/lgkk/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/4167289f4741b1ff01932bbe963ea9df4638daec",
  "commit" : {
    "author" : {
      "name" : "lgkk",
      "email" : "linguikai@foxmail.com",
      "date" : "2016-05-04T08:13:10Z"
    },
    "committer" : {
      "name" : "lgkk",
      "email" : "linguikai@foxmail.com",
      "date" : "2016-05-04T08:13:10Z"
    },
    "message" : "#89 #90 #92 #158 lab3&4&6\n\n#89 #90 #92 #158 lab3&4&6",
    "tree" : {
      "sha" : "2f0f5a37d532d17f5634ac003ef4347c63521edf",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/2f0f5a37d532d17f5634ac003ef4347c63521edf"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/4167289f4741b1ff01932bbe963ea9df4638daec",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/4167289f4741b1ff01932bbe963ea9df4638daec/comments",
  "files" : [ {
    "sha" : "a096d8a6b756db64848ee2289f667413e0ea8f8a",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/.DS_Store",
    "status" : "modified",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/4167289f4741b1ff01932bbe963ea9df4638daec/app/src/main/java/edu/hzuapps/androidworks/homeworks/.DS_Store",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/4167289f4741b1ff01932bbe963ea9df4638daec/app/src/main/java/edu/hzuapps/androidworks/homeworks/.DS_Store",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/.DS_Store?ref=4167289f4741b1ff01932bbe963ea9df4638daec"
  }, {
    "sha" : "f2a84cce95e5ef1204aadc40aa56c3e4fd522c66",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/Com1314080901119Activity.java",
    "status" : "modified",
    "additions" : 3,
    "deletions" : 3,
    "changes" : 6,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/4167289f4741b1ff01932bbe963ea9df4638daec/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/Com1314080901119Activity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/4167289f4741b1ff01932bbe963ea9df4638daec/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/Com1314080901119Activity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/Com1314080901119Activity.java?ref=4167289f4741b1ff01932bbe963ea9df4638daec",
    "patch" : "@@ -29,7 +29,7 @@\n \tprivate int mNoteNumber = 1;\n \tprivate NotesDbAdapter mDbHelper;\n     \n-    /** Called when the activity is first created. */\n+\n     @Override\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n@@ -61,14 +61,14 @@ private void createNote() {\n     }\n     \n     private void fillData() {\n-        // Get all of the notes from the database and create the item list\n+\n         Cursor c = mDbHelper.fetchAllNotes();\n         startManagingCursor(c);\n \n         String[] from = new String[] { NotesDbAdapter.KEY_TITLE };\n         int[] to = new int[] { R.id.text1 };\n         \n-        // Now create an array adapter and set it to display using our row\n+\n         SimpleCursorAdapter notes =\n             new SimpleCursorAdapter(this, R.layout.notes_row, c, from, to);\n         setListAdapter(notes);"
  }, {
    "sha" : "7f3f6a3873b6042411a97f52e2edd95db1c688e2",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/NotesDbAdapter.java",
    "status" : "modified",
    "additions" : 7,
    "deletions" : 62,
    "changes" : 69,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/4167289f4741b1ff01932bbe963ea9df4638daec/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/NotesDbAdapter.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/4167289f4741b1ff01932bbe963ea9df4638daec/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/NotesDbAdapter.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901119/NotesDbAdapter.java?ref=4167289f4741b1ff01932bbe963ea9df4638daec",
    "patch" : "@@ -24,16 +24,6 @@\n import android.database.sqlite.SQLiteOpenHelper;\n import android.util.Log;\n \n-/**\n- * Simple notes database access helper class. Defines the basic CRUD operations\n- * for the notepad example, and gives the ability to list all notes as well as\n- * retrieve or modify a specific note.\n- * \n- * This has been improved from the first version of this tutorial through the\n- * addition of better error handling and also using returning a Cursor instead\n- * of using a collection of inner classes (which is less scalable and not\n- * recommended).\n- */\n public class NotesDbAdapter {\n \n     public static final String KEY_TITLE = \"title\";\n@@ -78,25 +68,12 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n         }\n     }\n \n-    /**\n-     * Constructor - takes the context to allow the database to be\n-     * opened/created\n-     * \n-     * @param ctx the Context within which to work\n-     */\n+\n     public NotesDbAdapter(Context ctx) {\n         this.mCtx = ctx;\n     }\n \n-    /**\n-     * Open the notes database. If it cannot be opened, try to create a new\n-     * instance of the database. If it cannot be created, throw an exception to\n-     * signal the failure\n-     * \n-     * @return this (self reference, allowing this to be chained in an\n-     *         initialization call)\n-     * @throws SQLException if the database could be neither opened or created\n-     */\n+\n     public NotesDbAdapter open() throws SQLException {\n         mDbHelper = new DatabaseHelper(mCtx);\n         mDb = mDbHelper.getWritableDatabase();\n@@ -108,15 +85,7 @@ public void close() {\n     }\n \n \n-    /**\n-     * Create a new note using the title and body provided. If the note is\n-     * successfully created return the new rowId for that note, otherwise return\n-     * a -1 to indicate failure.\n-     * \n-     * @param title the title of the note\n-     * @param body the body of the note\n-     * @return rowId or -1 if failed\n-     */\n+\n     public long createNote(String title, String body) {\n         ContentValues initialValues = new ContentValues();\n         initialValues.put(KEY_TITLE, title);\n@@ -125,35 +94,20 @@ public long createNote(String title, String body) {\n         return mDb.insert(DATABASE_TABLE, null, initialValues);\n     }\n \n-    /**\n-     * Delete the note with the given rowId\n-     * \n-     * @param rowId id of note to delete\n-     * @return true if deleted, false otherwise\n-     */\n+\n     public boolean deleteNote(long rowId) {\n \n         return mDb.delete(DATABASE_TABLE, KEY_ROWID + \"=\" + rowId, null) > 0;\n     }\n \n-    /**\n-     * Return a Cursor over the list of all notes in the database\n-     * \n-     * @return Cursor over all notes\n-     */\n+\n     public Cursor fetchAllNotes() {\n \n         return mDb.query(DATABASE_TABLE, new String[] {KEY_ROWID, KEY_TITLE,\n                 KEY_BODY}, null, null, null, null, null);\n     }\n \n-    /**\n-     * Return a Cursor positioned at the note that matches the given rowId\n-     * \n-     * @param rowId id of note to retrieve\n-     * @return Cursor positioned to matching note, if found\n-     * @throws SQLException if note could not be found/retrieved\n-     */\n+\n     public Cursor fetchNote(long rowId) throws SQLException {\n \n         Cursor mCursor =\n@@ -168,16 +122,7 @@ public Cursor fetchNote(long rowId) throws SQLException {\n \n     }\n \n-    /**\n-     * Update the note using the details provided. The note to be updated is\n-     * specified using the rowId, and it is altered to use the title and body\n-     * values passed in\n-     * \n-     * @param rowId id of note to update\n-     * @param title value to set note title to\n-     * @param body value to set note body to\n-     * @return true if the note was successfully updated, false otherwise\n-     */\n+\n     public boolean updateNote(long rowId, String title, String body) {\n         ContentValues args = new ContentValues();\n         args.put(KEY_TITLE, title);"
  } ],
  "sha" : "4167289f4741b1ff01932bbe963ea9df4638daec",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/4167289f4741b1ff01932bbe963ea9df4638daec",
  "parents" : [ {
    "sha" : "fa7538546b313917ba7c74d6121d18b2a8b65a63",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/fa7538546b313917ba7c74d6121d18b2a8b65a63",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/fa7538546b313917ba7c74d6121d18b2a8b65a63"
  } ]
}