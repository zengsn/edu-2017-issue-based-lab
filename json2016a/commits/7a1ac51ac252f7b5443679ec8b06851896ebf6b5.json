{
  "committer" : {
    "login" : "ww2315033",
    "id" : 17639739,
    "avatar_url" : "https://avatars.githubusercontent.com/u/17639739?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/ww2315033",
    "html_url" : "https://github.com/ww2315033",
    "followers_url" : "https://api.github.com/users/ww2315033/followers",
    "following_url" : "https://api.github.com/users/ww2315033/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ww2315033/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ww2315033/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ww2315033/subscriptions",
    "organizations_url" : "https://api.github.com/users/ww2315033/orgs",
    "repos_url" : "https://api.github.com/users/ww2315033/repos",
    "events_url" : "https://api.github.com/users/ww2315033/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ww2315033/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 2301,
    "additions" : 2297,
    "deletions" : 4
  },
  "author" : {
    "login" : "ww2315033",
    "id" : 17639739,
    "avatar_url" : "https://avatars.githubusercontent.com/u/17639739?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/ww2315033",
    "html_url" : "https://github.com/ww2315033",
    "followers_url" : "https://api.github.com/users/ww2315033/followers",
    "following_url" : "https://api.github.com/users/ww2315033/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ww2315033/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ww2315033/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ww2315033/subscriptions",
    "organizations_url" : "https://api.github.com/users/ww2315033/orgs",
    "repos_url" : "https://api.github.com/users/ww2315033/repos",
    "events_url" : "https://api.github.com/users/ww2315033/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ww2315033/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
  "commit" : {
    "author" : {
      "name" : "ww2315033",
      "email" : "448252312@qq.com",
      "date" : "2016-05-22T08:25:19Z"
    },
    "committer" : {
      "name" : "ww2315033",
      "email" : "448252312@qq.com",
      "date" : "2016-05-22T08:25:19Z"
    },
    "message" : "#95 #94 #93 #144 lab9 lab8 lab7",
    "tree" : {
      "sha" : "49e5296604a6a8eb981cfb8b05f667b373d19810",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/49e5296604a6a8eb981cfb8b05f667b373d19810"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/comments",
  "files" : [ {
    "sha" : "7ee9809affea4aa98e193e6007b532564e20fb02",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BigPlane.java",
    "status" : "added",
    "additions" : 81,
    "deletions" : 0,
    "changes" : 81,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BigPlane.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BigPlane.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BigPlane.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,81 @@\n+package com.alonso.object;\n+\n+import java.util.Random;\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*���͵л����*/\n+public class BigPlane extends EnemyPlane{\n+\tprivate static int currentCount = 0;\t //\t����ǰ�����\n+\tpublic static int sumCount = 2;\t \t \t //\t�����ܵ����\n+\tprivate Bitmap bigPlane; // ����ͼƬ\n+\tpublic BigPlane(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.score = 3000;\t\t// Ϊ�������÷���\n+\t}\n+\t//��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\n+\t\tbloodVolume = 30;\n+\t\tblood = bloodVolume;\n+\t\tRandom ran = new Random();\n+\t\tspeed = ran.nextInt(2) + 4 * arg0;\t\n+\t\tobject_x = ran.nextInt((int)(screen_width - object_width));\n+\t\tobject_y = -object_height * (currentCount*2 + 1);\n+\t\tcurrentCount++;\n+\t\tif(currentCount >= sumCount){\n+\t\t\tcurrentCount = 0;\n+\t\t}\n+\t}\n+\t// ��ʼ��ͼƬ��Դ\t\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbigPlane = BitmapFactory.decodeResource(resources, R.drawable.big);\n+\t\tobject_width = bigPlane.getWidth();\t\t\t//���ÿһ֡λͼ�Ŀ�\n+\t\tobject_height = bigPlane.getHeight()/5;\t\t//���ÿһ֡λͼ�ĸ�\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(isAlive){\n+\t\t\tif(!isExplosion){\n+\t\t\t\tif(isVisible){\n+\t\t\t\t\tcanvas.save();\n+\t\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\t\tcanvas.drawBitmap(bigPlane, object_x, object_y,paint);\n+\t\t\t\t\tcanvas.restore();\n+\t\t\t\t}\t\n+\t\t\t\tlogic();\n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tint y = (int) (currentFrame * object_height); // ��õ�ǰ֡�����λͼ��Y���\n+\t\t\t\tcanvas.save();\n+\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\tcanvas.drawBitmap(bigPlane, object_x, object_y - y,paint);\n+\t\t\t\tcanvas.restore();\n+\t\t\t\tcurrentFrame++;\n+\t\t\t\tif(currentFrame >= 5){\n+\t\t\t\t\tcurrentFrame = 0;\n+\t\t\t\t\tisExplosion = false;\n+\t\t\t\t\tisAlive = false;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\t// �ͷ���Դ\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(!bigPlane.isRecycled()){\n+\t\t\tbigPlane.recycle();\n+\t\t}\n+\t}\n+}"
  }, {
    "sha" : "a0c152e851ea962061c41e6c0c069cf0a42c3a6a",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossBullet.java",
    "status" : "added",
    "additions" : 90,
    "deletions" : 0,
    "changes" : 90,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossBullet.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossBullet.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossBullet.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,90 @@\n+package com.alonso.object;\n+\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*BOSS�ӵ�*/\n+public class BossBullet extends Bullet{\n+\tprivate Bitmap bullet; \t\t // �ӵ���ͼƬ\n+\tpublic BossBullet(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.harm = 1;\n+\t}\n+\t// ��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\n+\t\tspeed = -20;\t\n+\t\tobject_x = arg1 - object_width / 2;\n+\t\tobject_y = arg2 - object_height;\n+\t}\n+\t// ��ʼ��ͼƬ��Դ��\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbullet = BitmapFactory.decodeResource(resources, R.drawable.bossbullet);\n+\t\tobject_width = bullet.getWidth();\n+\t\tobject_height = bullet.getHeight();\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif (isAlive) {\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(object_x, object_y, object_x + object_width,object_y + object_height);\n+\t\t\tcanvas.drawBitmap(bullet, object_x, object_y, paint);\n+\t\t\tcanvas.restore();\n+\t\t\tlogic();\n+\t\t}\n+\t}\n+\t// �ͷ���Դ�ķ���\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(!bullet.isRecycled()){\n+\t\t\tbullet.recycle();\n+\t\t}\n+\t}\n+\t// ������߼�����\n+\t@Override\n+\tpublic void logic() {\n+\t\tif (object_y <= screen_height) {\n+\t\t\tobject_y -= speed;\n+\t\t} else {\n+\t\t\tisAlive = false;\n+\t\t}\n+\t}\n+\t// �����ײ�ķ���\n+\t@Override\n+\tpublic boolean isCollide(GameObject obj) {\t\n+\t\t// ����1λ�ھ���2�����\n+\t\tif (object_x <= obj.getObject_x()\n+\t\t\t\t&& object_x + object_width <= obj.getObject_x()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ҳ�\n+\t\telse if (obj.getObject_x() <= object_x\n+\t\t\t\t&& obj.getObject_x() + obj.getObject_width() <= object_x) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ϸ�\n+\t\telse if (object_y <= obj.getObject_y()\n+\t\t\t\t&& object_y + object_height <= obj.getObject_y()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���·�\n+\t\telse if (obj.getObject_y() <= object_y\n+\t\t\t\t&& obj.getObject_y() + obj.getObject_height() <= object_y) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tisAlive = false;\n+\t\treturn true;\n+\t}\n+}\n+"
  }, {
    "sha" : "62367e5f69846aff1896e3075dddef932b98e986",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossPlane.java",
    "status" : "added",
    "additions" : 197,
    "deletions" : 0,
    "changes" : 197,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossPlane.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossPlane.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BossPlane.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,197 @@\n+package com.alonso.object;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.alonso.constant.ConstantUtil;\n+import com.alonso.factory.GameObjectFactory;\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*BOSS�л����*/\n+public class BossPlane extends EnemyPlane{\n+\tprivate static int currentCount = 0;\t //\t����ǰ�����\n+\tprivate static int sumCount = 1;\n+\tprivate Bitmap boosPlane;\n+\tprivate Bitmap boosPlaneBomb;\n+\tprivate int direction;\t\t\t//�ƶ��ķ���\n+\tprivate int interval;\t\t\t//�����ӵ��ļ��\n+\tprivate float leftBorder;\t\t//�ɻ����ƶ�����߽�\n+\tprivate float rightBorder;\t\t//�ɻ����ƶ����ұ߽�\n+\tprivate boolean isFire;\t\t\t//�Ƿ��������\n+\tprivate boolean isCrazy;\t\t//�Ƿ�Ϊ���״̬\n+\tprivate List<Bullet> bullets;\t//�ӵ���\n+\tprivate MyPlane myplane;\n+\tpublic BossPlane(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.score = 10000;\n+\t\tinterval = 1;\n+\t\tbullets = new ArrayList<Bullet>();\n+\t\t//������\n+\t\tGameObjectFactory factory = new GameObjectFactory();\n+\t\tfor(int i=0;i<2;i++){\t\n+\t\t\tBossBullet bullet = (BossBullet) factory.createBossBullet(resources);//����ӵ�\n+\t\t\tbullets.add(bullet);\n+\t\t}\n+\t}\n+\tpublic void setMyPlane(MyPlane myplane){\n+\t\tthis.myplane = myplane;\n+\t}\n+\t//��ʼ�����\n+\t@Override\n+\tpublic void setScreenWH(float screen_width,float screen_height){\n+\t\tsuper.setScreenWH(screen_width, screen_height);\n+\t\tfor(Bullet obj:bullets){\t\n+\t\t\tobj.setScreenWH(screen_width, screen_height);\n+\t\t}\n+\t\tleftBorder = -object_width/2;\n+\t\trightBorder = screen_width - object_width/2;\n+\t}\n+\t//��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\t\n+\t\tisVisible = true;\n+\t\tisCrazy = false;\n+\t\tisFire = false;\n+\t\tspeed = 6;\t\n+\t\tbloodVolume = 500;\t\n+\t\tblood = bloodVolume;\n+\t\tdirection = ConstantUtil.DIR_LEFT;\t\n+\t\tobject_x = screen_width/2 - object_width/2;\n+\t\tobject_y = -object_height * (arg0*2 + 1);\n+\t\tcurrentCount++;\n+\t\tif(currentCount >= sumCount){\n+\t\t\tcurrentCount = 0;\n+\t\t}\n+\t}\n+\t//��ʼ��ͼƬ\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tboosPlane = BitmapFactory.decodeResource(resources, R.drawable.bossplane);\n+\t\tboosPlaneBomb = BitmapFactory.decodeResource(resources, R.drawable.bossplanebomb);\n+\t\tobject_width = boosPlane.getWidth();\t\t//���ÿһ֡λͼ�Ŀ�\n+\t\tobject_height = boosPlane.getHeight()/3;\t\t//���ÿһ֡λͼ�ĸ�\t\n+\t}\n+\t//��ʼ���ӵ�����\n+\tpublic void initButtle(){\n+\t\tif(isFire){\n+\t\t\tif(interval == 1){\n+\t\t\t\tfor(GameObject obj:bullets){\t\n+\t\t\t\t\tif(!obj.isAlive()){\n+\t\t\t\t\t\tobj.initial(0,object_x + object_width/2,object_height);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tinterval++;\n+\t\t\tif(interval >= 8){\n+\t\t\t\tinterval = 1;\n+\t\t\t}\n+\t\t}\n+\t}\n+\t//��ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(isAlive){\n+\t\t\tif(!isExplosion){\n+\t\t\t\tint y = (int) (currentFrame * object_height); // ��õ�ǰ֡�����λͼ��Y���\n+\t\t\t\tcanvas.save();\n+\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\tcanvas.drawBitmap(boosPlane, object_x, object_y - y,paint);\n+\t\t\t\tcanvas.restore();\n+\t\t\t\tlogic();\n+\t\t\t\tcurrentFrame++;\n+\t\t\t\tif(currentFrame >= 3){\n+\t\t\t\t\tcurrentFrame = 0;\n+\t\t\t\t}\n+\t\t\t\tshoot(canvas);\t\t//���\n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tint y = (int) (currentFrame * object_height); // ��õ�ǰ֡�����λͼ��Y���\n+\t\t\t\tcanvas.save();\n+\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\tcanvas.drawBitmap(boosPlaneBomb, object_x, object_y - y,paint);\n+\t\t\t\tcanvas.restore();\n+\t\t\t\tcurrentFrame++;\n+\t\t\t\tif(currentFrame >= 5){\n+\t\t\t\t\tcurrentFrame = 0;\n+\t\t\t\t\tisExplosion = false;\n+\t\t\t\t\tisAlive = false;\n+\t\t\t\t}\n+\t\t\t}\t\n+\t\t}\t\n+\t}\n+\t//�����ӵ�\n+\tpublic boolean shoot(Canvas canvas){\n+\t\tif(isFire){\n+\t\t\t//�����ӵ��Ķ���\n+\t\t\tfor(Bullet obj:bullets){\t\n+\t\t\t\tif(obj.isAlive()){\n+\t\t\t\t\tobj.drawSelf(canvas);//�����ӵ�\n+\t\t\t\t\tif(obj.isCollide(myplane)){\n+\t\t\t\t\t\tmyplane.setAlive(false);\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t//�ͷ���Դ\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tfor(Bullet obj:bullets){\t\n+\t\t\tobj.release();\n+\t\t}\n+\t\tif(!boosPlane.isRecycled()){\n+\t\t\tboosPlane.recycle();\n+\t\t}\n+\t\tif(!boosPlaneBomb.isRecycled()){\n+\t\t\tboosPlaneBomb.recycle();\n+\t\t}\n+\t}\n+\t// �����ײ\n+\t@Override\n+\tpublic boolean isCollide(GameObject obj) {\n+\t\treturn super.isCollide(obj);\n+\t}\n+\t//������߼�����\n+\t@Override\n+\tpublic void logic(){\n+\t\tif (object_y < 0) {\n+\t\t\tobject_y += speed;\n+\t\t}\n+\t\telse{\n+\t\t\tif(!isFire){\n+\t\t\t\tisFire = true;\n+\t\t\t}\n+\t\t\tif(blood < 150){\n+\t\t\t\tif(!isCrazy){\n+\t\t\t\t\tisCrazy = true;\n+\t\t\t\t\tspeed = 20;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif(object_x > leftBorder && direction == ConstantUtil.DIR_LEFT){\n+\t\t\t\tobject_x -= speed;\n+\t\t\t\tif(object_x <= leftBorder){\n+\t\t\t\t\tdirection = ConstantUtil.DIR_RIGHT;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif(object_x < rightBorder && direction == ConstantUtil.DIR_RIGHT){\n+\t\t\t\tobject_x += speed;\n+\t\t\t\tif(object_x >= rightBorder){\n+\t\t\t\t\tdirection = ConstantUtil.DIR_LEFT;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}"
  }, {
    "sha" : "8515cd7a56f1e63ac9ec00fe4e21f202f18212f6",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Bullet.java",
    "status" : "added",
    "additions" : 70,
    "deletions" : 0,
    "changes" : 70,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Bullet.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Bullet.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Bullet.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,70 @@\n+package com.alonso.object;\n+\n+import android.content.res.Resources;\n+import android.graphics.Canvas;\n+/*�ӵ�����*/\n+public class Bullet extends GameObject{\n+\tprotected int harm;\n+\tpublic Bullet(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tinitBitmap();\n+\t}\n+\t@Override\n+\tprotected void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\t\n+\t}\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\t\n+\t}\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\t\n+\t}\n+\t// �����ײ�ķ���\n+\t@Override\n+\tpublic boolean isCollide(GameObject obj) {\t\n+\t\t// ����1λ�ھ���2�����\n+\t\tif (object_x <= obj.getObject_x()\n+\t\t\t\t&& object_x + object_width <= obj.getObject_x()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ҳ�\n+\t\telse if (obj.getObject_x() <= object_x\n+\t\t\t\t&& obj.getObject_x() + obj.getObject_width() <= object_x) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ϸ�\n+\t\telse if (object_y <= obj.getObject_y()\n+\t\t\t\t&& object_y + object_height <= obj.getObject_y()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���·�\n+\t\telse if (obj.getObject_y() <= object_y\n+\t\t\t\t&& obj.getObject_y() + obj.getObject_height() <= object_y) {\n+\t\t\tif(obj instanceof SmallPlane){\n+\t\t\t\tif(object_y - speed < obj.getObject_y()){\n+\t\t\t\t\tisAlive = false;\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\telse\n+\t\t\t\treturn false;\n+\t\t}\n+\t\tisAlive = false;\n+\t\treturn true;\n+\t}\n+\t//getter��setter����\n+\tpublic int getHarm() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn harm;\n+\t}\n+\tpublic void setHarm(int harm) {\n+\t\t// TODO Auto-generated method stub\n+\t\tthis.harm = harm;\n+\t}\n+}"
  }, {
    "sha" : "cff6c18cd8221743641febd85b630c7d02275fce",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BulletGoods.java",
    "status" : "added",
    "additions" : 22,
    "deletions" : 0,
    "changes" : 22,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BulletGoods.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BulletGoods.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/BulletGoods.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,22 @@\n+package com.alonso.object;\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.BitmapFactory;\n+/*�ӵ���Ʒ��*/\n+public class BulletGoods extends GameGoods{\n+\tpublic BulletGoods(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t}\n+\t// ��ʼ��ͼƬ��Դ��\n+\t@Override\n+\tprotected void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbmp = BitmapFactory.decodeResource(resources, R.drawable.bullet_goods);\n+\t\tobject_width = bmp.getWidth();\t\t\t\n+\t\tobject_height = bmp.getHeight();\t\n+\t}\n+}\n+"
  }, {
    "sha" : "17dbde16a9b8b8a8bf962f8b51840f02e7837461",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/ConstantUtil.java",
    "status" : "added",
    "additions" : 14,
    "deletions" : 0,
    "changes" : 14,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/ConstantUtil.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/ConstantUtil.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/ConstantUtil.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,14 @@\n+package com.alonso.constant;\n+\n+public class ConstantUtil {\n+\t//��Ʒ�ķ����\n+\tpublic static int DIR_LEFT_UP = 1;\n+\tpublic static int DIR_RIGHT_UP = 2;\n+\tpublic static int DIR_LEFT_DOWN = 3;\n+\tpublic static int DIR_RIGHT_DOWN = 4;\n+\tpublic static int DIR_LEFT = 5;\n+\tpublic static int DIR_RIGHT = 6;\n+\tpublic static int TO_MAIN_VIEW = 7;\n+\tpublic static int TO_END_VIEW = 8;\n+\tpublic static int END_GAME = 9;\n+}"
  }, {
    "sha" : "e218d05ef16df75a1552ec5c550d9687419ae3e5",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/EnemyPlane.java",
    "status" : "added",
    "additions" : 126,
    "deletions" : 0,
    "changes" : 126,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/EnemyPlane.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/EnemyPlane.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/EnemyPlane.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,126 @@\n+package com.alonso.object;\n+\n+import android.content.res.Resources;\n+import android.graphics.Canvas;\n+/*�л���*/\n+public class EnemyPlane extends GameObject{\n+\tprotected int score;\t\t\t\t\t\t // ����ķ�ֵ\n+\tprotected int blood; \t\t\t\t\t\t // ����ĵ�ǰѪ�\n+\tprotected int bloodVolume; \t\t\t\t\t // �����ܵ�Ѫ�\n+\tprotected boolean isExplosion;   \t\t\t // �ж��Ƿ�ը\n+\tprotected boolean isVisible;\t\t \t\t //\t �����Ƿ�Ϊ�ɼ�״̬\n+\tpublic EnemyPlane(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tinitBitmap();\t\t\t// ��ʼ��ͼƬ��Դ\n+\t}\n+\t//��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\t\n+\t}\n+\t// ��ʼ��ͼƬ��Դ\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\t//�жϵл��Ƿ�����״̬\n+\t\t\n+\t}\n+\t// �ͷ���Դ\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\t\n+\t}\n+\t// ������߼�����\n+\t@Override\n+\tpublic void logic() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif (object_y < screen_height) {\n+\t\t\tobject_y += speed;\n+\t\t} \n+\t\telse {\n+\t\t\tisAlive = false;\n+\t\t}\n+\t\tif(object_y + object_height > 0){\n+\t\t\tisVisible = true;\n+\t\t}\n+\t\telse{\n+\t\t\tisVisible = false;\n+\t\t}\n+\t}\n+\t// ��������߼�����\n+\tpublic void attacked(int harm) {\n+\t\t// TODO Auto-generated method stub\n+\t\tblood -= harm;\n+\t\tif (blood <= 0) {\n+\t\t\tisExplosion = true;\n+\t\t}\n+\t}\n+\t// �����ײ\n+\t@Override\n+\tpublic boolean isCollide(GameObject obj) {\n+\t\t// ����1λ�ھ���2�����\n+\t\tif (object_x <= obj.getObject_x()\n+\t\t\t\t&& object_x + object_width <= obj.getObject_x()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ҳ�\n+\t\telse if (obj.getObject_x() <= object_x\n+\t\t\t\t&& obj.getObject_x() + obj.getObject_width() <= object_x) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ϸ�\n+\t\telse if (object_y <= obj.getObject_y()\n+\t\t\t\t&& object_y + object_height <= obj.getObject_y()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���·�\n+\t\telse if (obj.getObject_y() <= object_y\n+\t\t\t\t&& obj.getObject_y() + obj.getObject_height() <= object_y) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t// �ж��ܷ񱻼����ײ\n+\tpublic boolean isCanCollide() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn isAlive && !isExplosion && isVisible;\n+\t}\n+\t//getter��setter����\n+\tpublic int getScore() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn score;\n+\t}\n+\tpublic void setScore(int score) {\n+\t\t// TODO Auto-generated method stub\n+\t\tthis.score = score;\n+\t}\n+\tpublic int getBlood() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn blood;\n+\t}\n+\tpublic void setBlood(int blood) {\n+\t\t// TODO Auto-generated method stub\n+\t\tthis.blood = blood;\n+\t}\n+\tpublic int getBloodVolume() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn bloodVolume;\n+\t}\n+\tpublic void setBloodVolume(int bloodVolume) {\n+\t\t// TODO Auto-generated method stub\n+\t\tthis.bloodVolume = bloodVolume;\n+\t}\n+\tpublic boolean isExplosion() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn isExplosion;\n+\t}\n+}\n+"
  }, {
    "sha" : "082d2db327313f9906d5b84452e49f26705febc4",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameGoods.java",
    "status" : "added",
    "additions" : 159,
    "deletions" : 0,
    "changes" : 159,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameGoods.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameGoods.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameGoods.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,159 @@\n+package com.alonso.object;\n+\n+import java.util.Random;\n+\n+import com.alonso.constant.ConstantUtil;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.Canvas;\n+/*��Ʒ��*/\n+public class GameGoods extends GameObject{\n+\tprotected Bitmap bmp;\t\t\t\t\t\t\t\t\n+\tprivate int direction;\t\t\t//��Ʒ�ķ���\n+\tpublic GameGoods(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.speed = 10;\n+\t\tRandom ran = new Random();\n+\t\tdirection = ran.nextInt(2) + 3;\n+\t\tinitBitmap();\n+\t}\n+\t// ��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\n+\t\tobject_x = screen_width/2 - object_width/2;\n+\t\tobject_y = -object_height * (arg0*2 + 1);\n+\t}\n+\t// ��ʼ��ͼƬ��Դ��\n+\t@Override\n+\tprotected void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(isAlive){\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\tcanvas.drawBitmap(bmp, object_x, object_y,paint);\n+\t\t\tcanvas.restore();\n+\t\t\tlogic();\n+\t\t}\n+\t}\n+\t// �ͷ���Դ�ķ���\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(!bmp.isRecycled()){\n+\t\t\tbmp.recycle();\n+\t\t}\n+\t}\n+\t// ������߼�����\n+\t@Override\n+\tpublic void logic() {\n+\t\tRandom ran = new Random();\n+\t\t//��Ʒ�ƶ���ԭ����Ϊ���Ϸ�\n+\t\tif(direction == ConstantUtil.DIR_LEFT_UP){\n+\t\t\tobject_x -= ran.nextInt(3) + speed;\n+\t\t\tobject_y -= ran.nextInt(3) + speed;\t\n+\t\t\tif(object_x <= 0 || object_y <= 0){\n+\t\t\t\tif(object_x <= 0)\n+\t\t\t\t\tobject_x = 0;\n+\t\t\t\telse\n+\t\t\t\t\tobject_y = 0;\n+\t\t\t\tint dir = 0;\n+\t\t\t\tdo{\n+\t\t\t\t\tdir = ran.nextInt(4)+1;\n+\t\t\t\t}\n+\t\t\t\twhile(dir == direction);\n+\t\t\t\tdirection = dir;\n+\t\t\t\tthis.speed = 10 + ran.nextInt(5);\n+\t\t\t}\n+\t\t}\n+\t\t//��Ʒ�ƶ���ԭ����Ϊ���Ϸ�\n+\t\telse if(direction == ConstantUtil.DIR_RIGHT_UP){\n+\t\t\tobject_x += ran.nextInt(3) + speed;\n+\t\t\tobject_y -= ran.nextInt(3) + speed;\t\n+\t\t\tif(object_x >= screen_width - object_width || object_y <= 0){\n+\t\t\t\tif(object_x >= screen_width - object_width)\n+\t\t\t\t\tobject_x = screen_width - object_width;\n+\t\t\t\telse\n+\t\t\t\t\tobject_y = 0;\n+\t\t\t\tint dir = 0;\n+\t\t\t\tdo{\n+\t\t\t\t\tdir = ran.nextInt(4)+1;\n+\t\t\t\t}\n+\t\t\t\twhile(dir == direction);\n+\t\t\t\tdirection = dir;\n+\t\t\t\tthis.speed = 10 + ran.nextInt(5);\n+\t\t\t}\n+\t\t}\n+\t\t//��Ʒ�ƶ���ԭ����Ϊ���·�\n+\t\telse if(direction == ConstantUtil.DIR_LEFT_DOWN){\n+\t\t\tobject_x -= ran.nextInt(3) + speed;\n+\t\t\tobject_y += ran.nextInt(3) + speed;\t\n+\t\t\tif(object_x <= 0 || object_y >= screen_height - object_height){\n+\t\t\t\tif(object_x <= 0)\n+\t\t\t\t\tobject_x = 0;\n+\t\t\t\telse\n+\t\t\t\t\tobject_y = screen_height - object_height;\n+\t\t\t\tint dir = 0;\n+\t\t\t\tdo{\n+\t\t\t\t\tdir = ran.nextInt(4)+1;\n+\t\t\t\t}\n+\t\t\t\twhile(dir == direction);\n+\t\t\t\tdirection = dir;\n+\t\t\t\tthis.speed = 10 + ran.nextInt(5);\n+\t\t\t}\n+\t\t}\n+\t\t//��Ʒ�ƶ���ԭ����Ϊ���·�\n+\t\telse if(direction == ConstantUtil.DIR_RIGHT_DOWN){\n+\t\t\tobject_x += ran.nextInt(3) + speed;\n+\t\t\tobject_y += ran.nextInt(3) + speed;\t\n+\t\t\tif(object_x >= screen_width - object_width || object_y >= screen_height - object_height){\n+\t\t\t\tif(object_x >= screen_width - object_width)\n+\t\t\t\t\tobject_x = screen_width - object_width;\n+\t\t\t\telse\n+\t\t\t\t\tobject_y = screen_height - object_height;\n+\t\t\t\tint dir = 0;\n+\t\t\t\tdo{\n+\t\t\t\t\tdir = ran.nextInt(4)+1;\n+\t\t\t\t}\n+\t\t\t\twhile(dir == direction);\n+\t\t\t\tdirection = dir;\n+\t\t\t\tthis.speed = 10 + ran.nextInt(5);\n+\t\t\t}\n+\t\t}\n+\t}\n+\t// �����ײ\n+\t@Override\n+\tpublic boolean isCollide(GameObject obj) {\n+\t\t// ����1λ�ھ���2�����\n+\t\tif (object_x <= obj.getObject_x()\n+\t\t\t\t&& object_x + object_width <= obj.getObject_x()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ҳ�\n+\t\telse if (obj.getObject_x() <= object_x\n+\t\t\t\t&& obj.getObject_x() + obj.getObject_width() <= object_x) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���Ϸ�\n+\t\telse if (object_y <= obj.getObject_y()\n+\t\t\t\t&& object_y + object_height <= obj.getObject_y()) {\n+\t\t\treturn false;\n+\t\t}\n+\t\t// ����1λ�ھ���2���·�\n+\t\telse if (obj.getObject_y() <= object_y\n+\t\t\t\t&& obj.getObject_y() + obj.getObject_height() <= object_y) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tisAlive = false;\n+\t\treturn true;\n+\t}\n+}\n+"
  }, {
    "sha" : "c1cb52d8ea688066b488f3f04f093eadf085c4e3",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameObject.java",
    "status" : "added",
    "additions" : 80,
    "deletions" : 0,
    "changes" : 80,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameObject.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameObject.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameObject.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,80 @@\n+package com.alonso.object;\n+\n+import android.content.res.Resources;\n+import android.graphics.Canvas;\n+import android.graphics.Paint;\n+/*��Ϸ������*/\n+abstract public class GameObject {\n+\tprotected int currentFrame; \t// ��ǰ����֡\n+\tprotected int speed; \t\t\t// ������ٶ�\n+\tprotected float object_x; \t\t// ����ĺ����\n+\tprotected float object_y;\t\t// ����������\n+\tprotected float object_width; \t// ����Ŀ��\n+\tprotected float object_height; \t// ����ĸ߶�\n+\tprotected float screen_width; \t// ��Ļ�Ŀ��\n+\tprotected float screen_height;  // ��Ļ�ĸ߶�\n+\tprotected boolean isAlive;\t\t// �ж��Ƿ���\n+\tprotected Paint paint; \t\t\t// ���ʶ���\n+\tprotected Resources resources;  // ��Դ��\n+\t// ���캯��\n+\tpublic GameObject(Resources resources) {\n+\t\tthis.resources = resources;\n+\t\tthis.paint = new Paint();\n+\t}\n+\t// ������Ļ��Ⱥ͸߶�\n+\tpublic void setScreenWH(float screen_width, float screen_height) {\n+\t\tthis.screen_width = screen_width;\n+\t\tthis.screen_height = screen_height;\n+\t}\n+\t// ��ʼ�����//����ֱ�Ϊ:�ٶ���ӵı���,x�������,y�������,\n+\tpublic void initial(int arg0,float arg1,float arg2){}\n+\t// ��ʼ��ͼƬ��Դ��\n+\tprotected abstract void initBitmap();\n+\t// ����Ļ�ͼ����\n+\tpublic abstract void drawSelf(Canvas canvas);\n+\t// �ͷ���Դ�ķ���\n+\tpublic abstract void release();\n+\t// �����ײ�ķ���\n+\tpublic boolean isCollide(GameObject obj) {\t\n+\t\treturn true;\n+\t}\n+\t// ������߼�����\n+\tpublic void logic(){}\n+\t//getter��setter����\n+\tpublic int getSpeed(){\n+\t\treturn speed;\n+\t}\n+\tpublic void setSpeed(int speed){\n+\t\tthis.speed = speed;\n+\t}\n+\tpublic float getObject_x() {\n+\t\treturn object_x;\n+\t}\n+\tpublic void setObject_x(float object_x) {\n+\t\tthis.object_x = object_x;\n+\t}\n+\tpublic float getObject_y() {\n+\t\treturn object_y;\n+\t}\n+\tpublic void setObject_y(float object_y) {\n+\t\tthis.object_y = object_y;\n+\t}\n+\tpublic float getObject_width() {\n+\t\treturn object_width;\n+\t}\n+\tpublic void setObject_width(float object_width) {\n+\t\tthis.object_width = object_width;\n+\t}\n+\tpublic float getObject_height() {\n+\t\treturn object_height;\n+\t}\n+\tpublic void setObject_height(float object_height) {\n+\t\tthis.object_height = object_height;\n+\t}\n+\tpublic boolean isAlive() {\n+\t\treturn isAlive;\n+\t}\n+\tpublic void setAlive(boolean isAlive) {\n+\t\tthis.isAlive = isAlive;\n+\t}\n+}"
  }, {
    "sha" : "8bd840c226044571e9352bac08904bb94435c336",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameSoundPool.java",
    "status" : "added",
    "additions" : 38,
    "deletions" : 0,
    "changes" : 38,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameSoundPool.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameSoundPool.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/GameSoundPool.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,38 @@\n+package com.alonso.sounds;\n+\n+import java.util.HashMap;\n+import com.alonso.myplane.MainActivity;\n+import com.alonso.myplane.R;\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.media.AudioManager;\n+import android.media.SoundPool;\n+\n+public class GameSoundPool {\n+\tprivate MainActivity mainActivity;\n+\tprivate SoundPool soundPool;\n+\tprivate HashMap<Integer,Integer> map;\n+\t@SuppressLint(\"UseSparseArrays\")\n+\tpublic GameSoundPool(MainActivity mainActivity){\n+\t\tthis.mainActivity = mainActivity;\n+\t\tmap = new HashMap<Integer,Integer>();\n+\t\tsoundPool = new SoundPool(8,AudioManager.STREAM_MUSIC,0);\n+\t}\n+\tpublic void initGameSound(){\n+\t\tmap.put(1, soundPool.load(mainActivity, R.raw.shoot, 1));\n+\t\tmap.put(2, soundPool.load(mainActivity, R.raw.explosion, 1));\n+\t\tmap.put(3, soundPool.load(mainActivity, R.raw.explosion2, 1));\n+\t\tmap.put(4, soundPool.load(mainActivity, R.raw.explosion3, 1));\n+\t\tmap.put(5, soundPool.load(mainActivity, R.raw.bigexplosion, 1));\n+\t\tmap.put(6, soundPool.load(mainActivity, R.raw.get_goods, 1));\n+\t\tmap.put(7, soundPool.load(mainActivity, R.raw.button, 1));\n+\t}\n+\t//������Ч\n+\tpublic void playSound(int sound,int loop){\n+\t\tAudioManager am = (AudioManager)mainActivity.getSystemService(Context.AUDIO_SERVICE);\n+\t\tfloat stramVolumeCurrent = am.getStreamVolume(AudioManager.STREAM_MUSIC);\n+\t\tfloat stramMaxVolumeCurrent = am.getStreamVolume(AudioManager.STREAM_MUSIC);\n+\t\tfloat volume = stramVolumeCurrent/stramMaxVolumeCurrent;\n+\t\tsoundPool.play(map.get(sound), volume, volume, 1, loop, 1.0f);\t\n+\t}\n+}"
  }, {
    "sha" : "97f99a64a689f31b86d42df76ed44f1b00b35460",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MiddlePlane.java",
    "status" : "added",
    "additions" : 81,
    "deletions" : 0,
    "changes" : 81,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MiddlePlane.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MiddlePlane.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MiddlePlane.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,81 @@\n+package com.alonso.object;\n+\n+import java.util.Random;\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*���͵л����*/\n+public class MiddlePlane extends EnemyPlane{\n+\tprivate static int currentCount = 0;\t //\t����ǰ�����\n+\tprivate Bitmap middlePlane;// ����ͼƬ\n+\tpublic static int sumCount = 4;\t \t \t //\t�����ܵ����\n+\tpublic MiddlePlane(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.score = 1000;\t\t// Ϊ�������÷���\n+\t}\n+\t//��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\n+\t\tbloodVolume = 15;\n+\t\tblood = bloodVolume;\n+\t\tRandom ran = new Random();\n+\t\tspeed = ran.nextInt(2) + 6 * arg0;\t\n+\t\tobject_x = ran.nextInt((int)(screen_width - object_width));\n+\t\tobject_y = -object_height * (currentCount*2 + 1);\n+\t\tcurrentCount++;\n+\t\tif(currentCount >= sumCount){\n+\t\t\tcurrentCount = 0;\n+\t\t}\n+\t}\n+\t// ��ʼ��ͼƬ��Դ\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tmiddlePlane = BitmapFactory.decodeResource(resources, R.drawable.middle);\n+\t\tobject_width = middlePlane.getWidth();\t\t\t//���ÿһ֡λͼ�Ŀ�\n+\t\tobject_height = middlePlane.getHeight()/4;\t\t//���ÿһ֡λͼ�ĸ�\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(isAlive){\n+\t\t\tif(!isExplosion){\n+\t\t\t\tif(isVisible){\n+\t\t\t\t\tcanvas.save();\n+\t\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\t\tcanvas.drawBitmap(middlePlane, object_x, object_y,paint);\n+\t\t\t\t\tcanvas.restore();\n+\t\t\t\t}\t\n+\t\t\t\tlogic();\n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tint y = (int) (currentFrame * object_height); // ��õ�ǰ֡�����λͼ��Y���\n+\t\t\t\tcanvas.save();\n+\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\tcanvas.drawBitmap(middlePlane, object_x, object_y - y,paint);\n+\t\t\t\tcanvas.restore();\n+\t\t\t\tcurrentFrame++;\n+\t\t\t\tif(currentFrame >= 4){\n+\t\t\t\t\tcurrentFrame = 0;\n+\t\t\t\t\tisExplosion = false;\n+\t\t\t\t\tisAlive = false;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\t// �ͷ���Դ\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(!middlePlane.isRecycled()){\n+\t\t\tmiddlePlane.recycle();\n+\t\t}\n+\t}\n+}"
  }, {
    "sha" : "2979e23a0942c559226cbe59f53d288d05b90aff",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MissileGoods.java",
    "status" : "added",
    "additions" : 21,
    "deletions" : 0,
    "changes" : 21,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MissileGoods.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MissileGoods.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MissileGoods.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,21 @@\n+package com.alonso.object;\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.BitmapFactory;\n+/*������Ʒ����*/\n+public class MissileGoods extends GameGoods{\n+\tpublic MissileGoods(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t}\n+\t// ��ʼ��ͼƬ��Դ��\n+\t@Override\n+\tprotected void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbmp = BitmapFactory.decodeResource(resources, R.drawable.missile_goods);\n+\t\tobject_width = bmp.getWidth();\t\t\t\n+\t\tobject_height = bmp.getHeight();\t\n+\t}\n+}"
  }, {
    "sha" : "562c841d3a6ec447b824c625d9030c348fc43fc1",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet.java",
    "status" : "added",
    "additions" : 67,
    "deletions" : 0,
    "changes" : 67,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,67 @@\n+package com.alonso.object;\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*��ҷɻ���ӵ���*/\n+public class MyBullet extends Bullet{\n+\tprivate Bitmap bullet; \t\t // �ӵ���ͼƬ\n+\tpublic MyBullet(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.harm = 1;\n+\t}\n+\t// ��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\n+\t\tspeed = 100;\t\n+\t\tobject_x = arg1 - object_width / 2;\n+\t\tobject_y = arg2 - object_height;\n+\t}\n+\t// ��ʼ��ͼƬ��Դ��\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbullet = BitmapFactory.decodeResource(resources, R.drawable.bullet);\n+\t\tobject_width = bullet.getWidth();\n+\t\tobject_height = bullet.getHeight();\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif (isAlive) {\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(object_x, object_y, object_x + object_width,object_y + object_height);\n+\t\t\tcanvas.drawBitmap(bullet, object_x, object_y, paint);\n+\t\t\tcanvas.restore();\n+\t\t\tlogic();\n+\t\t}\n+\t}\n+\t// �ͷ���Դ�ķ���\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(!bullet.isRecycled()){\n+\t\t\tbullet.recycle();\n+\t\t}\n+\t}\n+\t// ������߼�����\n+\t@Override\n+\tpublic void logic() {\n+\t\tif (object_y >= 0) {\n+\t\t\tobject_y -= speed;\n+\t\t} else {\n+\t\t\tisAlive = false;\n+\t\t}\n+\t}\n+\t// �����ײ�ķ���\n+\t@Override\n+\tpublic boolean isCollide(GameObject obj) {\t\n+\t\treturn super.isCollide(obj);\n+\t}\n+}"
  }, {
    "sha" : "cf310345674fa73f80fc132328aac49adf8516ef",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet2.java",
    "status" : "added",
    "additions" : 149,
    "deletions" : 0,
    "changes" : 149,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet2.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet2.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyBullet2.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,149 @@\n+package com.alonso.object;\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*��ҷɻ���ӵ���*/\n+public class MyBullet2 extends Bullet{\n+\tprivate Bitmap bullet; \t\t // �ӵ���ͼƬ\n+\tprivate float object_x2;\t\n+\tprivate float object_y2;\n+\tprivate boolean isAlive2;\t\n+\tprivate boolean attack;\t\t\t\t\t\t//����ӵ��Ƿ����\n+\tprivate boolean attack2;\n+\tpublic MyBullet2(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.harm = 1;\n+\t}\n+\t// ��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\n+\t\tisAlive2 = true;\n+\t\tspeed = 100;\t\n+\t\tobject_x = arg1 - 2*object_width;\n+\t\tobject_y = arg2 - object_height;\n+\t\tobject_x2 = arg1 + object_width;\n+\t\tobject_y2 = object_y;\n+\t}\n+\t// ��ʼ��ͼƬ��Դ��\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbullet = BitmapFactory.decodeResource(resources, R.drawable.bullet2);\t\n+\t\tobject_width = bullet.getWidth();\n+\t\tobject_height = bullet.getHeight();\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif (isAlive) {\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(object_x, object_y, object_x + object_width,object_y + object_height);\n+\t\t\tcanvas.drawBitmap(bullet, object_x, object_y, paint);\n+\t\t\tcanvas.restore();\n+\t\t}\n+\t\tif (isAlive2) {\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(object_x2, object_y2, object_x2 + object_width,object_y2 + object_height);\n+\t\t\tcanvas.drawBitmap(bullet, object_x2, object_y2, paint);\n+\t\t\tcanvas.restore();\n+\t\t}\n+\t\tlogic();\n+\t}\n+\t// �ͷ���Դ�ķ���\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(!bullet.isRecycled()){\n+\t\t\tbullet.recycle();\n+\t\t}\n+\t}\n+\t// ������߼�����\n+\t@Override\n+\tpublic void logic() {\n+\t\tif (object_y >= 0) {\n+\t\t\tobject_y -= speed;\n+\t\t}\n+\t\telse {\n+\t\t\tisAlive = false;\n+\t\t}\n+\t\tif (object_y2 >= 0) {\n+\t\t\tobject_y2 -= speed;\n+\t\t} \n+\t\telse{\n+\t\t\tisAlive2 = false;\n+\t\t}\n+\t}\n+\t// �����ײ�ķ���\n+\t@Override\n+\tpublic boolean isCollide(GameObject obj) {\t\n+\t\tattack = false;\n+\t\tattack2 = false;\n+\t\t// �ж���ߵ��ӵ��Ƿ���\n+\t\tif (isAlive) {\n+\t\t\tif (object_x <= obj.getObject_x()\n+\t\t\t\t\t&& object_x + object_width <= obj.getObject_x()) {}\n+\t\t\t// ����1λ�ھ���2���Ҳ�\n+\t\t\telse if (obj.getObject_x() <= object_x\n+\t\t\t\t\t&& obj.getObject_x() + obj.getObject_width() <= object_x) {}\n+\t\t\t// ����1λ�ھ���2���Ϸ�\n+\t\t\telse if (object_y <= obj.getObject_y()\n+\t\t\t\t\t&& object_y + object_height + 30 <= obj.getObject_y()) {}\n+\t\t\t// ����1λ�ھ���2���·�\n+\t\t\telse if (obj.getObject_y() <= object_y\n+\t\t\t\t\t&& obj.getObject_y() + obj.getObject_height() + 30 <= object_y) \n+\t\t\t{\n+\t\t\t\tif(obj instanceof SmallPlane){\n+\t\t\t\t\tif(object_y - speed < obj.getObject_y()){\n+\t\t\t\t\t\tisAlive = false;\n+\t\t\t\t\t\tattack = true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} \n+\t\t\telse {\n+\t\t\t\tisAlive = false;\n+\t\t\t\tattack = true;\n+\t\t\t}\n+\t\t}\n+\t\tif (isAlive2) {\n+\t\t\tif (object_x2 <= obj.getObject_x()\n+\t\t\t\t\t&& object_x2 + object_width <= obj.getObject_x()) {}\n+\t\t\t// ����1λ�ھ���2���Ҳ�\n+\t\t\telse if (obj.getObject_x() <= object_x2\n+\t\t\t\t\t&& obj.getObject_x() + obj.getObject_width() <= object_x2) {}\n+\t\t\t// ����1λ�ھ���2���Ϸ�\n+\t\t\telse if (object_y2 <= obj.getObject_y()\n+\t\t\t\t\t&& object_y2 + object_height + 30 <= obj.getObject_y()) {}\n+\t\t\t// ����1λ�ھ���2���·�\n+\t\t\telse if (obj.getObject_y() <= object_y2\n+\t\t\t\t\t&& obj.getObject_y() + obj.getObject_height() + 30 <= object_y2) \n+\t\t\t{\n+\t\t\t\tif(obj instanceof SmallPlane){\n+\t\t\t\t\tif(object_y - speed < obj.getObject_y()){\n+\t\t\t\t\t\tisAlive2 = false;\n+\t\t\t\t\t\tattack2 = true;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} \n+\t\t\telse {\n+\t\t\t\tisAlive2 = false;\n+\t\t\t\tattack2 = true;\n+\t\t\t}\n+\t\t}\n+\t\tif (attack && attack2)\n+\t\t\tharm = 2;\n+\t\treturn attack || attack2;\n+\t}\n+\t//�ж��ӵ��Ƿ����\n+\t@Override\n+\tpublic boolean isAlive() {\n+\t\treturn isAlive || isAlive2;\n+\t}\n+}\n+"
  }, {
    "sha" : "6033b04733dc1b1898260ab9f48c3815c2207221",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyPlane.java",
    "status" : "added",
    "additions" : 206,
    "deletions" : 0,
    "changes" : 206,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyPlane.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyPlane.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/MyPlane.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,206 @@\n+package com.alonso.object;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.alonso.factory.GameObjectFactory;\n+import com.alonso.interfaces.IMyPlane;\n+import com.alonso.myplane.R;\n+import com.alonso.view.MainView;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*��ҷɻ����*/\n+public class MyPlane extends GameObject implements IMyPlane{\n+\tprivate float middle_x;\t\t\t // �ɻ���������\n+\tprivate float middle_y;\n+\tprivate long startTime;\t \t \t // ��ʼ��ʱ��\n+\tprivate long endTime;\t \t \t // �����ʱ��\n+\tprivate boolean isChangeBullet;  // ��Ǹ����ӵ�\n+\tprivate Bitmap myplane;\t\t\t // �ɻ����ʱ��ͼƬ\n+\tprivate Bitmap myplane2;\t\t // �ɻ�ըʱ��ͼƬ\n+\tprivate List<Bullet> bullets;\t // �ӵ�������\n+\tprivate MainView mainView;\n+\tprivate GameObjectFactory factory;\n+\tpublic MyPlane(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tinitBitmap();\n+\t\tthis.speed = 8;\n+\t\tisChangeBullet = false;\n+\t\tfactory = new GameObjectFactory();\n+\t\tbullets = new ArrayList<Bullet>();\n+\t\tchangeButtle();\n+\t}\n+\tpublic void setMainView(MainView mainView) {\n+\t\tthis.mainView = mainView;\n+\t}\n+\t// ������Ļ��Ⱥ͸߶�\n+\t@Override\n+\tpublic void setScreenWH(float screen_width, float screen_height) {\n+\t\tsuper.setScreenWH(screen_width, screen_height);\n+\t\tobject_x = screen_width/2 - object_width/2;\n+\t\tobject_y = screen_height - object_height;\n+\t\tmiddle_x = object_x + object_width/2;\n+\t\tmiddle_y = object_y + object_height/2;\n+\t}\n+\t// ��ʼ��ͼƬ��Դ��\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tmyplane = BitmapFactory.decodeResource(resources, R.drawable.myplane);\n+\t\tmyplane2 = BitmapFactory.decodeResource(resources, R.drawable.myplaneexplosion);\n+\t\tobject_width = myplane.getWidth() / 2; // ���ÿһ֡λͼ�Ŀ�\n+\t\tobject_height = myplane.getHeight(); \t// ���ÿһ֡λͼ�ĸ�\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(isAlive){\n+\t\t\tint x = (int) (currentFrame * object_width); // ��õ�ǰ֡�����λͼ��X���\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(object_x, object_y, object_x + object_width, object_y + object_height);\n+\t\t\tcanvas.drawBitmap(myplane, object_x - x, object_y, paint);\n+\t\t\tcanvas.restore();\n+\t\t\tcurrentFrame++;\n+\t\t\tif (currentFrame >= 2) {\n+\t\t\t\tcurrentFrame = 0;\n+\t\t\t}\n+\t\t}\n+\t\telse{\n+\t\t\tint x = (int) (currentFrame * object_width); // ��õ�ǰ֡�����λͼ��Y���\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(object_x, object_y, object_x + object_width, object_y\n+\t\t\t\t\t+ object_height);\n+\t\t\tcanvas.drawBitmap(myplane2, object_x - x, object_y, paint);\n+\t\t\tcanvas.restore();\n+\t\t\tcurrentFrame++;\n+\t\t\tif (currentFrame >= 2) {\n+\t\t\t\tcurrentFrame = 1;\n+\t\t\t}\n+\t\t}\n+\t}\n+\t// �ͷ���Դ�ķ���\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tfor(Bullet obj:bullets){\t\n+\t\t\tobj.release();\n+\t\t}\n+\t\tif(!myplane.isRecycled()){\n+\t\t\tmyplane.recycle();\n+\t\t}\n+\t\tif(!myplane2.isRecycled()){\n+\t\t\tmyplane2.recycle();\n+\t\t}\n+\t}\n+\t//�����ӵ�\n+\t@Override\n+\tpublic void shoot(Canvas canvas,List<EnemyPlane> planes) {\n+\t\t// TODO Auto-generated method stub\t\n+\t\t//�����ӵ��Ķ���\n+\t\tfor(Bullet obj:bullets){\t\n+\t\t\tif(obj.isAlive()){\t\t//�ӵ��Ƿ�Ϊ���״̬\n+\t\t\t\tfor(EnemyPlane pobj:planes){ //����л����\n+\t\t\t\t\t// �жϵл��Ƿ񱻼����ײ\n+\t\t\t\t\tif( pobj.isCanCollide()){\n+\t\t\t\t\t\tif(obj.isCollide((GameObject)pobj)){\t\t\t   \t\t   // �����ײ\n+\t\t\t\t\t\t\t pobj.attacked(obj.getHarm());\t\t   // �л�����˺�\n+\t\t\t\t\t\t\tif(pobj.isExplosion()){\n+\t\t\t\t\t\t\t\tmainView.addGameScore(pobj.getScore());// ��÷���\n+\t\t\t\t\t\t\t\tif(pobj instanceof SmallPlane){\n+\t\t\t\t\t\t\t\t\tmainView.playSound(2);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\telse if(pobj instanceof MiddlePlane){\n+\t\t\t\t\t\t\t\t\tmainView.playSound(3);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\telse if(pobj instanceof BigPlane){\n+\t\t\t\t\t\t\t\t\tmainView.playSound(4);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\telse{\n+\t\t\t\t\t\t\t\t\tmainView.playSound(5);\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\t\t\t\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tobj.drawSelf(canvas);\t\t\t\t\t//�����ӵ�\n+\t\t\t}\n+\t\t}\n+\t}\n+\t//��ʼ���ӵ�\n+\t@Override\n+\tpublic void initButtle() {\n+\t\t// TODO Auto-generated method stub\n+\t\tfor(Bullet obj:bullets){\t\n+\t\t\tif(!obj.isAlive()){\n+\t\t\t\tobj.initial(0,middle_x, middle_y);\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t}\n+\t//���ӵ�\n+\t@Override\n+\tpublic void changeButtle() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbullets.clear();\n+\t\tif(isChangeBullet){\n+\t\t\tfor(int i = 0;i < 4;i++){\n+\t\t\t\tMyBullet2 bullet = (MyBullet2) factory.createMyBullet2(resources);\n+\t\t\t\tbullets.add(bullet);\n+\t\t\t}\n+\t\t}\n+\t\telse{\n+\t\t\tfor(int i = 0;i < 4;i++){\n+\t\t\t\tMyBullet bullet = (MyBullet) factory.createMyBullet(resources);\n+\t\t\t\tbullets.add(bullet);\n+\t\t\t}\n+\t\t}\n+\t}\n+\t//�ж��ӵ��Ƿ�ʱ\n+\tpublic void isBulletOverTime(){\n+\t\tif(isChangeBullet){\n+\t\t\tendTime = System.currentTimeMillis();\t\n+\t\t\tif(endTime - startTime > 15000){\n+\t\t\t\tisChangeBullet = false;\n+\t\t\t\tstartTime = 0;\n+\t\t\t\tendTime = 0;\n+\t\t\t\tchangeButtle();\n+\t\t\t}\n+\t\t}\n+\t}\n+\t//getter��setter����\n+\tpublic void setStartTime(long startTime) {\n+\t\tthis.startTime = startTime;\n+\t}\n+\t@Override\n+\tpublic boolean isChangeBullet() {\n+\t\treturn isChangeBullet;\n+\t}\n+\t@Override\n+\tpublic void setChangeBullet(boolean isChangeBullet) {\n+\t\tthis.isChangeBullet = isChangeBullet;\n+\t}\n+\t@Override\n+\tpublic float getMiddle_x() {\n+\t\treturn middle_x;\n+\t}\n+\t@Override\n+\tpublic void setMiddle_x(float middle_x) {\n+\t\tthis.middle_x = middle_x;\n+\t\tthis.object_x = middle_x - object_width/2;\n+\t}\n+\t@Override\n+\tpublic float getMiddle_y() {\n+\t\treturn middle_y;\n+\t}\n+\t@Override\n+\tpublic void setMiddle_y(float middle_y) {\n+\t\tthis.middle_y = middle_y;\n+\t\tthis.object_y = middle_y - object_height/2;\n+\t}\t\n+}"
  }, {
    "sha" : "30fa685b34f5b663e1ab1a7ec1a89af1129018a4",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134BaseView.java",
    "status" : "added",
    "additions" : 72,
    "deletions" : 0,
    "changes" : 72,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134BaseView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134BaseView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134BaseView.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,72 @@\n+package com.alonso.view;\n+\n+import com.alonso.myplane.Net1314080903134MainActivity;\n+import com.alonso.sounds.GameSoundPool;\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Paint;\n+import android.view.SurfaceHolder;\n+import android.view.SurfaceView;\n+\n+@SuppressLint(\"ViewConstructor\")\n+public class Net1314080903134BaseView extends SurfaceView implements SurfaceHolder.Callback,Runnable {\n+\tprotected int currentFrame;\n+\tprotected float scalex;\n+\tprotected float scaley;\n+\tprotected float screen_width;\n+\tprotected float screen_height;\n+\tprotected boolean threadFlag;\n+\tprotected Paint paint;\n+\tprotected Canvas canvas;\n+\tprotected Thread thread;\n+\tprotected SurfaceHolder sfh;\n+\tprotected GameSoundPool sounds;\n+\tprotected MainActivity mainActivity;\n+\t//���췽��\n+\tpublic Net1314080903134BaseView(Context context,GameSoundPool sounds){\n+\t\tsuper(context);\n+\t\tthis.sounds = sounds;\n+\t\tthis.mainActivity = (MainActivity) context;\n+\t\tsfh = this.getHolder();\n+\t\tsfh.addCallback(this);\n+\t\tpaint = new Paint();\n+\t}\n+\t// ��ͼ�ı�ķ���\n+\t\t@Override\n+\t\tpublic void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {\n+\t\t\t// TODO Auto-generated method stub\n+\n+\t\t}\n+\t\t// ��ͼ�����ķ���\n+\t\t@Override\n+\t\tpublic void surfaceCreated(SurfaceHolder arg0) {\n+\t\t\t// TODO Auto-generated method stub\n+\t\t\tscreen_width = this.getWidth();\t\t//�����ͼ�Ŀ��\n+\t\t\tscreen_height = this.getHeight();\t//�����ͼ�ĸ߶�\n+\t\t\tthreadFlag = true;\n+\t\t}\n+\t\t// ��ͼ��ٵķ���\n+\t\t@Override\n+\t\tpublic void surfaceDestroyed(SurfaceHolder arg0) {\n+\t\t\t// TODO Auto-generated method stub\n+\t\t\tthreadFlag = false;\n+\t\t}\n+\t\t// ��ʼ��ͼƬ��Դ����\n+\t\tpublic void initBitmap() {}\n+\t\t// �ͷ�ͼƬ��Դ�ķ���\n+\t\tpublic void release() {}\n+\t\t// ��ͼ����\n+\t\tpublic void drawSelf() {}\n+\t\t// �߳����еķ���\n+\t\t@Override\n+\t\tpublic void run() {\n+\t\t\t// TODO Auto-generated method stub\n+\n+\t\t}\n+\t\tpublic void setThreadFlag(boolean threadFlag){\n+\t\t\tthis.threadFlag = threadFlag;\n+\t\t}\n+\n+\n+}"
  }, {
    "sha" : "349dfb6492ad55d5d6364745c2354c5244e2d492",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134EndView.java",
    "status" : "added",
    "additions" : 213,
    "deletions" : 0,
    "changes" : 213,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134EndView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134EndView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134EndView.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,213 @@\n+package com.alonso.view;\n+\n+\n+import com.alonso.constant.ConstantUtil;\n+import com.alonso.myplane.Net1314080903134MainActivity;\n+import com.alonso.myplane.R;\n+import com.alonso.sounds.GameSoundPool;\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Color;\n+import android.graphics.Rect;\n+import android.view.MotionEvent;\n+import android.view.SurfaceHolder;\n+/*��Ϸ����ʱ��ʾ�Ľ���*/\n+@SuppressLint(\"ViewConstructor\")\n+public class Net1314080903134EndView extends BaseView{\n+\tprivate int score;\n+\tprivate float button_x;\n+\tprivate float button_y;\n+\tprivate float button_y2;\n+\tprivate float strwid;\n+\tprivate float strhei;\n+\tprivate boolean isBtChange;\t\t\t\t// ��ťͼƬ�ı�ı��\n+\tprivate boolean isBtChange2;\n+\tprivate String startGame = \"������ս\";\t// ��ť������\n+\tprivate String exitGame = \"�˳���Ϸ\";\n+\tprivate Bitmap button;\t\t\t\t\t// ��ťͼƬ\n+\tprivate Bitmap button2;\t\t\t\t\t// ��ťͼƬ\n+\tprivate Bitmap background;\t\t\t\t// ����ͼƬ\n+\tprivate Rect rect;\t\t\t\t\t\t// �������ֵ�����\n+\tprivate Net1314080903134MainActivity mainActivity;\n+\tpublic Net1314080903134EndView(Context context,GameSoundPool sounds) {\n+\t\tsuper(context,sounds);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.mainActivity = (MainActivity)context;\n+\t\trect = new Rect();\n+\t\tthread = new Thread(this);\n+\t}\n+\t// ��ͼ�ı�ķ���\n+\t@Override\n+\tpublic void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {\n+\t\t// TODO Auto-generated method stub\n+\t\tsuper.surfaceChanged(arg0, arg1, arg2, arg3);\n+\t}\n+\t// ��ͼ�����ķ���\n+\t@Override\n+\tpublic void surfaceCreated(SurfaceHolder arg0) {\n+\t\t// TODO Auto-generated method stub\n+\t\tsuper.surfaceCreated(arg0);\n+\t\tinitBitmap(); \n+\t\tif(thread.isAlive()){\n+\t\t\tthread.start();\n+\t\t}\n+\t\telse{\n+\t\t\tthread = new Thread(this);\n+\t\t\tthread.start();\n+\t\t}\n+\t}\n+\t// ��ͼ��ٵķ���\n+\t@Override\n+\tpublic void surfaceDestroyed(SurfaceHolder arg0) {\n+\t\t// TODO Auto-generated method stub\n+\t\tsuper.surfaceDestroyed(arg0);\n+\t\trelease();\n+\t}\n+\t// ��Ӧ�����¼��ķ���\n+\t@Override\n+\tpublic boolean onTouchEvent(MotionEvent event) {\n+\t\tif(event.getAction() == MotionEvent.ACTION_DOWN && event.getPointerCount() == 1){\n+\t\t\tfloat x = event.getX();\n+\t\t\tfloat y = event.getY();\n+\t\t\t//�жϵ�һ��ť�Ƿ񱻰���\n+\t\t\tif(x > button_x && x < button_x + button.getWidth() \n+\t\t\t\t\t&& y > button_y && y < button_y + button.getHeight())\n+\t\t\t{\n+\t\t\t\tsounds.playSound(7, 0);\n+\t\t\t\tisBtChange = true;\n+\t\t\t\tdrawSelf();\n+\t\t\t\tmainActivity.getHandler().sendEmptyMessage(ConstantUtil.TO_MAIN_VIEW);\n+\t\t\t}\n+\t\t\t//�жϵڶ���ť�Ƿ񱻰���\n+\t\t\telse if(x > button_x && x < button_x + button.getWidth() \n+\t\t\t\t\t&& y > button_y2 && y < button_y2 + button.getHeight())\n+\t\t\t{\n+\t\t\t\tsounds.playSound(7, 0);\n+\t\t\t\tisBtChange2 = true;\n+\t\t\t\tdrawSelf();\n+\t\t\t\tthreadFlag = false;\n+\t\t\t\tmainActivity.getHandler().sendEmptyMessage(ConstantUtil.END_GAME);\n+\t\t\t}\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(event.getAction() == MotionEvent.ACTION_MOVE){\n+\t\t\tfloat x = event.getX();\n+\t\t\tfloat y = event.getY();\n+\t\t\tif(x > button_x && x < button_x + button.getWidth() \n+\t\t\t\t\t&& y > button_y && y < button_y + button.getHeight())\n+\t\t\t{\n+\t\t\t\tisBtChange = true;\n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tisBtChange = false;\n+\t\t\t}\n+\t\t\tif(x > button_x && x < button_x + button.getWidth() \n+\t\t\t\t\t&& y > button_y2 && y < button_y2 + button.getHeight())\n+\t\t\t{\n+\t\t\t\tisBtChange2 = true;\n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tisBtChange2 = false;\n+\t\t\t}\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(event.getAction() == MotionEvent.ACTION_UP){\n+\t\t\tisBtChange = false;\n+\t\t\tisBtChange2 = false;\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t// ��ʼ��ͼƬ��Դ����\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tbackground = BitmapFactory.decodeResource(getResources(),R.drawable.bg_01);\n+\t\tbutton = BitmapFactory.decodeResource(getResources(), R.drawable.button);\n+\t\tbutton2 = BitmapFactory.decodeResource(getResources(),R.drawable.button2);\n+\t\tscalex = screen_width / background.getWidth();\n+\t\tscaley = screen_height / background.getHeight();\n+\t\tbutton_x = screen_width / 2 - button.getWidth() / 2;\n+\t\tbutton_y = screen_height / 2 + button.getHeight();\n+\t\tbutton_y2 = button_y + button.getHeight() + 40;\n+\t\t// ���ذ�Χ����ַ����С��һ��Rect����\n+\t\tpaint.setTextSize(40);   \n+\t\tpaint.getTextBounds(startGame, 0, startGame.length(), rect);\n+\t\tstrwid = rect.width();\n+\t\tstrhei = rect.height();\n+\t}\n+\t// �ͷ�ͼƬ��Դ�ķ���\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif (!button.isRecycled()) {\n+\t\t\tbutton.recycle();\n+\t\t}\n+\t\tif (!button2.isRecycled()) {\n+\t\t\tbutton2.recycle();\n+\t\t}\t\n+\t\tif (!background.isRecycled()) {\n+\t\t\tbackground.recycle();\n+\t\t}\n+\t}\n+\t// ��ͼ����\n+\t@Override\n+\tpublic void drawSelf() {\n+\t\t// TODO Auto-generated method stub\n+\t\ttry {\n+\t\t\tcanvas = sfh.lockCanvas();\n+\t\t\tcanvas.drawColor(Color.BLACK); \t\t\t\t\t\t// ���Ʊ���ɫ\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.scale(scalex, scaley, 0, 0);\t\t\t\t\t// ���㱳��ͼƬ����Ļ�ı���\n+\t\t\tcanvas.drawBitmap(background, 0, 0, paint); \t\t// ���Ʊ���ͼ\n+\t\t\tcanvas.restore();\n+\t\t\t//����ָ����ťʱ�任ͼƬ\n+\t\t\tif (isBtChange) {\n+\t\t\t\tcanvas.drawBitmap(button2, button_x, button_y, paint);\n+\t\t\t} \n+\t\t\telse {\n+\t\t\t\tcanvas.drawBitmap(button, button_x, button_y, paint);\n+\t\t\t}\n+\t\t\tif (isBtChange2) {\n+\t\t\t\tcanvas.drawBitmap(button2, button_x, button_y2, paint);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tcanvas.drawBitmap(button, button_x, button_y2, paint);\n+\t\t\t}\t\t\n+\t\t\tpaint.setTextSize(40);   \n+\t\t\t//���ذ�Χ����ַ����С��һ��Rect����     \n+\t\t\tpaint.getTextBounds(startGame, 0, startGame.length(), rect);    \t\t   \n+\t\t\tcanvas.drawText(startGame, screen_width/2 - strwid/2, button_y + button.getHeight()/2 + strhei/2, paint);\n+\t\t\tcanvas.drawText(exitGame, screen_width/2 - strwid/2, button_y2 + button.getHeight()/2 + strhei/2, paint);\n+\t\t\tpaint.setTextSize(60);\n+\t\t\tfloat textlong = paint.measureText(\"�ܷ�:\"+String.valueOf(score));\n+\t\t\tcanvas.drawText(\"�ܷ�:\"+String.valueOf(score), screen_width/2 - textlong/2, screen_height/2 - 100, paint);\n+\t\t} catch (Exception err) {\n+\t\t\terr.printStackTrace();\n+\t\t} finally {\n+\t\t\tif (canvas != null)\n+\t\t\t\tsfh.unlockCanvasAndPost(canvas);\n+\t\t}\n+\t}\n+\t// �߳����еķ���\n+\t@Override\n+\tpublic void run() {\n+\t\t// TODO Auto-generated method stub\n+\t\twhile (threadFlag) {\n+\t\t\tlong startTime = System.currentTimeMillis();\n+\t\t\tdrawSelf();\n+\t\t\tlong endTime = System.currentTimeMillis();\n+\t\t\ttry {\n+\t\t\t\tif (endTime - startTime < 400)\n+\t\t\t\t\tThread.sleep(400 - (endTime - startTime));\n+\t\t\t} catch (InterruptedException err) {\n+\t\t\t\terr.printStackTrace();\n+\t\t\t}\n+\t\t}\n+\t}\n+\tpublic void setScore(int score) {\n+\t\tthis.score = score;\n+\t}\n+}"
  }, {
    "sha" : "0f3a6f90045f13194695917bea197c0f88056020",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134GameObjectFactory.java",
    "status" : "added",
    "additions" : 59,
    "deletions" : 0,
    "changes" : 59,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134GameObjectFactory.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134GameObjectFactory.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134GameObjectFactory.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,59 @@\n+package com.alonso.factory;\n+\n+import com.alonso.object.BigPlane;//���͵л�\n+import com.alonso.object.BossBullet;//Boss�ӵ�\n+import com.alonso.object.BossPlane;//Boss�л�\n+import com.alonso.object.BulletGoods;//�ӵ�����\n+import com.alonso.object.GameObject;//��Ϸ����\n+import com.alonso.object.MiddlePlane;//���͵л�\n+import com.alonso.object.MissileGoods;//��������\n+import com.alonso.object.MyBullet;//����ӵ�\n+import com.alonso.object.MyBullet2;//����ӵ�2\n+import com.alonso.object.MyPlane;//��ҷɻ�\n+import com.alonso.object.SmallPlane;//С�͵л�\n+\n+import android.content.res.Resources;\n+\n+/*��Ϸ����Ĺ�����*/\n+public class Net1314080903134GameObjectFactory {\n+\t//����С�͵л�ķ���\n+\tpublic GameObject createSmallPlane(Resources resources){\n+\t\treturn new SmallPlane(resources);\n+\t}\n+\t//�������͵л�ķ���\n+\tpublic GameObject createMiddlePlane(Resources resources){\n+\t\treturn new MiddlePlane(resources);\n+\t}\n+\t//�������͵л�ķ���\n+\tpublic GameObject createBigPlane(Resources resources){\n+\t\treturn new BigPlane(resources);\n+\t}\n+\t//����BOSS�л�ķ���\n+\tpublic GameObject createBossPlane(Resources resources){\n+\t\treturn new BossPlane(resources);\n+\t}\n+\t//������ҷɻ�ķ���\n+\tpublic GameObject createMyPlane(Resources resources){\n+\t\treturn new MyPlane(resources);\n+\t}\n+\t//��������ӵ�\n+\tpublic GameObject createMyBullet(Resources resources){\n+\t\treturn new MyBullet(resources);\n+\t}\n+\t//��������ӵ�\n+\tpublic GameObject createMyBullet2(Resources resources){\n+\t\treturn new MyBullet2(resources);\n+\t}\n+\t//����BOSS�ӵ�\n+\tpublic GameObject createBossBullet(Resources resources){\n+\t\treturn new BossBullet(resources);\n+\t}\n+\t//����������Ʒ\n+\tpublic GameObject createMissileGoods(Resources resources){\n+\t\treturn new MissileGoods(resources);\n+\t}\n+\t//�����ӵ���Ʒ\n+\tpublic GameObject createBulletGoods(Resources resources){\n+\t\treturn new BulletGoods(resources);\n+\t}\n+}"
  }, {
    "sha" : "a09d59ac412234d6f642bfc9f56c1556b3e5205a",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainActivity.java",
    "status" : "modified",
    "additions" : 4,
    "deletions" : 4,
    "changes" : 8,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainActivity.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -2,8 +2,8 @@\n \n import com.alonso.constant.ConstantUtil;\n import com.alonso.sounds.GameSoundPool;\n-import com.alonso.view.EndView;\n-import com.alonso.view.MainView;\n+import com.alonso.view.Net1314080903134EndView;\n+import com.alonso.view.Net1314080903134MainView;\n import com.alonso.view.Net1314080903134ReadyView;\n import android.os.Bundle;\n import android.os.Handler;\n@@ -14,8 +14,8 @@\n import android.app.Activity;\n \n public class Net1314080903134MainActivity extends Activity {\n-\tprivate EndView endView;\n-\tprivate MainView mainView;\n+\tprivate Net1314080903134EndView endView;\n+\tprivate Net1314080903134MainView mainView;\n \tprivate Net1314080903134ReadyView readyView;\n \tprivate GameSoundPool sounds;\n \t@SuppressLint(\"HandlerLeak\")"
  }, {
    "sha" : "011621d07da4e9449aca1ac44ea220c55c09c207",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainView.java",
    "status" : "added",
    "additions" : 465,
    "deletions" : 0,
    "changes" : 465,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/Net1314080903134MainView.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,465 @@\n+package com.alonso.view;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import com.alonso.constant.ConstantUtil;\n+import com.alonso.factory.GameObjectFactory;\n+import com.alonso.myplane.R;\n+import com.alonso.object.BigPlane;\n+import com.alonso.object.BossPlane;\n+import com.alonso.object.BulletGoods;\n+import com.alonso.object.EnemyPlane;\n+import com.alonso.object.GameObject;\n+import com.alonso.object.MiddlePlane;\n+import com.alonso.object.MissileGoods;\n+import com.alonso.object.MyPlane;\n+import com.alonso.object.SmallPlane;\n+import com.alonso.sounds.GameSoundPool;\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Color;\n+import android.os.Message;\n+import android.view.MotionEvent;\n+import android.view.SurfaceHolder;\n+/*��Ϸ���е������*/\n+@SuppressLint(\"ViewConstructor\")\n+public class Net1314080903134MainView extends BaseView{\n+\tprivate int missileCount; \t\t// ���������\n+\tprivate int middlePlaneScore;\t// ���͵л�Ļ��\n+\tprivate int bigPlaneScore;\t\t// ���͵л�Ļ��\n+\tprivate int bossPlaneScore;\t\t// boss�͵л�Ļ��\t\n+\tprivate int missileScore;\t\t// �����Ļ��\t\n+\tprivate int bulletScore;\t\t// �ӵ��Ļ��\n+\tprivate int sumScore;\t\t\t// ��Ϸ�ܵ÷�\n+\tprivate int speedTime;\t\t\t// ��Ϸ�ٶȵı���\n+\tprivate float bg_y;\t\t\t\t// ͼƬ�����\n+\tprivate float bg_y2;\n+\tprivate float play_bt_w;\n+\tprivate float play_bt_h;\t \n+\tprivate float missile_bt_y;\t\t \t\n+\tprivate boolean isPlay;\t\t\t// �����Ϸ����״̬\n+\tprivate boolean isTouchPlane;\t// �ж�����Ƿ�����Ļ\n+\tprivate Bitmap background; \t\t// ����ͼƬ\n+\tprivate Bitmap background2; \t// ����ͼƬ\n+\tprivate Bitmap playButton; \t\t// ��ʼ/��ͣ��Ϸ�İ�ťͼƬ\n+\tprivate Bitmap missile_bt;\t\t// ������ťͼ��\n+\tprivate MyPlane myPlane;\t\t// ��ҵķɻ�\n+\tprivate BossPlane bossPlane;\t// boss�ɻ�\n+\tprivate List<EnemyPlane> enemyPlanes;\n+\tprivate MissileGoods missileGoods;\n+\tprivate BulletGoods bulletGoods;\n+\tprivate GameObjectFactory factory;\n+\tpublic Net1314080903134MainView(Context context,GameSoundPool sounds) {\n+\t\tsuper(context,sounds);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tisPlay = true;\n+\t\tspeedTime = 1;\n+\t\tfactory = new GameObjectFactory();\t\t\t\t\t\t  //������\n+\t\tenemyPlanes = new ArrayList<EnemyPlane>();\n+\t\tmyPlane = (MyPlane) factory.createMyPlane(getResources());//�����ҵķɻ�\n+\t\tmyPlane.setNet1314080903134MainView(this);\n+\t\tfor(int i = 0;i < SmallPlane.sumCount;i++){\n+\t\t\t//���С�͵л�\n+\t\t\tSmallPlane smallPlane = (SmallPlane) factory.createSmallPlane(getResources());\n+\t\t\tenemyPlanes.add(smallPlane);\n+\t\t}\n+\t\tfor(int i = 0;i < MiddlePlane.sumCount;i++){\n+\t\t\t//������͵л�\n+\t\t\tMiddlePlane middlePlane = (MiddlePlane) factory.createMiddlePlane(getResources());\n+\t\t\tenemyPlanes.add(middlePlane);\n+\t\t}\n+\t\tfor(int i = 0;i < BigPlane.sumCount;i++){\n+\t\t\t//�����͵л�\n+\t\t\tBigPlane bigPlane = (BigPlane) factory.createBigPlane(getResources());\n+\t\t\tenemyPlanes.add(bigPlane);\n+\t\t}\n+\t\t//���BOSS�л�\n+\t\tbossPlane = (BossPlane)factory.createBossPlane(getResources());\n+\t\tbossPlane.setMyPlane(myPlane);\n+\t\tenemyPlanes.add(bossPlane);\n+\t\t//�����Ʒ\n+\t\tmissileGoods = (MissileGoods) factory.createMissileGoods(getResources());\n+\t\t//����ӵ���Ʒ\n+\t\tbulletGoods = (BulletGoods) factory.createBulletGoods(getResources());\n+\t\tthread = new Thread(this);\t\n+\t}\n+\t// ��ͼ�ı�ķ���\n+\t@Override\n+\tpublic void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {\n+\t\t// TODO Auto-generated method stub\n+\t\tsuper.surfaceChanged(arg0, arg1, arg2, arg3);\n+\t}\n+\t// ��ͼ�����ķ���\n+\t@Override\n+\tpublic void surfaceCreated(SurfaceHolder arg0) {\n+\t\t// TODO Auto-generated method stub\n+\t\tsuper.surfaceCreated(arg0);\n+\t\tinitBitmap(); // ��ʼ��ͼƬ��Դ\n+\t\tfor(GameObject obj:enemyPlanes){\t\t\t\n+\t\t\tobj.setScreenWH(screen_width,screen_height);\n+\t\t}\n+\t\tmissileGoods.setScreenWH(screen_width, screen_height);\n+\t\tbulletGoods.setScreenWH(screen_width, screen_height);\n+\t\tmyPlane.setScreenWH(screen_width,screen_height);\n+\t\tmyPlane.setAlive(true);\n+\t\tif(thread.isAlive()){\n+\t\t\tthread.start();\n+\t\t}\n+\t\telse{\n+\t\t\tthread = new Thread(this);\n+\t\t\tthread.start();\n+\t\t}\n+\t}\n+\t// ��ͼ��ٵķ���\n+\t@Override\n+\tpublic void surfaceDestroyed(SurfaceHolder arg0) {\n+\t\t// TODO Auto-generated method stub\n+\t\tsuper.surfaceDestroyed(arg0);\n+\t\trelease();\n+\t}\n+\t// ��Ӧ�����¼��ķ���\n+\t@Override\n+\tpublic boolean onTouchEvent(MotionEvent event) {\n+\t\tif(event.getAction() == MotionEvent.ACTION_UP){\n+\t\t\tisTouchPlane = false;\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if(event.getAction() == MotionEvent.ACTION_DOWN){\n+\t\t\tfloat x = event.getX();\n+\t\t\tfloat y = event.getY();\n+\t\t\tif(x > 10 && x < 10 + play_bt_w && y > 10 && y < 10 + play_bt_h){\n+\t\t\t\tif(isPlay){\n+\t\t\t\t\tisPlay = false;\n+\t\t\t\t}\t\t\n+\t\t\t\telse{\n+\t\t\t\t\tisPlay = true;\t\n+\t\t\t\t\tsynchronized(thread){\n+\t\t\t\t\t\tthread.notify();\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\t//�ж���ҷɻ��Ƿ񱻰���\n+\t\t\telse if(x > myPlane.getObject_x() && x < myPlane.getObject_x() + myPlane.getObject_width() \n+\t\t\t\t\t&& y > myPlane.getObject_y() && y < myPlane.getObject_y() + myPlane.getObject_height()){\n+\t\t\t\tif(isPlay){\n+\t\t\t\t\tisTouchPlane = true;\n+\t\t\t\t}\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\t//�жϵ�����ť�Ƿ񱻰���\n+\t\t\telse if(x > 10 && x < 10 + missile_bt.getWidth() \n+\t\t\t\t\t&& y > missile_bt_y && y < missile_bt_y + missile_bt.getHeight()){\n+\t\t\t\tif(missileCount > 0){\n+\t\t\t\t\tmissileCount--;\n+\t\t\t\t\tsounds.playSound(5, 0);\n+\t\t\t\t\tfor(EnemyPlane pobj:enemyPlanes){\n+\t\t\t\t\t\tif(pobj.isCanCollide()){\n+\t\t\t\t\t\t\tpobj.attacked(100);\t\t   // �л�����˺�\n+\t\t\t\t\t\t\tif(pobj.isExplosion()){\n+\t\t\t\t\t\t\t\taddGameScore(pobj.getScore());// ��÷���\n+\t\t\t\t\t\t\t}\t\t\t\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\t\n+\t\t\t\t}\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\t//��Ӧ��ָ����Ļ�ƶ����¼�\n+\t\telse if(event.getAction() == MotionEvent.ACTION_MOVE && event.getPointerCount() == 1){\n+\t\t\t//�жϴ������Ƿ�Ϊ��ҵķɻ�\n+\t\t\tif(isTouchPlane){\n+\t\t\t\tfloat x = event.getX();\n+\t\t\t\tfloat y = event.getY();\n+\t\t\t\tif(x > myPlane.getMiddle_x() + 20){\n+\t\t\t\t\tif(myPlane.getMiddle_x() + myPlane.getSpeed() <= screen_width){\n+\t\t\t\t\t\tmyPlane.setMiddle_x(myPlane.getMiddle_x() + myPlane.getSpeed());\n+\t\t\t\t\t}\t\t\t\t\t\n+\t\t\t\t}\n+\t\t\t\telse if(x < myPlane.getMiddle_x() - 20){\n+\t\t\t\t\tif(myPlane.getMiddle_x() - myPlane.getSpeed() >= 0){\n+\t\t\t\t\t\tmyPlane.setMiddle_x(myPlane.getMiddle_x() - myPlane.getSpeed());\n+\t\t\t\t\t}\t\t\t\t\n+\t\t\t\t}\n+\t\t\t\tif(y > myPlane.getMiddle_y() + 20){\n+\t\t\t\t\tif(myPlane.getMiddle_y() + myPlane.getSpeed() <= screen_height){\n+\t\t\t\t\t\tmyPlane.setMiddle_y(myPlane.getMiddle_y() + myPlane.getSpeed());\n+\t\t\t\t\t}\t\t\n+\t\t\t\t}\n+\t\t\t\telse if(y < myPlane.getMiddle_y() - 20){\n+\t\t\t\t\tif(myPlane.getMiddle_y() - myPlane.getSpeed() >= 0){\n+\t\t\t\t\t\tmyPlane.setMiddle_y(myPlane.getMiddle_y() - myPlane.getSpeed());\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn true;\n+\t\t\t}\t\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t// ��ʼ��ͼƬ��Դ����\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tplayButton = BitmapFactory.decodeResource(getResources(),R.drawable.play);\n+\t\tbackground = BitmapFactory.decodeResource(getResources(), R.drawable.bg_01);\n+\t\tbackground2 = BitmapFactory.decodeResource(getResources(), R.drawable.bg_02);\n+\t\tmissile_bt = BitmapFactory.decodeResource(getResources(), R.drawable.missile_bt);\n+\t\tscalex = screen_width / background.getWidth();\n+\t\tscaley = screen_height / background.getHeight();\n+\t\tplay_bt_w = playButton.getWidth();\n+\t\tplay_bt_h = playButton.getHeight()/2;\n+\t\tbg_y = 0;\n+\t\tbg_y2 = bg_y - screen_height;\n+\t\tmissile_bt_y = screen_height - 10 - missile_bt.getHeight();\n+\t}\n+\t//��ʼ����Ϸ����\n+\tpublic void initObject(){\n+\t\tfor(EnemyPlane obj:enemyPlanes){\t\n+\t\t\t//��ʼ��С�͵л�\t\n+\t\t\tif(obj instanceof SmallPlane){\n+\t\t\t\tif(!obj.isAlive()){\n+\t\t\t\t\tobj.initial(speedTime,0,0);\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\t\n+\t\t\t}\n+\t\t\t//��ʼ�����͵л�\n+\t\t\telse if(obj instanceof MiddlePlane){\n+\t\t\t\tif(middlePlaneScore > 10000){\n+\t\t\t\t\tif(!obj.isAlive()){\n+\t\t\t\t\t\tobj.initial(speedTime,0,0);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\t\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t//��ʼ�����͵л�\n+\t\t\telse if(obj instanceof BigPlane){\n+\t\t\t\tif(bigPlaneScore >= 25000){\n+\t\t\t\t\tif(!obj.isAlive()){\n+\t\t\t\t\t\tobj.initial(speedTime,0,0);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\t\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t//��ʼ��BOSS�л�\n+\t\t\telse{\n+\t\t\t\tif(bossPlaneScore >= 80000){\n+\t\t\t\t\tif(!obj.isAlive()){\n+\t\t\t\t\t\tobj.initial(0,0,0);\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\t//��ʼ��������Ʒ\n+\t\tif(missileScore >= 30000){\n+\t\t\tif(!missileGoods.isAlive()){\n+\t\t\t\tmissileGoods.initial(0,0,0);\n+\t\t\t\tmissileScore = 0;\n+\t\t\t}\n+\t\t}\n+\t\t//��ʼ���ӵ���Ʒ\n+\t\tif(bulletScore >= 20000){\n+\t\t\tif(!bulletGoods.isAlive()){\n+\t\t\t\tbulletGoods.initial(0,0,0);\n+\t\t\t\tbulletScore = 0;\n+\t\t\t}\n+\t\t}\n+\t\t//��ʼ��BOSS�ɻ���ӵ�\n+\t\tif(bossPlane.isAlive())\n+\t\t\tbossPlane.initButtle();\n+\t\tmyPlane.isBulletOverTime();\n+\t\tmyPlane.initButtle();\t\t//��ʼ����ҷɻ���ӵ�\n+\t\t//����ȼ�\n+\t\tif(sumScore >= speedTime*100000 && speedTime < 6){\n+\t\t\tspeedTime++;\t\n+\t\t}\n+\t}\n+\t// �ͷ�ͼƬ��Դ�ķ���\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tfor(GameObject obj:enemyPlanes){\t\t\t\n+\t\t\tobj.release();\n+\t\t}\n+\t\tmyPlane.release();\n+\t\tbulletGoods.release();\n+\t\tmissileGoods.release();\n+\t\tif(!playButton.isRecycled()){\n+\t\t\tplayButton.recycle();\n+\t\t}\n+\t\tif(!background.isRecycled()){\n+\t\t\tbackground.recycle();\n+\t\t}\n+\t\tif(!background2.isRecycled()){\n+\t\t\tbackground2.recycle();\n+\t\t}\n+\t\tif(!missile_bt.isRecycled()){\n+\t\t\tmissile_bt.recycle();\n+\t\t}\n+\t}\n+\t// ��ͼ����\n+\t@Override\n+\tpublic void drawSelf() {\n+\t\t// TODO Auto-generated method stub\n+\t\ttry {\n+\t\t\tcanvas = sfh.lockCanvas();\n+\t\t\tcanvas.drawColor(Color.BLACK); // ���Ʊ���ɫ\n+\t\t\tcanvas.save();\n+\t\t\t// ���㱳��ͼƬ����Ļ�ı���\n+\t\t\tcanvas.scale(scalex, scaley, 0, 0);\n+\t\t\tcanvas.drawBitmap(background, 0, bg_y, paint);   // ���Ʊ���ͼ\n+\t\t\tcanvas.drawBitmap(background2, 0, bg_y2, paint); // ���Ʊ���ͼ\n+\t\t\tcanvas.restore();\t\n+\t\t\t//���ư�ť\n+\t\t\tcanvas.save();\n+\t\t\tcanvas.clipRect(10, 10, 10 + play_bt_w,10 + play_bt_h);\n+\t\t\tif(isPlay){\n+\t\t\t\tcanvas.drawBitmap(playButton, 10, 10, paint);\t\t\t \n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tcanvas.drawBitmap(playButton, 10, 10 - play_bt_h, paint);\n+\t\t\t}\n+\t\t\tcanvas.restore();\n+\t\t\t//���Ƶ�����ť\n+\t\t\tif(missileCount > 0){\n+\t\t\t\tpaint.setTextSize(40);\n+\t\t\t\tpaint.setColor(Color.BLACK);\n+\t\t\t\tcanvas.drawBitmap(missile_bt, 10,missile_bt_y, paint);\n+\t\t\t\tcanvas.drawText(\"X \"+String.valueOf(missileCount), 20 + missile_bt.getWidth(), screen_height - 25, paint);//��������\n+\t\t\t}\t\n+\t\t\t//���Ƶ�����Ʒ\n+\t\t\tif(missileGoods.isAlive()){\n+\t\t\t\tif(missileGoods.isCollide(myPlane)){\n+\t\t\t\t\tmissileGoods.setAlive(false);\n+\t\t\t\t\tmissileCount++;\n+\t\t\t\t\tsounds.playSound(6, 0);\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tmissileGoods.drawSelf(canvas);\n+\t\t\t}\n+\t\t\t//�����ӵ���Ʒ\n+\t\t\tif(bulletGoods.isAlive()){\n+\t\t\t\tif(bulletGoods.isCollide(myPlane)){\n+\t\t\t\t\tbulletGoods.setAlive(false);\n+\t\t\t\t\tif(!myPlane.isChangeBullet()){\n+\t\t\t\t\t\tmyPlane.setChangeBullet(true);\n+\t\t\t\t\t\tmyPlane.changeButtle();\n+\t\t\t\t\t\tmyPlane.setStartTime(System.currentTimeMillis());\n+\t\t\t\t\t}\n+\t\t\t\t\telse{\n+\t\t\t\t\t\tmyPlane.setStartTime(System.currentTimeMillis());\n+\t\t\t\t\t}\n+\t\t\t\t\tsounds.playSound(6, 0);\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tbulletGoods.drawSelf(canvas);\n+\t\t\t}\n+\t\t\t//���Ƶл�\n+\t\t\tfor(EnemyPlane obj:enemyPlanes){\t\t\n+\t\t\t\tif(obj.isAlive()){\n+\t\t\t\t\tobj.drawSelf(canvas);\t\t\t\t\t\n+\t\t\t\t\t//���л��Ƿ�����ҵķɻ���ײ\t\t\t\t\t\n+\t\t\t\t\tif(obj.isCanCollide() && myPlane.isAlive()){\t\t\n+\t\t\t\t\t\tif(obj.isCollide(myPlane)){\t\t\t\n+\t\t\t\t\t\t\tmyPlane.setAlive(false);\t\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\t\n+\t\t\t}\n+\t\t\tif(!myPlane.isAlive()){\n+\t\t\t\tthreadFlag = false;\n+\t\t\t\tsounds.playSound(4, 0);\t\t\t//�ɻ�ը�ٵ���Ч\n+\t\t\t}\n+\t\t\tmyPlane.drawSelf(canvas);\t//������ҵķɻ�\n+\t\t\tmyPlane.shoot(canvas,enemyPlanes);\n+\t\t\tsounds.playSound(1, 0);\t  //�ӵ���Ч\t\t\n+\t\t\t//���Ƶ�����ť\n+\t\t\tif(missileCount > 0){\n+\t\t\t\tpaint.setTextSize(40);\n+\t\t\t\tpaint.setColor(Color.BLACK);\n+\t\t\t\tcanvas.drawBitmap(missile_bt, 10,missile_bt_y, paint);\n+\t\t\t\tcanvas.drawText(\"X \"+String.valueOf(missileCount), 20 + missile_bt.getWidth(), screen_height - 25, paint);//��������\n+\t\t\t}\n+\t\t\t//���ƻ������\n+\t\t\tpaint.setTextSize(30);\n+\t\t\tpaint.setColor(Color.rgb(235, 161, 1));\n+\t\t\tcanvas.drawText(\"���:\"+String.valueOf(sumScore), 30 + play_bt_w, 40, paint);\t\t//��������\n+\t\t\tcanvas.drawText(\"�ȼ� X \"+String.valueOf(speedTime), screen_width - 150, 40, paint); //��������\n+\t\t} catch (Exception err) {\n+\t\t\terr.printStackTrace();\n+\t\t} finally {\n+\t\t\tif (canvas != null)\n+\t\t\t\tsfh.unlockCanvasAndPost(canvas);\n+\t\t}\n+\t}\n+\t// �����ƶ����߼�����\n+\tpublic void viewLogic(){\n+\t\tif(bg_y > bg_y2){\n+\t\t\tbg_y += 10;\t\t\t\t\t\t\t\t\t\t\t\n+\t\t\tbg_y2 = bg_y - background.getHeight();\n+\t\t}\n+\t\telse{\n+\t\t\tbg_y2 += 10;\t\t\t\t\t\t\t\t\t\t\t\n+\t\t\tbg_y = bg_y2 - background.getHeight();\n+\t\t}\n+\t\tif(bg_y >= background.getHeight()){\n+\t\t\tbg_y = bg_y2 - background.getHeight();\n+\t\t}\n+\t\telse if(bg_y2 >= background.getHeight()){\n+\t\t\tbg_y2 = bg_y - background.getHeight();\n+\t\t}\n+\t}\n+\t// �����Ϸ����ķ��� \n+\tpublic void addGameScore(int score){\n+\t\tmiddlePlaneScore += score;\t// ���͵л�Ļ��\n+\t\tbigPlaneScore += score;\t\t// ���͵л�Ļ��\n+\t\tbossPlaneScore += score;\t// boss�͵л�Ļ��\t\n+\t\tmissileScore += score;\t\t// �����Ļ��\t\n+\t\tbulletScore += score;\t\t// �ӵ��Ļ��\n+\t\tsumScore += score;\t\t\t// ��Ϸ�ܵ÷�\n+\t}\n+\t// ������Ч\n+\tpublic void playSound(int key){\n+\t\tsounds.playSound(key, 0);\n+\t}\n+\t// �߳����еķ���\n+\t@Override\n+\tpublic void run() {\n+\t\t// TODO Auto-generated method stub\n+\t\twhile (threadFlag) {\t\n+\t\t\tlong startTime = System.currentTimeMillis();\n+\t\t\tinitObject();\n+\t\t\tdrawSelf();\t\n+\t\t\tviewLogic();\t\t//�����ƶ����߼�\t\n+\t\t\tlong endTime = System.currentTimeMillis();\t\n+\t\t\tif(!isPlay){\n+\t\t\t\tsynchronized (thread) {  \n+\t\t\t\t    try {  \n+\t\t\t\t    \tthread.wait();  \n+\t\t\t\t    } catch (InterruptedException e) {  \n+\t\t\t\t        e.printStackTrace();  \n+\t\t\t\t    }  \n+\t\t\t\t}  \t\t\n+\t\t\t}\t\n+\t\t\ttry {\n+\t\t\t\tif (endTime - startTime < 100)\n+\t\t\t\t\tThread.sleep(100 - (endTime - startTime));\n+\t\t\t} catch (InterruptedException err) {\n+\t\t\t\terr.printStackTrace();\n+\t\t\t}\n+\t\t}\n+\t\ttry {\n+\t\t\tThread.sleep(1000);\n+\t\t} catch (InterruptedException e) {\n+\t\t\t// TODO Auto-generated catch block\n+\t\t\te.printStackTrace();\n+\t\t}\n+\t\tMessage message = new Message();   \n+\t\tmessage.what = \tConstantUtil.TO_END_VIEW;\n+\t\tmessage.arg1 = Integer.valueOf(sumScore);\n+\t\tmainActivity.getHandler().sendMessage(message);\n+\t}\n+}"
  }, {
    "sha" : "108ec9244962d76d52127b0f6c3b488ddf8fa77a",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/SmallPlane.java",
    "status" : "added",
    "additions" : 83,
    "deletions" : 0,
    "changes" : 83,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/SmallPlane.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/SmallPlane.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903134/SmallPlane.java?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
    "patch" : "@@ -0,0 +1,83 @@\n+package com.alonso.object;\n+\n+import java.util.Random;\n+\n+import com.alonso.myplane.R;\n+\n+import android.content.res.Resources;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+/*С�͵л����*/\n+public class SmallPlane extends EnemyPlane{\n+\tprivate static int currentCount = 0;\t //\t����ǰ�����\n+\tprivate Bitmap smallPlane; // ����ͼƬ\n+\tpublic static int sumCount = 8;\t \t \t //\t�����ܵ����\n+\tpublic SmallPlane(Resources resources) {\n+\t\tsuper(resources);\n+\t\t// TODO Auto-generated constructor stub\n+\t\tthis.score = 100;\t\t// Ϊ�������÷���\n+\t}\n+\t//��ʼ�����\n+\t@Override\n+\tpublic void initial(int arg0,float arg1,float arg2){\n+\t\tisAlive = true;\n+\t\tbloodVolume = 1;\n+\t\tblood = bloodVolume;\n+\t\tRandom ran = new Random();\n+\t\tspeed = ran.nextInt(8) + 8 * arg0;\t\n+\t\tobject_x = ran.nextInt((int)(screen_width - object_width));\n+\t\tobject_y = -object_height * (currentCount*2 + 1);\n+\t\tcurrentCount++;\n+\t\tif(currentCount >= sumCount){\n+\t\t\tcurrentCount = 0;\n+\t\t}\n+\t}\n+\t// ��ʼ��ͼƬ��Դ\n+\t@Override\n+\tpublic void initBitmap() {\n+\t\t// TODO Auto-generated method stub\n+\t\tsmallPlane = BitmapFactory.decodeResource(resources, R.drawable.small);\n+\t\tobject_width = smallPlane.getWidth();\t\t\t//���ÿһ֡λͼ�Ŀ�\n+\t\tobject_height = smallPlane.getHeight()/3;\t\t//���ÿһ֡λͼ�ĸ�\n+\t}\n+\t// ����Ļ�ͼ����\n+\t@Override\n+\tpublic void drawSelf(Canvas canvas) {\n+\t\t// TODO Auto-generated method stub\n+\t\t//�жϵл��Ƿ�����״̬\n+\t\tif(isAlive){\n+\t\t\t//�жϵл��Ƿ�Ϊ��ը״̬\n+\t\t\tif(!isExplosion){\n+\t\t\t\tif(isVisible){\n+\t\t\t\t\tcanvas.save();\n+\t\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\t\tcanvas.drawBitmap(smallPlane, object_x, object_y,paint);\n+\t\t\t\t\tcanvas.restore();\n+\t\t\t\t}\t\n+\t\t\t\tlogic();\n+\t\t\t}\n+\t\t\telse{\n+\t\t\t\tint y = (int) (currentFrame * object_height); // ��õ�ǰ֡�����λͼ��Y���\n+\t\t\t\tcanvas.save();\n+\t\t\t\tcanvas.clipRect(object_x,object_y,object_x + object_width,object_y + object_height);\n+\t\t\t\tcanvas.drawBitmap(smallPlane, object_x, object_y - y,paint);\n+\t\t\t\tcanvas.restore();\n+\t\t\t\tcurrentFrame++;\n+\t\t\t\tif(currentFrame >= 3){\n+\t\t\t\t\tcurrentFrame = 0;\n+\t\t\t\t\tisExplosion = false;\n+\t\t\t\t\tisAlive = false;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\t// �ͷ���Դ\n+\t@Override\n+\tpublic void release() {\n+\t\t// TODO Auto-generated method stub\n+\t\tif(!smallPlane.isRecycled()){\n+\t\t\tsmallPlane.recycle();\n+\t\t}\n+\t}\n+}"
  }, {
    "sha" : "6c1734a0f97d222748fe1161cf4f06ff7b74957b",
    "filename" : "app/src/main/res/drawable/bossplane.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bossplane.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bossplane.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/bossplane.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "499e0c03d19c788c001869ced7d41524f7ac695e",
    "filename" : "app/src/main/res/drawable/bullet.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bullet.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bullet.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/bullet.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "35aff649b908ce819226797c2dffde153c3109df",
    "filename" : "app/src/main/res/drawable/bullet2.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bullet2.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bullet2.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/bullet2.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "f3c11b8d997ddd9261d357344da8c6b47ede38f3",
    "filename" : "app/src/main/res/drawable/bullet_goods.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bullet_goods.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/bullet_goods.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/bullet_goods.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "627a485f97a1d5b1b442479158dd0368b0823e28",
    "filename" : "app/src/main/res/drawable/button.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/button.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/button.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/button.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "80da88d5f9148178ee170bd0cb5ca68ae5b8dd40",
    "filename" : "app/src/main/res/drawable/button2.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/button2.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/button2.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/button2.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "09ead1303a87c39399bc4a5fd27c2370da2a6974",
    "filename" : "app/src/main/res/drawable/middle.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/middle.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/middle.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/middle.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "417bf6c937199612f8f79f9c1371de34e19f8763",
    "filename" : "app/src/main/res/drawable/missile_goods.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/missile_goods.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/missile_goods.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/missile_goods.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  }, {
    "sha" : "83c75b6d9bb288cd0c3ecaa93dd4e1e36f59f11b",
    "filename" : "app/src/main/res/drawable/small.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/small.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/7a1ac51ac252f7b5443679ec8b06851896ebf6b5/app/src/main/res/drawable/small.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/small.png?ref=7a1ac51ac252f7b5443679ec8b06851896ebf6b5"
  } ],
  "sha" : "7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/7a1ac51ac252f7b5443679ec8b06851896ebf6b5",
  "parents" : [ {
    "sha" : "98efb5a69bceb5525f9c8417a72cdf10dbf30674",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/98efb5a69bceb5525f9c8417a72cdf10dbf30674",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/98efb5a69bceb5525f9c8417a72cdf10dbf30674"
  } ]
}