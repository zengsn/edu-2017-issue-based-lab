{
  "committer" : {
    "login" : "ChenHauyu",
    "id" : 17856142,
    "avatar_url" : "https://avatars.githubusercontent.com/u/17856142?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/ChenHauyu",
    "html_url" : "https://github.com/ChenHauyu",
    "followers_url" : "https://api.github.com/users/ChenHauyu/followers",
    "following_url" : "https://api.github.com/users/ChenHauyu/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ChenHauyu/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ChenHauyu/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ChenHauyu/subscriptions",
    "organizations_url" : "https://api.github.com/users/ChenHauyu/orgs",
    "repos_url" : "https://api.github.com/users/ChenHauyu/repos",
    "events_url" : "https://api.github.com/users/ChenHauyu/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ChenHauyu/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 269,
    "additions" : 269,
    "deletions" : 0
  },
  "author" : {
    "login" : "ChenHauyu",
    "id" : 17856142,
    "avatar_url" : "https://avatars.githubusercontent.com/u/17856142?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/ChenHauyu",
    "html_url" : "https://github.com/ChenHauyu",
    "followers_url" : "https://api.github.com/users/ChenHauyu/followers",
    "following_url" : "https://api.github.com/users/ChenHauyu/following{/other_user}",
    "gists_url" : "https://api.github.com/users/ChenHauyu/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/ChenHauyu/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/ChenHauyu/subscriptions",
    "organizations_url" : "https://api.github.com/users/ChenHauyu/orgs",
    "repos_url" : "https://api.github.com/users/ChenHauyu/repos",
    "events_url" : "https://api.github.com/users/ChenHauyu/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/ChenHauyu/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/8294976f2175da066db76de1cb14a8dfe696a91b",
  "commit" : {
    "author" : {
      "name" : "ChenHauyu",
      "email" : "893769393@qq.com",
      "date" : "2016-05-20T01:16:37Z"
    },
    "committer" : {
      "name" : "ChenHauyu",
      "email" : "893769393@qq.com",
      "date" : "2016-05-20T01:16:37Z"
    },
    "message" : "exp8 #94 By #63",
    "tree" : {
      "sha" : "a3eccfc3007e2a260af24cd9e9dd0b2edce94e77",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/a3eccfc3007e2a260af24cd9e9dd0b2edce94e77"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/8294976f2175da066db76de1cb14a8dfe696a91b",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/8294976f2175da066db76de1cb14a8dfe696a91b/comments",
  "files" : [ {
    "sha" : "c0a87ddcb0e14c07295af1592fa671900a85445e",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903204/Net1314080903204CameraActivity.java",
    "status" : "added",
    "additions" : 269,
    "deletions" : 0,
    "changes" : 269,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/8294976f2175da066db76de1cb14a8dfe696a91b/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903204/Net1314080903204CameraActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/8294976f2175da066db76de1cb14a8dfe696a91b/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903204/Net1314080903204CameraActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903204/Net1314080903204CameraActivity.java?ref=8294976f2175da066db76de1cb14a8dfe696a91b",
    "patch" : "@@ -0,0 +1,269 @@\n+package edu.hzuapps.andriodworks.homeworks.net1314080903204;\n+\n+import java.io.File;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.os.Environment;\n+import android.provider.MediaStore;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.Toast;\n+\n+public class Net1314080903204CameraActivity extends Activity\n+{\n+    private static final String LOG_TAG = \"HelloCamera\";\n+    private static final int CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE = 100;\n+    private static final int CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE = 200;\n+\n+    private Button takePicBtn = null;\n+    private Button takeVideoBtn = null;\n+\n+    private ImageView imageView = null;\n+\n+    private Uri fileUri;\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState)\n+    {\n+        Log.d(LOG_TAG, \"onCreate\");\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_camera_net1314080903204);\n+\n+        takePicBtn = (Button) findViewById(R.id.buttonPicture);\n+        takePicBtn.setOnClickListener(takePiClickListener);\n+\n+        takeVideoBtn = (Button) findViewById(R.id.buttonVideo);\n+        takeVideoBtn.setOnClickListener(takeVideoClickListener);\n+\n+        imageView = (ImageView) findViewById(R.id.imageView1);\n+\n+    }\n+\n+    private final OnClickListener takePiClickListener = new View.OnClickListener()\n+    {\n+\n+        @Override\n+        public void onClick(View v)\n+        {\n+            Log.d(LOG_TAG, \"Take Picture Button Click\");\n+            // ����ϵͳ�Դ�����Ӧ��:����\n+            Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n+\n+            // create a file to save the image\n+            fileUri = getOutputMediaFileUri(MEDIA_TYPE_IMAGE);\n+\n+            // �˴����intent��ֵ���ù�ϵ�������onActivityResult�л�����Ǹ��֧������ϵ��data�Ƿ�Ϊnull�����˴�ָ����������dataΪnull\n+            // set the image file name\n+            intent.putExtra(MediaStore.EXTRA_OUTPUT, fileUri);\n+\n+            startActivityForResult(intent, CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE);\n+        }\n+\n+    };\n+\n+    private final OnClickListener takeVideoClickListener = new View.OnClickListener()\n+    {\n+\n+        @Override\n+        public void onClick(View v)\n+        {\n+            Log.d(LOG_TAG, \"Take Video Button Click\");\n+            // ����\n+            Intent intent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);\n+\n+            // create a file to save the video\n+            fileUri = getOutputMediaFileUri(MEDIA_TYPE_VIDEO);\n+            // set the image file name\n+            intent.putExtra(MediaStore.EXTRA_OUTPUT, fileUri);\n+\n+            // set the video image quality to high\n+            intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 1);\n+\n+            startActivityForResult(intent, CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE);\n+        }\n+    };\n+\n+    public static final int MEDIA_TYPE_IMAGE = 1;\n+    public static final int MEDIA_TYPE_VIDEO = 2;\n+\n+    /** Create a file Uri for saving an image or video */\n+    private static Uri getOutputMediaFileUri(int type)\n+    {\n+        return Uri.fromFile(getOutputMediaFile(type));\n+    }\n+\n+    /** Create a File for saving an image or video */\n+    private static File getOutputMediaFile(int type)\n+    {\n+        // To be safe, you should check that the SDCard is mounted\n+        // using Environment.getExternalStorageState() before doing this.\n+\n+        File mediaStorageDir = null;\n+        try\n+        {\n+            // This location works best if you want the created images to be\n+            // shared\n+            // between applications and persist after your app has been\n+            // uninstalled.\n+            mediaStorageDir = new File(\n+                    Environment\n+                            .getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES),\n+                    \"MyCameraApp\");\n+\n+            Log.d(LOG_TAG, \"Successfully created mediaStorageDir: \"\n+                    + mediaStorageDir);\n+\n+        }\n+        catch (Exception e)\n+        {\n+            e.printStackTrace();\n+            Log.d(LOG_TAG, \"Error in Creating mediaStorageDir: \"\n+                    + mediaStorageDir);\n+        }\n+\n+        // Create the storage directory if it does not exist\n+        if (!mediaStorageDir.exists())\n+        {\n+            if (!mediaStorageDir.mkdirs())\n+            {\n+                // ��SD���ϴ����ļ�����ҪȨ�ޣ�\n+                // <uses-permission\n+                // android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n+                Log.d(LOG_TAG,\n+                        \"failed to create directory, check if you have the WRITE_EXTERNAL_STORAGE permission\");\n+                return null;\n+            }\n+        }\n+\n+        // Create a media file name\n+        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\")\n+                .format(new Date());\n+        File mediaFile;\n+        if (type == MEDIA_TYPE_IMAGE)\n+        {\n+            mediaFile = new File(mediaStorageDir.getPath() + File.separator\n+                    + \"IMG_\" + timeStamp + \".jpg\");\n+        }\n+        else if (type == MEDIA_TYPE_VIDEO)\n+        {\n+            mediaFile = new File(mediaStorageDir.getPath() + File.separator\n+                    + \"VID_\" + timeStamp + \".mp4\");\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+\n+        return mediaFile;\n+    }\n+\n+    @Override\n+    protected void onActivityResult(int requestCode, int resultCode, Intent data)\n+    {\n+        super.onActivityResult(requestCode, resultCode, data);\n+        Log.d(LOG_TAG, \"onActivityResult: requestCode: \" + requestCode\n+                + \", resultCode: \" + requestCode + \", data: \" + data);\n+        // ���������\n+        if (CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE == requestCode)\n+        {\n+            Log.d(LOG_TAG, \"CAPTURE_IMAGE\");\n+\n+            if (RESULT_OK == resultCode)\n+            {\n+                Log.d(LOG_TAG, \"RESULT_OK\");\n+\n+                // Check if the result includes a thumbnail Bitmap\n+                if (data != null)\n+                {\n+                    // û��ָ���ض��洢·����ʱ��\n+                    Log.d(LOG_TAG,\n+                            \"data is NOT null, file on default position.\");\n+\n+                    // ָ���˴洢·����ʱ��intent.putExtra(MediaStore.EXTRA_OUTPUT,fileUri);��\n+                    // Image captured and saved to fileUri specified in the\n+                    // Intent\n+                    Toast.makeText(this, \"Image saved to:\\n\" + data.getData(),\n+                            Toast.LENGTH_LONG).show();\n+\n+                    if (data.hasExtra(\"data\"))\n+                    {\n+                        Bitmap thumbnail = data.getParcelableExtra(\"data\");\n+                        imageView.setImageBitmap(thumbnail);\n+                    }\n+                }\n+                else\n+                {\n+\n+                    Log.d(LOG_TAG,\n+                            \"data IS null, file saved on target position.\");\n+                    // If there is no thumbnail image data, the image\n+                    // will have been stored in the target output URI.\n+\n+                    // Resize the full image to fit in out image view.\n+                    int width = imageView.getWidth();\n+                    int height = imageView.getHeight();\n+\n+                    BitmapFactory.Options factoryOptions = new BitmapFactory.Options();\n+\n+                    factoryOptions.inJustDecodeBounds = true;\n+                    BitmapFactory.decodeFile(fileUri.getPath(), factoryOptions);\n+\n+                    int imageWidth = factoryOptions.outWidth;\n+                    int imageHeight = factoryOptions.outHeight;\n+\n+                    // Determine how much to scale down the image\n+                    int scaleFactor = Math.min(imageWidth / width, imageHeight\n+                            / height);\n+\n+                    // Decode the image file into a Bitmap sized to fill the\n+                    // View\n+                    factoryOptions.inJustDecodeBounds = false;\n+                    factoryOptions.inSampleSize = scaleFactor;\n+                    factoryOptions.inPurgeable = true;\n+\n+                    Bitmap bitmap = BitmapFactory.decodeFile(fileUri.getPath(),\n+                            factoryOptions);\n+\n+                    imageView.setImageBitmap(bitmap);\n+                }\n+            }\n+            else if (resultCode == RESULT_CANCELED)\n+            {\n+                // User cancelled the image capture\n+            }\n+            else\n+            {\n+                // Image capture failed, advise user\n+            }\n+        }\n+\n+        // �����¼��\n+        if (requestCode == CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE)\n+        {\n+            Log.d(LOG_TAG, \"CAPTURE_VIDEO\");\n+\n+            if (resultCode == RESULT_OK)\n+            {\n+            }\n+            else if (resultCode == RESULT_CANCELED)\n+            {\n+                // User cancelled the video capture\n+            }\n+            else\n+            {\n+                // Video capture failed, advise user\n+            }\n+        }\n+    }\n+\n+}\n\\ No newline at end of file"
  } ],
  "sha" : "8294976f2175da066db76de1cb14a8dfe696a91b",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/8294976f2175da066db76de1cb14a8dfe696a91b",
  "parents" : [ {
    "sha" : "e0329e597d5ec19a1b350f7883d737396c2eb51c",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/e0329e597d5ec19a1b350f7883d737396c2eb51c",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/e0329e597d5ec19a1b350f7883d737396c2eb51c"
  } ]
}