{
  "committer" : {
    "login" : "finalnbn",
    "id" : 15099590,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15099590?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/finalnbn",
    "html_url" : "https://github.com/finalnbn",
    "followers_url" : "https://api.github.com/users/finalnbn/followers",
    "following_url" : "https://api.github.com/users/finalnbn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/finalnbn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/finalnbn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/finalnbn/subscriptions",
    "organizations_url" : "https://api.github.com/users/finalnbn/orgs",
    "repos_url" : "https://api.github.com/users/finalnbn/repos",
    "events_url" : "https://api.github.com/users/finalnbn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/finalnbn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 951,
    "additions" : 951,
    "deletions" : 0
  },
  "author" : {
    "login" : "finalnbn",
    "id" : 15099590,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15099590?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/finalnbn",
    "html_url" : "https://github.com/finalnbn",
    "followers_url" : "https://api.github.com/users/finalnbn/followers",
    "following_url" : "https://api.github.com/users/finalnbn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/finalnbn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/finalnbn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/finalnbn/subscriptions",
    "organizations_url" : "https://api.github.com/users/finalnbn/orgs",
    "repos_url" : "https://api.github.com/users/finalnbn/repos",
    "events_url" : "https://api.github.com/users/finalnbn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/finalnbn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/df6edd9abc0b9c3e7120b73c101617441cd7c680",
  "commit" : {
    "author" : {
      "name" : "finalnan",
      "email" : "122250139@qq.com",
      "date" : "2016-05-30T06:09:12Z"
    },
    "committer" : {
      "name" : "finalnan",
      "email" : "122250139@qq.com",
      "date" : "2016-05-30T06:09:12Z"
    },
    "message" : "#90 #159 Lab4",
    "tree" : {
      "sha" : "5f7f48628e4a48c41e26ad87e877247520601c39",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/5f7f48628e4a48c41e26ad87e877247520601c39"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/df6edd9abc0b9c3e7120b73c101617441cd7c680/comments",
  "files" : [ {
    "sha" : "e5c8789313bfc2c2595a4aed8e06640c7713a94b",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MainActivity.java",
    "status" : "added",
    "additions" : 383,
    "deletions" : 0,
    "changes" : 383,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MainActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MainActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MainActivity.java?ref=df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "patch" : "@@ -0,0 +1,383 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901134.Activity;\n+\n+/**\n+ * Created by Administrator on 2016/5/25.\n+ */\n+import android.graphics.Color;\n+import android.graphics.drawable.AnimationDrawable;\n+import android.os.Bundle;\n+import android.support.design.widget.NavigationView;\n+import android.support.design.widget.TabLayout;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.support.v4.widget.DrawerLayout;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.Toolbar;\n+import android.view.Gravity;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.Window;\n+import android.widget.ImageButton;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.ListView;\n+import android.widget.PopupWindow;\n+import android.widget.TextView;\n+\n+import com.lidroid.xutils.ViewUtils;\n+import com.lidroid.xutils.view.annotation.ViewInject;\n+\n+\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Random;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.Adapter.AnchorAdapter;\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.Adapter.MainPopAdapter;\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.Adapter.MyRankAdapter;\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.R;\n+\n+public class MainActivity extends AppCompatActivity implements View.OnClickListener {\n+    @ViewInject(R.id.navigation_view)\n+    private NavigationView mNavigationView;\n+    @ViewInject(R.id.tool_bar)\n+    private Toolbar toolbar;\n+    @ViewInject(R.id.drawerIcon)\n+    private ImageView drawerIcon;\n+    @ViewInject(R.id.drawer)\n+    private DrawerLayout mDrawerLayout;\n+    @ViewInject(R.id.bar_disco)\n+    private ImageView bar_disco;\n+    @ViewInject(R.id.bar_music)\n+    private ImageView bar_music;\n+    @ViewInject(R.id.bar_friends)\n+    private ImageView bar_friends;\n+    @ViewInject(R.id.view_pager)\n+    private ViewPager view_pager;\n+    @ViewInject(R.id.tabs)\n+    private TabLayout tabLayout;\n+    @ViewInject(R.id.play_btn)\n+    private ImageView play_btn;\n+    @ViewInject(R.id.bottom_music_more)\n+    private LinearLayout bottom_music_more;\n+    private ImageButton daily_btn;\n+    private TextView daily_text;\n+    private boolean isChanged = true;\n+    private ImageView anim_image;\n+    private boolean isOpen;\n+    //改变Daily颜色\n+    private boolean isClick = false;\n+    //存放每个Pager的View\n+    private List<View> mViewList;\n+    //存放Title\n+    private List<String> mTitleList;\n+    private LayoutInflater mLayoutInflater;\n+    private View recommend;\n+    private View list;\n+    private View anchor;\n+    private View ranking;\n+    //底部弹出视图\n+    private View popView;\n+    private PopupWindow popupWindow;\n+    private Date date;\n+    private SimpleDateFormat dateFm;\n+    private AnimationDrawable animationDrawable;\n+    //排行榜布局\n+    private ListView listView;\n+    //弹出视图ListView\n+    private ListView popListView;\n+    //精彩节目推荐\n+    private ListView anchorListView;\n+    private int[] imageIds = new int[]{R.drawable.ranklist_first, R.drawable.ranklist_second, R.drawable.ranklist_third,\n+            R.drawable.ranklist_fourth, R.drawable.ranklist_five, R.drawable.ranklist_six};\n+    private List<Map<String, Object>> mInfos = new ArrayList<>();\n+    private List<Map<String, Object>> popInfos = new ArrayList<>();\n+    private List<Map<String, Object>> anchorInfos = new ArrayList<>();\n+    private String[] Songs=new String[]{\"知足-\",\"倔强-\",\"我不愿让你一个人-\",\"干杯-\",\"宠上天-\",\"突然好想你-\",\"星空-\",\"如烟-\",\"第二人生-\"};\n+    private String[] teams = new String[]{\"五月天\", \"苏打绿\", \"信乐团\", \"飞儿乐队\", \"凤凰传奇\", \"纵贯线\",};\n+    private String[] places = new String[]{\"上海演唱会\", \"香港红馆演唱会\", \"台湾火力全开演唱会\", \"北京鸟巢演唱会\"};\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        supportRequestWindowFeature(Window.FEATURE_NO_TITLE);\n+        setContentView(R.layout.activity_com1314080901134);\n+        ViewUtils.inject(this);//视图注入\n+        mLayoutInflater = LayoutInflater.from(MainActivity.this);\n+        recommend = mLayoutInflater.inflate(R.layout.recommend, null);\n+        list = mLayoutInflater.inflate(R.layout.list, null);\n+        anchor = mLayoutInflater.inflate(R.layout.anchor, null);\n+        ranking = mLayoutInflater.inflate(R.layout.ranking, null);\n+        popView = mLayoutInflater.inflate(R.layout.main_pop, null);\n+        initWidgets();\n+        addView();\n+        MyPagerAdapter mAdapter = new MyPagerAdapter(mViewList);\n+        //给ViewPager设置适配器\n+        view_pager.setAdapter(mAdapter);\n+        //将ViewPager和TabLayout连接起来\n+        tabLayout.setupWithViewPager(view_pager);\n+        tabLayout.setTabsFromPagerAdapter(mAdapter);\n+        //设置点击事件\n+        tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n+            @Override\n+            public void onTabSelected(TabLayout.Tab tab) {\n+\n+                view_pager.setCurrentItem(tab.getPosition());\n+                if (view_pager.getCurrentItem() == 1) {\n+                    anim_image.setImageResource(R.drawable.loadanimation);\n+                    animationDrawable = (AnimationDrawable) anim_image.getDrawable();\n+                    animationDrawable.start();\n+                } else {\n+                    anim_image.setImageResource(R.drawable.loadanimation);\n+                    animationDrawable = (AnimationDrawable) anim_image.getDrawable();\n+                    animationDrawable.stop();\n+                }\n+            }\n+\n+            @Override\n+            public void onTabUnselected(TabLayout.Tab tab) {\n+\n+            }\n+\n+            @Override\n+            public void onTabReselected(TabLayout.Tab tab) {\n+\n+            }\n+        });\n+        mDrawerLayout.setDrawerListener(new DrawerLayout.DrawerListener() {\n+            @Override\n+            public void onDrawerSlide(View drawerView, float slideOffset) {\n+\n+            }\n+\n+            @Override\n+            public void onDrawerOpened(View drawerView) {\n+                isOpen = true;\n+\n+            }\n+\n+            @Override\n+            public void onDrawerClosed(View drawerView) {\n+                isOpen = false;\n+\n+            }\n+\n+            @Override\n+            public void onDrawerStateChanged(int newState) {\n+\n+            }\n+        });\n+        drawerIcon.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!isOpen) {\n+                    //LEFT和RIGHT指的是现存DrawerLayout的方向\n+                    mDrawerLayout.openDrawer(Gravity.LEFT);\n+                    isOpen = true;\n+                }\n+\n+            }\n+        });\n+    }\n+\n+    private void addView() {\n+        mViewList.add(recommend);\n+        mViewList.add(list);\n+        mViewList.add(anchor);\n+        mViewList.add(ranking);\n+\n+        mTitleList.add(\"个性推荐\");\n+        mTitleList.add(\"歌单\");\n+        mTitleList.add(\"主播电台\");\n+        mTitleList.add(\"排行榜\");\n+        //设置标签的模式,默认系统模式\n+        tabLayout.setTabMode(TabLayout.MODE_FIXED);\n+\n+        //添加TabLayout上的文本元素\n+        tabLayout.addTab(tabLayout.newTab().setText(mTitleList.get(0)));\n+        tabLayout.addTab(tabLayout.newTab().setText(mTitleList.get(1)));\n+        tabLayout.addTab(tabLayout.newTab().setText(mTitleList.get(2)));\n+        tabLayout.addTab(tabLayout.newTab().setText(mTitleList.get(3)));\n+    }\n+\n+    /**\n+     * 初始化控件\n+     */\n+    private void initWidgets() {\n+        view_pager.setOffscreenPageLimit(2);\n+        daily_text = (TextView) recommend.findViewById(R.id.daily_text);\n+        daily_btn = (ImageButton) recommend.findViewById(R.id.daily_btn);\n+        anim_image = (ImageView) list.findViewById(R.id.anim_image);\n+        listView = (ListView) ranking.findViewById(R.id.listView);\n+        popListView = (ListView) popView.findViewById(R.id.main_pop_listview);\n+        anchorListView = (ListView) anchor.findViewById(R.id.anchor_list_view);\n+        daily_btn.setOnClickListener(this);\n+        bar_disco.setOnClickListener(this);\n+        bar_friends.setOnClickListener(this);\n+        bar_music.setOnClickListener(this);\n+        play_btn.setOnClickListener(this);\n+        bottom_music_more.setOnClickListener(this);\n+        bar_disco.setSelected(true);\n+\n+        //自适配长、框设置\n+        popupWindow = new PopupWindow(popView, ViewPager.LayoutParams.MATCH_PARENT,\n+                ViewPager.LayoutParams.MATCH_PARENT);\n+        popupWindow.setBackgroundDrawable(getResources().getDrawable(R.color.white));\n+        popupWindow.setOutsideTouchable(true);\n+        //刷新状态\n+        popupWindow.update();\n+        popupWindow.setTouchable(true);\n+        //这样点击返回键也能消失\n+        popupWindow.setFocusable(true);\n+        popupWindow.setAnimationStyle(R.style.anim_menu_bottombar);\n+\n+        setSupportActionBar(toolbar);\n+        //去除状态栏文字\n+        getSupportActionBar().setDisplayShowTitleEnabled(false);\n+        mNavigationView.setItemIconTintList(null);\n+        mViewList = new ArrayList<>();\n+        mTitleList = new ArrayList<>();\n+        getDate();\n+        daily_text.setText(getDate());\n+\n+        //加载排行榜ListView布局\n+        for (int i = 0; i < 12; i++) {\n+            Map<String, Object> item = new HashMap<>();\n+            item.put(\"imageView\", imageIds[new Random().nextInt(6)]);\n+            item.put(\"rank_first_txt\", \"1.知足\");\n+            item.put(\"rank_second_txt\", \"2.温柔\");\n+            item.put(\"rank_third_txt\", \"3.干杯\");\n+            mInfos.add(item);\n+        }\n+        listView.setAdapter(new MyRankAdapter(this, mInfos));\n+        //加载PopWindow布局\n+        for (int i = 0; i < 15; i++) {\n+            Map<String, Object> item = new HashMap<>();\n+            item.put(\"imageView\", R.mipmap.list_icn_delete);\n+            item.put(\"txt_author\", \"五月天\");\n+            item.put(\"txt_name\", Songs[new Random().nextInt(9)]);\n+            popInfos.add(item);\n+        }\n+        popListView.setAdapter(new MainPopAdapter(this, popInfos));\n+        //加载主播电台布局\n+        for (int i = 1; i < 15; i++) {\n+            Map<String, Object> item = new HashMap<>();\n+            item.put(\"imageView\",R.mipmap.list_fourth);\n+            item.put(\"txt_team\", teams[new Random().nextInt(5)]);\n+            item.put(\"txt_place\", places[new Random().nextInt(4)]);\n+            anchorInfos.add(item);\n+        }\n+        anchorListView.setAdapter(new AnchorAdapter(this, anchorInfos));\n+    }\n+\n+    //更改时间\n+    private String getDate() {\n+        date = new Date();\n+        dateFm = new SimpleDateFormat(\"dd\");\n+        return dateFm.format(date);\n+    }\n+\n+    @Override\n+    public void onClick(View v) {\n+        switch (v.getId()) {\n+            case R.id.bar_disco:\n+                if (bar_music.isSelected()) {\n+                    bar_disco.setSelected(true);\n+                    bar_music.setSelected(false);\n+                } else if (bar_friends.isSelected()) {\n+                    bar_disco.setSelected(true);\n+                    bar_friends.setSelected(false);\n+                }\n+                break;\n+            case R.id.bar_friends:\n+                if (bar_disco.isSelected()) {\n+                    bar_friends.setSelected(true);\n+                    bar_disco.setSelected(false);\n+                } else if (bar_music.isSelected()) {\n+                    bar_friends.setSelected(true);\n+                    bar_music.setSelected(false);\n+                }\n+                break;\n+            case R.id.bar_music:\n+                if (bar_disco.isSelected()) {\n+                    bar_disco.setSelected(false);\n+                    bar_music.setSelected(true);\n+                } else if (bar_friends.isSelected()) {\n+                    bar_friends.setSelected(false);\n+                    bar_music.setSelected(true);\n+                }\n+                break;\n+            case R.id.play_btn:\n+                if (isChanged) {\n+                    play_btn.setBackground(null);\n+                    play_btn.setImageDrawable(getResources().getDrawable(R.drawable.pause_btn));\n+                } else {\n+                    play_btn.setImageDrawable(getResources().getDrawable(R.drawable.play_btn));\n+                    play_btn.setBackground(getResources().getDrawable(R.drawable.list_bg));\n+                }\n+                isChanged = !isChanged;\n+                break;\n+            case R.id.daily_btn:\n+                if (!isClick) {\n+                    daily_btn.setBackground(getResources().getDrawable(R.drawable.dailly_prs));\n+                    daily_text.setTextColor(Color.parseColor(\"#ffffff\"));\n+                    isClick = true;\n+                } else if (isClick) {\n+                    daily_btn.setBackground(getResources().getDrawable(R.drawable.dailly_normal));\n+                    daily_text.setTextColor(Color.parseColor(\"#ffce3d3a\"));\n+                    isClick = false;\n+                }\n+                break;\n+            case R.id.bottom_music_more:\n+                if (!popupWindow.isShowing()) {\n+                    popupWindow.showAsDropDown(bar_music, 0, 450);\n+                }\n+                break;\n+            default:\n+                break;\n+        }\n+\n+    }\n+\n+\n+    //ViewPager适配器\n+    class MyPagerAdapter extends PagerAdapter {\n+        private List<View> mViewList;\n+\n+        public MyPagerAdapter(List<View> mViewList) {\n+            this.mViewList = mViewList;\n+        }\n+\n+        @Override\n+        public int getCount() {\n+            return mViewList.size();//页卡数\n+        }\n+\n+        @Override\n+        public boolean isViewFromObject(View view, Object object) {\n+            return view == object;//官方推荐写法\n+        }\n+\n+        @Override\n+        public Object instantiateItem(ViewGroup container, int position) {\n+            container.addView(mViewList.get(position));//添加页卡\n+            return mViewList.get(position);\n+        }\n+\n+        @Override\n+        public void destroyItem(ViewGroup container, int position, Object object) {\n+            container.removeView(mViewList.get(position));//删除页卡\n+        }\n+\n+        @Override\n+        public CharSequence getPageTitle(int position) {\n+            return mTitleList.get(position);//页卡标题\n+        }\n+\n+    }\n+}"
  }, {
    "sha" : "7fb64eab11398d9d24043ded60ce37d9f4f46adc",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MusicActvity.java",
    "status" : "added",
    "additions" : 40,
    "deletions" : 0,
    "changes" : 40,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MusicActvity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MusicActvity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/MusicActvity.java?ref=df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "patch" : "@@ -0,0 +1,40 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901134.Activity;\n+\n+import android.os.Bundle;\n+import android.os.PersistableBundle;\n+import android.support.design.widget.NavigationView;\n+import android.support.v4.widget.DrawerLayout;\n+import android.support.v7.app.AppCompatActivity;\n+import android.support.v7.widget.Toolbar;\n+import android.widget.ImageView;\n+\n+import com.lidroid.xutils.ViewUtils;\n+import com.lidroid.xutils.view.annotation.ViewInject;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.R;\n+\n+/**\n+ * Created by Administrator on 2016/5/25.\n+ */\n+public class MusicActvity  extends AppCompatActivity {\n+    @ViewInject(R.id.navigation_view)\n+    private NavigationView mNavigationView;\n+    @ViewInject(R.id.tool_bar)\n+    private Toolbar toolbar;\n+    @ViewInject(R.id.drawerIcon)\n+    private ImageView drawerIcon;\n+    @ViewInject(R.id.drawer)\n+    private DrawerLayout mDrawerLayout;\n+    @ViewInject(R.id.bar_disco)\n+    private ImageView bar_disco;\n+    @ViewInject(R.id.bar_music)\n+    private ImageView bar_music;\n+    @ViewInject(R.id.bar_friends)\n+    private ImageView bar_friends;\n+    @Override\n+    public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {\n+        super.onCreate(savedInstanceState, persistentState);\n+        setContentView(R.layout.music_layout);\n+        ViewUtils.inject(this);//视图注入\n+    }\n+}"
  }, {
    "sha" : "39ddf9371ebb08fd05e16ac08d48f82799632202",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/SplashActivity.java",
    "status" : "added",
    "additions" : 39,
    "deletions" : 0,
    "changes" : 39,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/SplashActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/SplashActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Activity/SplashActivity.java?ref=df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "patch" : "@@ -0,0 +1,39 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901134.Activity;\n+\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.support.v7.app.AppCompatActivity;\n+import android.widget.ImageView;\n+import android.widget.RelativeLayout;\n+\n+import com.lidroid.xutils.ViewUtils;\n+import com.lidroid.xutils.view.annotation.ViewInject;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.R;\n+\n+/**\n+ * Created by Administrator on 2016/5/25.\n+ */\n+public class SplashActivity extends AppCompatActivity {\n+    @ViewInject(R.id.login_P)\n+    private ImageView login_p;\n+    @ViewInject(R.id.login_layout)\n+    private RelativeLayout relativeLayout;\n+    private static final int DELAY_TIME = 2000;\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        ViewUtils.inject(this);\n+        new Handler().postDelayed(new Runnable() {\n+            @Override\n+            public void run() {\n+                startActivity(new Intent(SplashActivity.this, MainActivity.class));\n+                overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);\n+                finish();\n+            }\n+        }, DELAY_TIME);\n+\n+    }\n+}"
  }, {
    "sha" : "bfc9ec10ce6adb1e18bc2996af3d40450131f15d",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/AnchorAdapter.java",
    "status" : "added",
    "additions" : 76,
    "deletions" : 0,
    "changes" : 76,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/AnchorAdapter.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/AnchorAdapter.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/AnchorAdapter.java?ref=df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "patch" : "@@ -0,0 +1,76 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901134.Adapter;\n+\n+import android.content.Context;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.R;\n+\n+/**\n+ * Created by Administrator on 2016/5/25.\n+ */\n+public class AnchorAdapter extends BaseAdapter {\n+    private Context context;\n+    private LayoutInflater layoutInflater;\n+    private List<Map<String, Object>> anchorItems;\n+\n+    public AnchorAdapter(Context context, List<Map<String, Object>> anchorItems) {\n+        this.context = context;\n+        this.anchorItems = anchorItems;\n+        layoutInflater = LayoutInflater.from(context);\n+\n+    }\n+\n+    public final class AnchorItemsView {\n+        private ImageView imageView;\n+        public TextView txt_team;\n+        public TextView txt_place;\n+\n+    }\n+\n+    @Override\n+    public int getCount() {\n+        return anchorItems.size();\n+    }\n+\n+    @Override\n+    public Object getItem(int position) {\n+        return null;\n+    }\n+\n+    @Override\n+    public long getItemId(int position) {\n+        return 0;\n+    }\n+\n+    @Override\n+    public View getView(int position, View convertView, ViewGroup parent) {\n+\n+        AnchorItemsView anchorItemsView = null;\n+        if (convertView == null) {\n+            convertView = layoutInflater.inflate(R.layout.anchor_listview_adapter, null);\n+            anchorItemsView = new AnchorItemsView();\n+\n+            anchorItemsView.imageView = (ImageView) convertView.findViewById(R.id.anchor_image);\n+            anchorItemsView.txt_team = (TextView) convertView.findViewById(R.id.anchor_first_txt);\n+            anchorItemsView.txt_place = (TextView) convertView.findViewById(R.id.anchor_second_txt);\n+            convertView.setTag(anchorItemsView);\n+\n+            anchorItemsView.imageView.setBackgroundResource((Integer) anchorItems.get(position).get(\"imageView\"));\n+            anchorItemsView.txt_team.setText((String) anchorItems.get(position).get(\"txt_team\"));\n+            anchorItemsView.txt_place.setText((String ) anchorItems.get(position).get(\"txt_place\"));\n+\n+        } else {\n+            anchorItemsView = (AnchorItemsView) convertView.getTag();\n+        }\n+        return convertView;\n+    }\n+}\n+"
  }, {
    "sha" : "babcfa414cda34ea8fc3a72caab6522ee992c0b6",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MainPopAdapter.java",
    "status" : "added",
    "additions" : 74,
    "deletions" : 0,
    "changes" : 74,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MainPopAdapter.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MainPopAdapter.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MainPopAdapter.java?ref=df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "patch" : "@@ -0,0 +1,74 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901134.Adapter;\n+\n+import android.content.Context;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.R;\n+\n+/**\n+ * Created by Administrator on 2016/5/25.\n+ */\n+public class MainPopAdapter extends BaseAdapter {\n+    private Context context;\n+    private List<Map<String, Object>> listItems;\n+    private LayoutInflater layoutInflater;\n+\n+    public final class ListItemView {\n+        public ImageView imageView;\n+        public TextView txt_name;\n+        public TextView txt_author;\n+    }\n+\n+    public MainPopAdapter(Context context, List<Map<String, Object>> listItems) {\n+        this.context = context;\n+        layoutInflater = LayoutInflater.from(context);\n+        this.listItems = listItems;\n+    }\n+\n+    @Override\n+    public int getCount() {\n+        return listItems.size();\n+    }\n+\n+    @Override\n+    public Object getItem(int position) {\n+        return null;\n+    }\n+\n+    @Override\n+    public long getItemId(int position) {\n+        return 0;\n+    }\n+\n+    @Override\n+    public View getView(int position, View convertView, ViewGroup parent) {\n+        ListItemView listItemView = null;\n+        if (convertView == null) {\n+            listItemView = new ListItemView();\n+            convertView=layoutInflater.inflate(R.layout.main_pop_listview_item, null);\n+            //获取布局视图\n+            listItemView.imageView = (ImageView) convertView.findViewById(R.id.list_delete);\n+            listItemView.txt_author = (TextView) convertView.findViewById(R.id.txt_author);\n+            listItemView.txt_name = (TextView) convertView.findViewById(R.id.txt_name);\n+            convertView.setTag(listItemView);\n+\n+            listItemView.imageView.setBackgroundResource((Integer) listItems.get(position).get(\"imageView\"));\n+            listItemView.txt_author.setText((String) listItems.get(position).get(\"txt_author\"));\n+            listItemView.txt_name.setText((String) listItems.get(position).get(\"txt_name\"));\n+        } else {\n+            listItemView = (ListItemView) convertView.getTag();\n+        }\n+\n+\n+        return convertView;\n+    }\n+}\n+"
  }, {
    "sha" : "30ad56953f6334aa1c2a9b727881ed99d97eb338",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MyRankAdapter.java",
    "status" : "added",
    "additions" : 77,
    "deletions" : 0,
    "changes" : 77,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MyRankAdapter.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MyRankAdapter.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/Adapter/MyRankAdapter.java?ref=df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "patch" : "@@ -0,0 +1,77 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901134.Adapter;\n+\n+import android.content.Context;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.R;\n+\n+/**\n+ * Created by Administrator on 2016/5/25.\n+ */\n+public class MyRankAdapter extends BaseAdapter {\n+    private Context context;\n+    private List<Map<String, Object>> listItems;\n+    private LayoutInflater layoutInflater;\n+\n+    public final class ListItemView {\n+        public ImageView imageView;\n+        public TextView rank_first_txt;\n+        public TextView rank_second_txt;\n+        public TextView rank_third_txt;\n+    }\n+\n+    public MyRankAdapter(Context context, List<Map<String, Object>> listItems) {\n+        this.context = context;\n+        layoutInflater = LayoutInflater.from(context);\n+        this.listItems = listItems;\n+    }\n+\n+    @Override\n+    public int getCount() {\n+        return listItems.size();\n+    }\n+\n+    @Override\n+    public Object getItem(int position) {\n+        return null;\n+    }\n+\n+    @Override\n+    public long getItemId(int position) {\n+        return 0;\n+    }\n+\n+    @Override\n+    public View getView(int position, View convertView, ViewGroup parent) {\n+        ListItemView listItemView = null;\n+        if (convertView == null) {\n+            listItemView = new ListItemView();\n+            convertView = layoutInflater.inflate(R.layout.ranking_listview_adapter, null);\n+            //获取布局视图\n+            listItemView.imageView = (ImageView) convertView.findViewById(R.id.item_image);\n+            listItemView.rank_first_txt = (TextView) convertView.findViewById(R.id.rank_first_txt);\n+            listItemView.rank_second_txt = (TextView) convertView.findViewById(R.id.rank_second_txt);\n+            listItemView.rank_third_txt = (TextView) convertView.findViewById(R.id.rank_third_txt);\n+            convertView.setTag(listItemView);\n+\n+            listItemView.imageView.setBackgroundResource((Integer) listItems.get(position).get(\"imageView\"));\n+            listItemView.rank_first_txt.setText((String) listItems.get(position).get(\"rank_first_txt\"));\n+            listItemView.rank_second_txt.setText((String) listItems.get(position).get(\"rank_second_txt\"));\n+            listItemView.rank_third_txt.setText((String) listItems.get(position).get(\"rank_third_txt\"));\n+\n+        } else {\n+            listItemView = (ListItemView) convertView.getTag();\n+\n+        }\n+        return convertView;\n+    }\n+}\n+"
  }, {
    "sha" : "d3062311274a36082ed0cef5e82e1d952eed1b48",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/View/LoodView.java",
    "status" : "added",
    "additions" : 262,
    "deletions" : 0,
    "changes" : 262,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/View/LoodView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/df6edd9abc0b9c3e7120b73c101617441cd7c680/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/View/LoodView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901134/View/LoodView.java?ref=df6edd9abc0b9c3e7120b73c101617441cd7c680",
    "patch" : "@@ -0,0 +1,262 @@\n+package edu.hzuapps.androidworks.homeworks.com1314080901134.View;\n+\n+import android.content.Context;\n+import android.graphics.drawable.Drawable;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.os.Parcelable;\n+import android.support.v4.view.PagerAdapter;\n+import android.support.v4.view.ViewPager;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.FrameLayout;\n+import android.widget.ImageView;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+\n+import edu.hzuapps.androidworks.homeworks.com1314080901134.R;\n+\n+/**\n+ * Created by Administrator on 2016/5/30.\n+ */\n+public class LoodView extends FrameLayout {\n+    //轮播图图片数量\n+    private final static int IMAGE_COUNT = 7;\n+    //自动轮播时间间隔\n+    private final static int TIME_INTERVAL = 3;\n+    //自动轮播启用开关\n+    private final static boolean isAutoPlay = true;\n+    //ImageView资源ID\n+    private int[] imageResIds;\n+    private List<ImageView> imageViewList;\n+    private List<View> dotViewList;\n+    private ViewPager viewPager;\n+    //当前轮播页面\n+    private int currentItem = 0;\n+    //定时任务\n+    private ScheduledExecutorService scheduledExecutorService;\n+    private Handler handler = new Handler() {\n+        @Override\n+        public void handleMessage(Message msg) {\n+            super.handleMessage(msg);\n+            viewPager.setCurrentItem(currentItem);\n+        }\n+    };\n+\n+    public LoodView(Context context) {\n+        super(context);\n+    }\n+\n+    public LoodView(Context context, AttributeSet attributeSet) {\n+        this(context, attributeSet, 0);\n+    }\n+\n+    public LoodView(Context context, AttributeSet attributeSet, int defStyle) {\n+        super(context, attributeSet, defStyle);\n+        initImageView();\n+        initUI(context);\n+        if (isAutoPlay) {\n+            startPlay();\n+        }\n+\n+    }\n+\n+    /**\n+     * 开始轮播图切换\n+     */\n+\n+    public void startPlay() {\n+        scheduledExecutorService = Executors.newSingleThreadScheduledExecutor();\n+        scheduledExecutorService.scheduleAtFixedRate(new LoopTask(), 1, TIME_INTERVAL, TimeUnit.SECONDS);\n+    }\n+\n+    /**\n+     * 停止切换\n+     */\n+    private void stopPlay() {\n+        scheduledExecutorService.shutdown();\n+    }\n+\n+    /**\n+     * 初始化UI\n+     *\n+     * @param context\n+     */\n+    private void initUI(Context context) {\n+        LayoutInflater.from(context).inflate(R.layout.load_view, this, true);\n+        for (int imagesID : imageResIds) {\n+            ImageView view = new ImageView(context);\n+            view.setImageResource(imagesID);\n+            view.setScaleType(ImageView.ScaleType.FIT_XY);\n+            imageViewList.add(view);\n+        }\n+        dotViewList.add(findViewById(R.id.v_dot1));\n+        dotViewList.add(findViewById(R.id.v_dot2));\n+        dotViewList.add(findViewById(R.id.v_dot3));\n+        dotViewList.add(findViewById(R.id.v_dot4));\n+        dotViewList.add(findViewById(R.id.v_dot5));\n+        dotViewList.add(findViewById(R.id.v_dot6));\n+        dotViewList.add(findViewById(R.id.v_dot7));\n+\n+        viewPager = (ViewPager) findViewById(R.id.viewPager);\n+        viewPager.setFocusable(true);\n+        viewPager.setAdapter(new MyPagerAdapter());\n+        viewPager.setOnPageChangeListener(new MyPageChangeListener());\n+    }\n+\n+    private void initImageView() {\n+        imageResIds = new int[]{\n+                R.mipmap.first,\n+                R.mipmap.second,\n+                R.mipmap.third,\n+                R.mipmap.fourth,\n+                R.mipmap.five,\n+                R.mipmap.six,\n+                R.mipmap.seven\n+        };\n+        imageViewList = new ArrayList<>();\n+        dotViewList = new ArrayList<>();\n+    }\n+\n+    private class MyPagerAdapter extends PagerAdapter {\n+        @Override\n+        public Object instantiateItem(ViewGroup container, int position) {\n+            container.addView(imageViewList.get(position));\n+            return imageViewList.get(position);\n+        }\n+\n+        @Override\n+        public void destroyItem(ViewGroup container, int position, Object object) {\n+            container.removeView(imageViewList.get(position));\n+        }\n+\n+        @Override\n+        public int getCount() {\n+            return imageViewList.size();\n+        }\n+\n+        @Override\n+        public void restoreState(Parcelable state, ClassLoader loader) {\n+            super.restoreState(state, loader);\n+        }\n+\n+        @Override\n+        public Parcelable saveState() {\n+            return null;\n+        }\n+\n+        @Override\n+        public void startUpdate(ViewGroup container) {\n+            super.startUpdate(container);\n+        }\n+\n+        @Override\n+        public void finishUpdate(ViewGroup container) {\n+            super.finishUpdate(container);\n+        }\n+\n+        @Override\n+        public boolean isViewFromObject(View view, Object object) {\n+            return view == object;\n+        }\n+    }\n+\n+    private class MyPageChangeListener implements ViewPager.OnPageChangeListener {\n+        boolean isAutoPlay = false;\n+\n+        @Override\n+        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n+\n+        }\n+\n+        @Override\n+        public void onPageSelected(int position) {\n+            currentItem = position;\n+            for (int i = 0; i < dotViewList.size(); i++) {\n+                if (i == position) {\n+                    dotViewList.get(i).setBackgroundResource(R.mipmap.red_point);\n+                } else {\n+                    dotViewList.get(i).setBackgroundResource(R.mipmap.grey_point);\n+                }\n+            }\n+\n+        }\n+\n+        @Override\n+        public void onPageScrollStateChanged(int state) {\n+            switch (state) {\n+                //手势滑动，空闲\n+                case 1:\n+                    isAutoPlay = false;\n+                    stopPlay();\n+                    startPlay();\n+                    break;\n+                //界面切换中\n+                case 2:\n+                    isAutoPlay = true;\n+                    break;\n+                //滑动完毕，继续回到第一张图\n+                case 0:\n+                    if (viewPager.getCurrentItem() == viewPager.getAdapter().getCount() - 1 && !isAutoPlay) {\n+                        viewPager.setCurrentItem(0);\n+                    }\n+                    //当前为第一张，从左向右滑\n+                    else if (viewPager.getCurrentItem() == 0 && !isAutoPlay) {\n+                        viewPager.setCurrentItem(viewPager.getAdapter().getCount() - 1);\n+                    }\n+                    break;\n+            }\n+\n+        }\n+    }\n+\n+    //解决滑动冲突\n+    @Override\n+    public boolean dispatchTouchEvent(MotionEvent ev) {\n+        switch (ev.getAction()){\n+            case MotionEvent.ACTION_DOWN:{\n+                getParent().requestDisallowInterceptTouchEvent(true);\n+                break;\n+            }\n+            case MotionEvent.ACTION_MOVE:\n+                break;\n+            case MotionEvent.ACTION_UP:\n+                break;\n+        }\n+        return super.dispatchTouchEvent(ev);\n+    }\n+\n+    private class LoopTask implements Runnable {\n+        @Override\n+        public void run() {\n+            synchronized (viewPager) {\n+                currentItem = (currentItem + 1) % imageViewList.size();\n+                handler.obtainMessage().sendToTarget();\n+\n+            }\n+\n+        }\n+    }\n+\n+    /**\n+     * 销毁ImageView回收资源\n+     */\n+    private void destoryBitmaps() {\n+        for (int i = 0; i < IMAGE_COUNT; i++) {\n+            ImageView imageView = imageViewList.get(i);\n+            Drawable drawable = imageView.getDrawable();\n+            if (drawable != null)\n+                //解除drawable对view的引用\n+                drawable.setCallback(null);\n+        }\n+    }\n+}\n+\n+"
  } ],
  "sha" : "df6edd9abc0b9c3e7120b73c101617441cd7c680",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/df6edd9abc0b9c3e7120b73c101617441cd7c680",
  "parents" : [ {
    "sha" : "6318bebc3441cd42315c7368864c7be1e6885321",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/6318bebc3441cd42315c7368864c7be1e6885321",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/6318bebc3441cd42315c7368864c7be1e6885321"
  } ]
}