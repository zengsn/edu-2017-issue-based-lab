{
  "committer" : {
    "login" : "web-flow",
    "id" : 19864447,
    "avatar_url" : "https://avatars.githubusercontent.com/u/19864447?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/web-flow",
    "html_url" : "https://github.com/web-flow",
    "followers_url" : "https://api.github.com/users/web-flow/followers",
    "following_url" : "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url" : "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url" : "https://api.github.com/users/web-flow/orgs",
    "repos_url" : "https://api.github.com/users/web-flow/repos",
    "events_url" : "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/web-flow/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 402,
    "additions" : 402,
    "deletions" : 0
  },
  "author" : {
    "login" : "zengsn",
    "id" : 627946,
    "avatar_url" : "https://avatars.githubusercontent.com/u/627946?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zengsn",
    "html_url" : "https://github.com/zengsn",
    "followers_url" : "https://api.github.com/users/zengsn/followers",
    "following_url" : "https://api.github.com/users/zengsn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zengsn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zengsn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zengsn/subscriptions",
    "organizations_url" : "https://api.github.com/users/zengsn/orgs",
    "repos_url" : "https://api.github.com/users/zengsn/repos",
    "events_url" : "https://api.github.com/users/zengsn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zengsn/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25",
  "commit" : {
    "author" : {
      "name" : "Zeng Shaoning",
      "email" : "shaoning.zeng@gmail.com",
      "date" : "2016-06-17T02:06:27Z"
    },
    "committer" : {
      "name" : "GitHub",
      "email" : "noreply@github.com",
      "date" : "2016-06-17T02:06:27Z"
    },
    "message" : "Merge pull request #977 from mumuLOVEanni/master\n\n代码冲突修改 实验九",
    "tree" : {
      "sha" : "1acb55713cbbbce7c3f5155d61e3033c1ba62eed",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/1acb55713cbbbce7c3f5155d61e3033c1ba62eed"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/comments",
  "files" : [ {
    "sha" : "168880faf93669b6e53cd20ae17b65e339597bcc",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/MainActivity.java",
    "status" : "added",
    "additions" : 118,
    "deletions" : 0,
    "changes" : 118,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/MainActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/MainActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/MainActivity.java?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25",
    "patch" : "@@ -0,0 +1,118 @@\n+package com.qin.zdlock;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+import android.app.Activity;\n+import android.app.KeyguardManager;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.graphics.Rect;\n+import android.graphics.drawable.AnimationDrawable;\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.util.Log;\n+import android.view.KeyEvent;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.Window;\n+import android.view.WindowManager;\n+import android.widget.ImageView;\n+import android.widget.RelativeLayout;\n+import android.widget.TextView;\n+\n+public class MainActivity extends Activity {\n+\n+\tprivate static String TAG = \"QINZDLOCK\";\n+\n+\tprivate SliderRelativeLayout sliderLayout = null;\n+\n+\tprivate ImageView imgView_getup_arrow; // ����ͼƬ\n+\tprivate AnimationDrawable animArrowDrawable = null;\n+\n+    private Context mContext = null ;\n+\t\n+    public static int MSG_LOCK_SUCESS = 1;\n+    \n+    \n+\t/** Called when the activity is first created. */\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tmContext = MainActivity.this;\n+\t\t/*����ȫ����ޱ���*/\n+\t\tthis.requestWindowFeature(Window.FEATURE_NO_TITLE);\n+\t\tgetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\n+\t\t\t\t   WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+\t\t\n+\t\tsetContentView(R.layout.main);\n+\t\tinitViews();\n+\t\t\n+\t\tstartService(new Intent(MainActivity.this, ZdLockService.class));\n+\t\t\n+\t\tsliderLayout.setMainHandler(mHandler);\n+\t}\n+\n+\tprivate void initViews(){    \t\n+    \tsliderLayout = (SliderRelativeLayout)findViewById(R.id.slider_layout);\n+    \t//��ö���������ʼת��\n+    \timgView_getup_arrow = (ImageView)findViewById(R.id.getup_arrow);\n+    \tanimArrowDrawable = (AnimationDrawable) imgView_getup_arrow.getBackground() ;\n+    }\n+\n+\t@Override\n+\tprotected void onResume() {\n+\t\tsuper.onResume();\n+\t\t//���ö���\n+\t\tmHandler.postDelayed(AnimationDrawableTask, 300);  //��ʼ���ƶ���\n+\t}\n+\t@Override\n+\tprotected void onPause() {\n+\t\tsuper.onPause();\n+\t\tanimArrowDrawable.stop();\n+\t}\n+\n+\tprotected void onDestory(){\n+\t\tsuper.onDestroy();\n+\t}\n+\t\n+\t//ͨ����ʱ���Ƶ�ǰ����bitmap��λ�����\n+\tprivate Runnable AnimationDrawableTask = new Runnable(){\n+\t\t\n+\t\tpublic void run(){\n+\t\t\tanimArrowDrawable.start();\n+\t\t\tmHandler.postDelayed(AnimationDrawableTask, 300);\n+\t\t}\n+\t};\n+\t\n+\tprivate Handler mHandler =new Handler (){\n+\t\t\n+\t\tpublic void handleMessage(Message msg){\n+\t\t\t\n+\t\t\tLog.i(TAG, \"handleMessage :  #### \" );\n+\t\t\t\n+\t\t\tif(MSG_LOCK_SUCESS == msg.what)\n+\t\t\t\tfinish(); // ����ɹ�ʱ���������ǵ�Activity����\n+\t\t}\n+\t};\n+\t\n+\t//��ε�Home��\n+\tpublic void onAttachedToWindow() {\n+\t\tthis.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);\n+\t    super.onAttachedToWindow();\n+    }\n+\t\n+\t//��ε�Back��\n+\tpublic boolean onKeyDown(int keyCode ,KeyEvent event){\n+\t\t\n+\t\tif(event.getKeyCode() == KeyEvent.KEYCODE_BACK)\n+\t\t\treturn true ;\n+\t\telse\n+\t\t\treturn super.onKeyDown(keyCode, event);\n+\t\t\n+\t}\n+\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "959eed52e5b14a8c97ef0e53ff38209481115dad",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/SliderRelativeLayout.java",
    "status" : "added",
    "additions" : 193,
    "deletions" : 0,
    "changes" : 193,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/SliderRelativeLayout.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/SliderRelativeLayout.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/SliderRelativeLayout.java?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25",
    "patch" : "@@ -0,0 +1,193 @@\n+package com.qin.zdlock;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Canvas;\n+import android.graphics.Rect;\n+import android.os.Handler;\n+import android.os.Message;\n+import android.os.Vibrator;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.widget.RelativeLayout;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+public class SliderRelativeLayout extends RelativeLayout {\n+\n+\tprivate static String TAG = \"SliderRelativeLayout\";\n+\n+\tprivate TextView tv_slider_icon = null; // ��ʼ�ؼ�������ж��Ƿ�Ϊ�϶���\n+\n+\tprivate Bitmap dragBitmap = null; //��קͼƬ\n+\tprivate Context mContext = null; // ��ʼ��ͼƬ��קʱ��Bitmap����\n+\n+\t\n+\tprivate Handler mainHandler = null; //����Activityͨ�ŵ�Handler����\n+\t\n+\tpublic SliderRelativeLayout(Context context) {\n+\t\tsuper(context);\n+\t\tmContext = context;\n+\t\tinitDragBitmap();\n+\t}\n+\n+\tpublic SliderRelativeLayout(Context context, AttributeSet attrs) {\n+\t\tsuper(context, attrs, 0);\n+\t\tmContext = context;\n+\t\tinitDragBitmap();\n+\t}\n+\n+\tpublic SliderRelativeLayout(Context context, AttributeSet attrs,\n+\t\t\tint defStyle) {\n+\t\tsuper(context, attrs, defStyle);\n+\t\tmContext = context;\n+\t\tinitDragBitmap();\n+\t}\n+\t\n+\t// ��ʼ��ͼƬ��קʱ��Bitmap����\n+\tprivate void initDragBitmap() {\n+\t\tif (dragBitmap == null)\n+\t\t\tdragBitmap = BitmapFactory.decodeResource(mContext.getResources(),\n+\t\t\t\t\tR.drawable.getup_slider_ico_pressed);\n+\t}\n+\t\n+\t@Override\n+\tprotected void onFinishInflate() {\n+\t\t// TODO Auto-generated method stub\n+\t\tsuper.onFinishInflate();\n+\t\t// �ÿؼ���Ҫ�ж��Ƿ��ڻ���������򡣻���ʱ ����INVISIBLE(���ɼ�)״̬������ʱ����VISIBLE(�ɼ�)״̬\n+\t\ttv_slider_icon = (TextView) findViewById(R.id.slider_icon);\n+\t}\n+\tprivate int mLastMoveX = 1000;  //��ǰbitmapӦ�û��Ƶĵط� �� ��ʼֵΪ�㹻�󣬿�����Ϊ������\t\n+\tpublic boolean onTouchEvent(MotionEvent event) {\n+\t\tint x = (int) event.getX();\n+\t\tint y = (int) event.getY();\n+\t\tLog.i(TAG, \"onTouchEvent\" + \" X is \" + x + \" Y is \" + y);\n+\t\tswitch (event.getAction()) {\n+\t\tcase MotionEvent.ACTION_DOWN:\n+\t\t\tmLastMoveX = (int) event.getX();\n+\t\t\t//����Action_Down�¼���  �ж��Ƿ����˻�������\n+\t\t\treturn handleActionDownEvenet(event);\n+\t\tcase MotionEvent.ACTION_MOVE:\n+\t\t\tmLastMoveX = x; //������X�᷽��\n+            invalidate(); //���»���\t\t\t    \n+\t\t\treturn true;\n+\t\tcase MotionEvent.ACTION_UP:\n+\t\t\t//����Action_Up�¼���  �ж��Ƿ����ɹ����ɹ���������ǵ�Activity ������ ��������˸�ͼƬ��\n+\t\t\thandleActionUpEvent(event);\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn super.onTouchEvent(event);\n+\t}\n+\n+\t// �����϶�ʱ��ͼƬ\n+\tpublic void onDraw(Canvas canvas) {\n+\t\tsuper.onDraw(canvas);\t\t\n+\t\t//Log.(TAG, \"onDraw ######\" );\n+\t\t// ͼƬ���������ƶ�\n+\t\tinvalidateDragImg(canvas);\n+\t}\n+\n+\t// ͼƬ���������ƶ�\n+\tprivate void invalidateDragImg(Canvas canvas) {\n+\t\t//Log.e(TAG, \"handleActionUpEvenet : invalidateDragImg\" );\n+\t\t//�Ժ��ʵ����ֵ���Ƹ�ͼƬ\n+\t\tint drawXCor = mLastMoveX - dragBitmap.getWidth();\n+\t\tint drawYCor = tv_slider_icon.getTop();\n+\t\tLog.i(TAG, \"invalidateDragImg\" + \" drawXCor \"+ drawXCor + \" and drawYCor\" + drawYCor);\n+\t    canvas.drawBitmap(dragBitmap,  drawXCor < 0 ? 5 : drawXCor , drawYCor , null);\n+\t}\n+\n+\t// ���������ǣ��Ƿ������ͼƬ�����Ƿ���Ҫ��ʼ�ƶ�\n+\tprivate boolean handleActionDownEvenet(MotionEvent event) {\n+\t\tRect rect = new Rect();\n+\t\ttv_slider_icon.getHitRect(rect);\n+\t\tboolean isHit = rect.contains((int) event.getX(), (int) event.getY());\n+\t\t\n+\t\tif(isHit)  //��ʼ��ק �����ظ�ͼƬ\n+\t\t\ttv_slider_icon.setVisibility(View.INVISIBLE);\n+\t\t\n+\t\t//Log.e(TAG, \"handleActionDownEvenet : isHit\" + isHit);\n+\t\t\n+\t\treturn isHit;\n+\t}\n+\n+\t//���˶���ʱ����ֵ \n+\tprivate static int BACK_DURATION = 20 ;   // 20ms\n+    //ˮƽ����ǰ������\n+\tprivate static float VE_HORIZONTAL = 0.7f ;  //0.1dip/ms\n+\t\n+    //�ж��ɿ���ָʱ���Ƿ�ﵽĩβ�����Կ����� , �ǣ��������ͨ��һ�����㷨ʹ����ˡ�\n+\tprivate void handleActionUpEvent(MotionEvent event){\t\t\n+\t\tint x = (int) event.getX() ;\t\n+\t\tLog.e(TAG, \"handleActionUpEvent : x -->\" + x + \"   getRight() \" + getRight() );\n+\t\t//������15dip���ڴ�����ɹ���\n+\t\tboolean isSucess= Math.abs(x - getRight()) <= 15 ;\n+\t\t\n+\t\tif(isSucess){\n+\t\t   Toast.makeText(mContext, \"����ɹ�\", 1000).show();\n+\t\t   resetViewState();\t\n+\t\t   virbate(); //��һ��\n+\t\t   //�������ǵ���Activity����\n+\t\t   mainHandler.obtainMessage(MainActivity.MSG_LOCK_SUCESS).sendToTarget();\n+\t\t}\n+\t\telse {//û�гɹ�������һ�����㷨ʹ�����\n+\t\t    //ÿ��20ms , ����Ϊ0.6dip/ms ,  ʹ��ǰ��ͼƬ������һ�ξ��룬ֱ�����������\t\n+\t\t\tmLastMoveX = x ;  //��¼�����ɿ�ʱ����ǰ�����λ�á�\n+\t\t\tint distance = x - tv_slider_icon.getRight() ;\n+\t\t\t//ֻ���ƶ����㹻����Ż���\n+\t\t\tLog.e(TAG, \"handleActionUpEvent : mLastMoveX -->\" + mLastMoveX + \" distance -->\" + distance );\n+\t\t\tif(distance >= 0)\n+\t\t\t    mHandler.postDelayed(BackDragImgTask, BACK_DURATION);\n+\t\t\telse{  //��ԭ��ʼ����\n+\t\t\t\tresetViewState();\n+\t\t\t}\n+\t\t}\n+\t}\n+\t//���ó�ʼ��״̬����ʾtv_slider_iconͼ��ʹbitmap���ɼ�\n+\tprivate void resetViewState(){\n+\t\tmLastMoveX = 1000 ;\n+\t\ttv_slider_icon.setVisibility(View.VISIBLE);\n+\t\tinvalidate();        //�ػ����һ��\n+\t}\n+\t\n+\t//ͨ����ʱ���Ƶ�ǰ����bitmap��λ�����\n+\tprivate Runnable BackDragImgTask = new Runnable(){\n+\t\t\n+\t\tpublic void run(){\n+\t\t\t//һ�´�BitmapӦ�õ�������ֵ\n+\t\t\tmLastMoveX = mLastMoveX - (int)(BACK_DURATION * VE_HORIZONTAL);\n+\t\t\t\n+\t\t\tLog.e(TAG, \"BackDragImgTask ############# mLastMoveX \" + mLastMoveX);\n+\t\t\t\n+\t\t\tinvalidate();//�ػ�\t\t\n+\t\t\t//�Ƿ���Ҫ��һ�ζ��� �� �����˳�ʼλ�ã�������Ҫ����\n+\t\t\tboolean shouldEnd = Math.abs(mLastMoveX - tv_slider_icon.getRight()) <= 8 ;\t\t\t\n+\t\t\tif(!shouldEnd)\n+\t\t\t    mHandler.postDelayed(BackDragImgTask, BACK_DURATION);\n+\t\t\telse { //��ԭ��ʼ����\n+\t\t\t\tresetViewState();\t\n+\t\t\t}\t\t\t\t\n+\t\t}\n+\t};\n+\t\n+\tprivate Handler mHandler =new Handler (){\n+\t\t\n+\t\tpublic void handleMessage(Message msg){\n+\t\t\t\n+\t\t\tLog.i(TAG, \"handleMessage :  #### \" );\n+\t\t\t\n+\t\t}\n+\t};\n+\t//��һ���¿�\n+\tprivate void virbate(){\n+\t\tVibrator vibrator = (Vibrator) mContext.getSystemService(Context.VIBRATOR_SERVICE);\n+\t\tvibrator.vibrate(200);\n+\t}\n+\tpublic void setMainHandler(Handler handler){\n+\t\tmainHandler = handler;//activity���ڵ�Handler����\n+\t}\n+}"
  }, {
    "sha" : "5d1055bc2576b8a137dd17dd847e660cbdd7cc67",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/ZdLockService.java",
    "status" : "added",
    "additions" : 91,
    "deletions" : 0,
    "changes" : 91,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/ZdLockService.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/ZdLockService.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/com1314080901147/ZdLockService.java?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25",
    "patch" : "@@ -0,0 +1,91 @@\n+package com.qin.zdlock;\n+\n+import android.app.KeyguardManager;\n+import android.app.Service;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+import android.os.IBinder;\n+import android.util.Log;\n+\n+public class ZdLockService extends Service {\n+\n+\tprivate static String TAG = \"ZdLockService\";\n+\tprivate Intent zdLockIntent = null ;\n+\t@Override\n+\tpublic IBinder onBind(Intent arg0) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn null;\n+\t}\n+\n+\tpublic void onCreate(){\n+\t\tsuper.onCreate();\n+\t\t\n+\t\t\n+\t\tzdLockIntent = new Intent(ZdLockService.this , MainActivity.class);\n+\t\tzdLockIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n+\t\t\n+\t\t/*ע��㲥*/\n+\t\tIntentFilter mScreenOnFilter = new IntentFilter(\"android.intent.action.SCREEN_ON\");\n+\t\tZdLockService.this.registerReceiver(mScreenOnReceiver, mScreenOnFilter);\n+\t\t\n+\t\t/*ע��㲥*/\n+\t\tIntentFilter mScreenOffFilter = new IntentFilter(\"android.intent.action.SCREEN_OFF\");\n+\t\tZdLockService.this.registerReceiver(mScreenOffReceiver, mScreenOffFilter);\n+\t}\n+\n+\tpublic int onStartCommand(Intent intent , int flags , int startId){\n+\t\t\n+\t\treturn Service.START_STICKY;\n+\t\t\n+\t}\n+\t\n+\tpublic void onDestroy(){\n+\t\tsuper.onDestroy();\n+\t\tZdLockService.this.unregisterReceiver(mScreenOnReceiver);\n+\t\tZdLockService.this.unregisterReceiver(mScreenOffReceiver);\n+\t\t//�ڴ�������\n+\t\tstartService(new Intent(ZdLockService.this, ZdLockService.class));\n+\t}\n+\t\n+\tprivate KeyguardManager mKeyguardManager = null ;\n+\tprivate KeyguardManager.KeyguardLock mKeyguardLock = null ;\n+\t//��Ļ����Ĺ㲥,����Ҫ����Ĭ�ϵ��������\n+\tprivate BroadcastReceiver mScreenOnReceiver = new BroadcastReceiver(){\n+\n+\t\t@Override\n+\t\tpublic void onReceive(Context context , Intent intent) {\n+\t\t\t\n+            Log.i(TAG, intent.getAction());\n+\n+\t\t\tif(intent.getAction().equals(\"android.intent.action.SCREEN_ON\")){\n+\t\t\t\tLog.i(TAG, \"----------------- android.intent.action.SCREEN_ON------\");\n+//\t\t\t\tmKeyguardManager = (KeyguardManager)context.getSystemService(Context.KEYGUARD_SERVICE);\n+//\t\t\t\tmKeyguardLock = mKeyguardManager.newKeyguardLock(\"zdLock 1\"); \n+//\t\t\t\tmKeyguardLock.disableKeyguard();\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t};\n+\t\n+\t//��Ļ�䰵/����Ĺ㲥 �� ����Ҫ����KeyguardManager����Ӧ����ȥ�����Ļ��\n+\tprivate BroadcastReceiver mScreenOffReceiver = new BroadcastReceiver(){\n+\t\t@Override\n+\t\tpublic void onReceive(Context context , Intent intent) {\n+\t\t\tString action = intent.getAction() ;\n+\t\t\t\n+\t\t    Log.i(TAG, intent.toString());\n+\t\t    \n+\t\t\tif(action.equals(\"android.intent.action.SCREEN_OFF\")\n+\t\t\t\t\t|| action.equals(\"android.intent.action.SCREEN_ON\") ){\n+\t\t\t\tmKeyguardManager = (KeyguardManager)context.getSystemService(Context.KEYGUARD_SERVICE);\n+\t\t\t\tmKeyguardLock = mKeyguardManager.newKeyguardLock(\"zdLock 1\"); \n+\t\t\t\tmKeyguardLock.disableKeyguard();\n+\t\t\t\tstartActivity(zdLockIntent);\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t};\n+\t\n+}"
  }, {
    "sha" : "d82a05102fa8736860f6fad2cbc055ddabe8bdda",
    "filename" : "app/src/main/res/drawable/getup_slider_ico_normal.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/getup_slider_ico_normal.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/getup_slider_ico_normal.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/getup_slider_ico_normal.png?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25"
  }, {
    "sha" : "86e3d98e8f1a52d09d1ab987a0545202ddecf17f",
    "filename" : "app/src/main/res/drawable/getup_slider_ico_pressed.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/getup_slider_ico_pressed.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/getup_slider_ico_pressed.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/getup_slider_ico_pressed.png?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25"
  }, {
    "sha" : "dd86ad7b054ebeee1fe50d7a14ac6d8e1dbbb82e",
    "filename" : "app/src/main/res/drawable/slider_arrow_1.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_arrow_1.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_arrow_1.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/slider_arrow_1.png?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25"
  }, {
    "sha" : "614698876a8c3192226deb88b10b43263eaa83b7",
    "filename" : "app/src/main/res/drawable/slider_arrow_2.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_arrow_2.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_arrow_2.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/slider_arrow_2.png?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25"
  }, {
    "sha" : "acff41f5d5ce4143f11f6f04ecc19b34ba62b8b5",
    "filename" : "app/src/main/res/drawable/slider_arrow_3.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_arrow_3.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_arrow_3.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/slider_arrow_3.png?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25"
  }, {
    "sha" : "da5b97d0de92a4806ab9db50d67a45d12f532552",
    "filename" : "app/src/main/res/drawable/slider_ico_alarm.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_ico_alarm.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/slider_ico_alarm.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/slider_ico_alarm.png?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25"
  }, {
    "sha" : "448bb68ef71c5f3762ff6e6b060386b2430b6b13",
    "filename" : "app/src/main/res/drawable/step2_tip_2.png",
    "status" : "added",
    "additions" : 0,
    "deletions" : 0,
    "changes" : 0,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/step2_tip_2.png",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25/app/src/main/res/drawable/step2_tip_2.png",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/res/drawable/step2_tip_2.png?ref=e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25"
  } ],
  "sha" : "e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/e7f82b1e6c3aa7c4f9b9fc2ed18c1015600edf25",
  "parents" : [ {
    "sha" : "6bc297563f1b9a2fd4ac65049fb6ba576e0f180f",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/6bc297563f1b9a2fd4ac65049fb6ba576e0f180f",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/6bc297563f1b9a2fd4ac65049fb6ba576e0f180f"
  }, {
    "sha" : "33e26963243816a1421cd93b24036921dc5222ab",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/33e26963243816a1421cd93b24036921dc5222ab",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/33e26963243816a1421cd93b24036921dc5222ab"
  } ]
}