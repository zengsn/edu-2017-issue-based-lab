{
  "committer" : {
    "login" : "woyizhidouzai",
    "id" : 15842142,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15842142?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/woyizhidouzai",
    "html_url" : "https://github.com/woyizhidouzai",
    "followers_url" : "https://api.github.com/users/woyizhidouzai/followers",
    "following_url" : "https://api.github.com/users/woyizhidouzai/following{/other_user}",
    "gists_url" : "https://api.github.com/users/woyizhidouzai/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/woyizhidouzai/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/woyizhidouzai/subscriptions",
    "organizations_url" : "https://api.github.com/users/woyizhidouzai/orgs",
    "repos_url" : "https://api.github.com/users/woyizhidouzai/repos",
    "events_url" : "https://api.github.com/users/woyizhidouzai/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/woyizhidouzai/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 1000,
    "additions" : 1000,
    "deletions" : 0
  },
  "author" : {
    "login" : "woyizhidouzai",
    "id" : 15842142,
    "avatar_url" : "https://avatars.githubusercontent.com/u/15842142?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/woyizhidouzai",
    "html_url" : "https://github.com/woyizhidouzai",
    "followers_url" : "https://api.github.com/users/woyizhidouzai/followers",
    "following_url" : "https://api.github.com/users/woyizhidouzai/following{/other_user}",
    "gists_url" : "https://api.github.com/users/woyizhidouzai/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/woyizhidouzai/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/woyizhidouzai/subscriptions",
    "organizations_url" : "https://api.github.com/users/woyizhidouzai/orgs",
    "repos_url" : "https://api.github.com/users/woyizhidouzai/repos",
    "events_url" : "https://api.github.com/users/woyizhidouzai/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/woyizhidouzai/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs/commit/ec329dcecaf734c019b1f9c82c3aa586a3f86119",
  "commit" : {
    "author" : {
      "name" : "woyizhidouz",
      "email" : "1786041432@qq.com",
      "date" : "2016-05-18T11:38:09Z"
    },
    "committer" : {
      "name" : "woyizhidouz",
      "email" : "1786041432@qq.com",
      "date" : "2016-05-18T11:38:09Z"
    },
    "message" : "#95 #85 实验9",
    "tree" : {
      "sha" : "db3404d5069b251a5cd4fbbdcb31961c94fc388d",
      "url" : "https://api.github.com/repos/hzuapps/android-labs/git/trees/db3404d5069b251a5cd4fbbdcb31961c94fc388d"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs/git/commits/ec329dcecaf734c019b1f9c82c3aa586a3f86119",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs/commits/ec329dcecaf734c019b1f9c82c3aa586a3f86119/comments",
  "files" : [ {
    "sha" : "9afa6ee17bab353fda1deca00d50626a6acc146a",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/AndroidManifest.xml",
    "status" : "added",
    "additions" : 27,
    "deletions" : 0,
    "changes" : 27,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/AndroidManifest.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/AndroidManifest.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/AndroidManifest.xml?ref=ec329dcecaf734c019b1f9c82c3aa586a3f86119",
    "patch" : "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.example.clander\"\n+    android:versionCode=\"1\"\n+    android:versionName=\"1.0\" >\n+\n+    <uses-sdk\n+        android:minSdkVersion=\"8\"\n+        android:targetSdkVersion=\"18\" />\n+\n+    <application\n+        android:allowBackup=\"true\"\n+        android:icon=\"@drawable/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:theme=\"@style/AppTheme\" >\n+        <activity\n+            android:name=\"edu.hzuapps.androidworks.homeworks.Net134080903207.Net1314080903207_Calendar\"\n+            android:label=\"@string/app_name\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>"
  }, {
    "sha" : "423715f7a6131adb80d758ad1bfd28b5c8850942",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_Calendar.java",
    "status" : "added",
    "additions" : 255,
    "deletions" : 0,
    "changes" : 255,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_Calendar.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_Calendar.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_Calendar.java?ref=ec329dcecaf734c019b1f9c82c3aa586a3f86119",
    "patch" : "@@ -0,0 +1,255 @@\n+package edu.hzuapps.androidworks.homeworks.Net134080903207;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import com.example.clander.R;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.content.SharedPreferences;\n+import android.graphics.Color;\n+import android.graphics.Typeface;\n+import android.os.Bundle;\n+import android.view.GestureDetector;\n+import android.view.GestureDetector.OnGestureListener;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.view.View.OnTouchListener;\n+import android.widget.AdapterView;\n+import android.widget.AdapterView.OnItemClickListener;\n+import android.widget.GridView;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+/**\n+ * 日历显示activity\n+ * \n+ *\n+ */\n+public class Net1314080903207_Calendar extends Activity implements OnGestureListener {\n+\n+\tprivate GestureDetector gestureDetector = null;\n+\tprivate Net1314080903207_CalendarAdapter calV = null;\n+\tprivate GridView gridView = null;\n+\tprivate TextView topText = null;\n+\tprivate static int jumpMonth = 0;      //每次滑动，增加或减去一个月,默认为0（即显示当前月）\n+\tprivate static int jumpYear = 0;       //滑动跨越一年，则增加或者减去一年,默认为0(即当前年)\n+\tprivate int year_c = 0;\n+\tprivate int month_c = 0;\n+\tprivate int day_c = 0;\n+\tprivate String currentDate = \"\";\n+\tprivate Bundle bd=null;//发送参数\n+\tprivate Bundle bun=null;//接收参数\n+\tprivate String ruzhuTime;\n+\tprivate String lidianTime;\n+\tprivate String state=\"\";\n+\t\n+\tpublic Net1314080903207_Calendar() {\n+\n+\t\tDate date = new Date();\n+    \tSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-M-d\");\n+    \tcurrentDate = sdf.format(date);  //当期日期\n+    \tyear_c = Integer.parseInt(currentDate.split(\"-\")[0]);\n+    \tmonth_c = Integer.parseInt(currentDate.split(\"-\")[1]);\n+    \tday_c = Integer.parseInt(currentDate.split(\"-\")[2]);\n+    \t\n+    \t\n+\t}\n+\n+\t@Override\n+\tpublic void onCreate(Bundle savedInstanceState) {\n+\t\tsuper.onCreate(savedInstanceState);\n+\t\tsetContentView(R.layout.net_1314080903207calendar);\n+\t\tbd=new Bundle();//out\n+\t\tbun=getIntent().getExtras();//in\n+\t\t\n+\t\t  if(bun!=null&&bun.getString(\"state\").equals(\"ruzhu\"))\n+          {\n+          \tstate=bun.getString(\"state\");\n+          \tSystem.out.println(\"%%%%%%\"+state);\n+          }else if(bun!=null&&bun.getString(\"state\").equals(\"lidian\")){\n+          \t\n+          \tstate=bun.getString(\"state\");\n+          \tSystem.out.println(\"|||||||||||\"+state);\n+          }\n+\t\t\n+\t\tgestureDetector = new GestureDetector(this);\n+//\t\tbd=new Bundle();\n+        calV = new Net1314080903207_CalendarAdapter(this,getResources(),jumpMonth,jumpYear,year_c,month_c,day_c);\n+        addGridView();\n+        gridView.setAdapter(calV);\n+        \n+\t\ttopText = (TextView) findViewById(R.id.tv_month);\n+\t\taddTextToTopTextView(topText);\n+\t\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,\n+\t\t\tfloat velocityY) {\n+\t\tint gvFlag = 0;         //每次添加gridview到viewflipper中时给的标记\n+\t\tif (e1.getX() - e2.getX() > 120) {\n+            //像左滑动\n+\t\t\taddGridView();   //添加一个gridView\n+\t\t\tjumpMonth++;     //下一个月\n+\t\t\t\n+\t\t\tcalV = new Net1314080903207_CalendarAdapter(this,getResources(),jumpMonth,jumpYear,year_c,month_c,day_c);\n+\t        gridView.setAdapter(calV);\n+\t        addTextToTopTextView(topText);\n+\t        gvFlag++;\n+\t\n+\t\t\treturn true;\n+\t\t} else if (e1.getX() - e2.getX() < -120) {\n+            //向右滑动\n+\t\t\taddGridView();   //添加一个gridView\n+\t\t\tjumpMonth--;     //上一个月\n+\t\t\t\n+\t\t\tcalV = new Net1314080903207_CalendarAdapter(this,getResources(),jumpMonth,jumpYear,year_c,month_c,day_c);\n+\t        gridView.setAdapter(calV);\n+\t        gvFlag++;\n+\t        addTextToTopTextView(topText);\n+\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t\n+\t\n+\t/**\n+\t * 创建菜单\n+\t */\n+\t@Override\n+\tpublic boolean onCreateOptionsMenu(Menu menu) {\n+\n+\t\tmenu.add(0, menu.FIRST, menu.FIRST, \"今天\");\n+\t\treturn super.onCreateOptionsMenu(menu);\n+\t}\n+\t\n+\t/**\n+\t * 选择菜单\n+\t */\n+\t@Override\n+\tpublic boolean onMenuItemSelected(int featureId, MenuItem item) {\n+        switch (item.getItemId()){\n+        case Menu.FIRST:\n+        \t//跳转到今天\n+        \tint xMonth = jumpMonth;\n+        \tint xYear = jumpYear;\n+        \tint gvFlag =0;\n+        \tjumpMonth = 0;\n+        \tjumpYear = 0;\n+        \taddGridView();   //添加一个gridView\n+        \tyear_c = Integer.parseInt(currentDate.split(\"-\")[0]);\n+        \tmonth_c = Integer.parseInt(currentDate.split(\"-\")[1]);\n+        \tday_c = Integer.parseInt(currentDate.split(\"-\")[2]);\n+        \tcalV = new Net1314080903207_CalendarAdapter(this,getResources(),jumpMonth,jumpYear,year_c,month_c,day_c);\n+\t        gridView.setAdapter(calV);\n+\t        addTextToTopTextView(topText);\n+\t        gvFlag++;\n+\n+        \tbreak;\n+        }\n+\t\treturn super.onMenuItemSelected(featureId, item);\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean onTouchEvent(MotionEvent event) {\n+\n+\t\treturn this.gestureDetector.onTouchEvent(event);\n+\t}\n+\n+\t@Override\n+\tpublic boolean onDown(MotionEvent e) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic void onLongPress(MotionEvent e) {\n+\t\t// TODO Auto-generated method stub\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX,\n+\t\t\tfloat distanceY) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic void onShowPress(MotionEvent e) {\n+\t\t// TODO Auto-generated method stub\n+\t}\n+\n+\t@Override\n+\tpublic boolean onSingleTapUp(MotionEvent e) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn false;\n+\t}\n+\t\n+\t//添加头部的年份 闰哪月等信息\n+\tpublic void addTextToTopTextView(TextView view){\n+\t\tStringBuffer textDate = new StringBuffer();\n+\t\ttextDate.append(calV.getShowYear()).append(\"年\").append(\n+\t\t\t\tcalV.getShowMonth()).append(\"月\").append(\"\\t\");\n+\t\tview.setText(textDate);\n+\t\tview.setTextColor(Color.WHITE);\n+\t\tview.setTypeface(Typeface.DEFAULT_BOLD);\n+\t}\n+\t\n+\t//添加gridview\n+\tprivate void addGridView() {\n+\t\t\n+\t\tgridView =(GridView)findViewById(R.id.gridview);\n+\n+\t\tgridView.setOnTouchListener(new OnTouchListener() {\n+            //将gridview中的触摸事件回传给gestureDetector\n+\t\t\t@Override\n+\t\t\tpublic boolean onTouch(View v, MotionEvent event) {\n+\t\t\t\t// TODO Auto-generated method stub\n+\t\t\t\treturn Net1314080903207_Calendar.this.gestureDetector.onTouchEvent(event);\n+\t\t\t}\n+\t\t});           \n+\t\t\n+\t\tgridView.setOnItemClickListener(new OnItemClickListener() {\n+            //gridView中的每一个item的点击事件\n+\t\t\t\n+\t\t\t@Override\n+\t\t\tpublic void onItemClick(AdapterView<?> arg0, View arg1, int position,\n+\t\t\t\t\tlong arg3) {\n+\t\t\t\t  //点击任何一个item，得到这个item的日期(排除点击的是周日到周六(点击不响应))\n+\t\t\t\t  int startPosition = calV.getStartPositon();\n+\t\t\t\t  int endPosition = calV.getEndPosition();\n+\t\t\t\t  if(startPosition <= position+7  && position <= endPosition-7){\n+\t\t\t\t\t  String scheduleDay = calV.getDateByClickItem(position).split(\"\\\\.\")[0];  //这一天的阳历\n+\t\t\t\t\t  //String scheduleLunarDay = calV.getDateByClickItem(position).split(\"\\\\.\")[1];  //这一天的阴历\n+\t                  String scheduleYear = calV.getShowYear();\n+\t                  String scheduleMonth = calV.getShowMonth();\n+//\t                  Toast.makeText(CalendarActivity.this, scheduleYear+\"-\"+scheduleMonth+\"-\"+scheduleDay, 2000).show();\n+\t\t              ruzhuTime=scheduleMonth+\"月\"+scheduleDay+\"日\";\t                  \n+\t                  lidianTime=scheduleMonth+\"月\"+scheduleDay+\"日\";       \n+\t                Intent intent=new Intent();\n+\t                if(state.equals(\"ruzhu\"))\n+\t                {\n+\t                \t\n+\t                \tbd.putString(\"ruzhu\", ruzhuTime);\n+\t                \tSystem.out.println(\"ruzhuuuuuu\"+bd.getString(\"ruzhu\"));\n+\t                }else if(state.equals(\"lidian\")){\n+\t                \t\n+\t                \tbd.putString(\"lidian\", lidianTime);\n+\t                }\n+//\t                intent.setClass(CalendarActivity.this, HotelActivity.class);\t             \n+//\t                intent.putExtras(bd);\n+//\t                startActivity(intent);\n+//\t                finish();\n+\t                }\n+\t\t\t\t  }\n+\t\t\t\n+\t\t}); \n+\t}\n+\t\n+}\n\\ No newline at end of file"
  }, {
    "sha" : "123408e96a2f6665eba62fed0e46714a8fcd7322",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_CalendarAdapter.java",
    "status" : "added",
    "additions" : 315,
    "deletions" : 0,
    "changes" : 315,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_CalendarAdapter.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_CalendarAdapter.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_CalendarAdapter.java?ref=ec329dcecaf734c019b1f9c82c3aa586a3f86119",
    "patch" : "@@ -0,0 +1,315 @@\n+package edu.hzuapps.androidworks.homeworks.Net134080903207;\n+\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import com.example.clander.R;\n+\n+import android.content.Context;\n+import android.content.res.Resources;\n+import android.graphics.Color;\n+import android.graphics.drawable.Drawable;\n+import android.text.SpannableString;\n+import android.text.Spanned;\n+import android.text.style.RelativeSizeSpan;\n+import android.text.style.StyleSpan;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.TextView;\n+\n+/**\n+ * 日历gridview中的每一个item显示的textview\n+ * @author lmw\n+ *BaseAdapter就Android应用程序中经常用到的基础数据适配器，它的主要用途是将一组数据传到像ListView、\n+ *Spinner、Gallery及GridView等UI显示组件，它是继承自接口类Adapter，\n+ */\n+public class Net1314080903207_CalendarAdapter extends BaseAdapter {\n+\tprivate boolean isLeapyear = false;  //是否为闰年\n+\tprivate int daysOfMonth = 0;      //某月的天数\n+\tprivate int dayOfWeek = 0;        //具体某一天是星期几\n+\tprivate int lastDaysOfMonth = 0;  //上一个月的总天数\n+\tprivate Context context;\n+\tprivate String[] dayNumber = new String[42];  //一个gridview中的日期存入此数组中\n+//\tprivate static String week[] = {\"周日\",\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\"};\n+\tprivate Net1314080903207_SpecialCalendar sc = null;\n+\tprivate Net1314080903207_LunarCalendar lc = null; \n+\tprivate Resources res = null;\n+\tprivate Drawable drawable = null;\n+\t\n+\tprivate String currentYear = \"\";\n+\tprivate String currentMonth = \"\";\n+\tprivate String currentDay = \"\";\n+\t\n+\tprivate SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-M-d\");\n+\tprivate int currentFlag = -1;     //用于标记当天\n+\tprivate int[] schDateTagFlag = null;  //存储当月所有的日程日期\n+\t\n+\tprivate String showYear = \"\";   //用于在头部显示的年份\n+\tprivate String showMonth = \"\";  //用于在头部显示的月份\n+\tprivate String animalsYear = \"\"; \n+\tprivate String leapMonth = \"\";   //闰哪一个月\n+\tprivate String cyclical = \"\";   //天干地支\n+\t//系统当前时间\n+\tprivate String sysDate = \"\";  \n+\tprivate String sys_year = \"\";\n+\tprivate String sys_month = \"\";\n+\tprivate String sys_day = \"\";\n+\t\n+\tpublic Net1314080903207_CalendarAdapter(){\n+\t\tDate date = new Date();\n+\t\tsysDate = sdf.format(date);  //当期日期\n+\t\tsys_year = sysDate.split(\"-\")[0];\n+\t\tsys_month = sysDate.split(\"-\")[1];\n+\t\tsys_day = sysDate.split(\"-\")[2];\n+\t\t\n+\t}\n+\t\n+\tpublic Net1314080903207_CalendarAdapter(Context context,Resources rs,int jumpMonth,int jumpYear,int year_c,int month_c,int day_c){\n+\t\tthis();\n+\t\tthis.context= context;\n+\t\tsc = new Net1314080903207_SpecialCalendar();\n+\t\tlc = new Net1314080903207_LunarCalendar();\n+\t\tthis.res = rs;\n+\t\t\n+\t\tint stepYear = year_c+jumpYear;\n+\t\tint stepMonth = month_c+jumpMonth ;\n+\t\tif(stepMonth > 0){\n+\t\t\t//往下一个月滑动\n+\t\t\tif(stepMonth%12 == 0){\n+\t\t\t\tstepYear = year_c + stepMonth/12 -1;\n+\t\t\t\tstepMonth = 12;\n+\t\t\t}else{\n+\t\t\t\tstepYear = year_c + stepMonth/12;\n+\t\t\t\tstepMonth = stepMonth%12;\n+\t\t\t}\n+\t\t}else{\n+\t\t\t//往上一个月滑动\n+\t\t\tstepYear = year_c - 1 + stepMonth/12;\n+\t\t\tstepMonth = stepMonth%12 + 12;\n+\t\t\tif(stepMonth%12 == 0){\n+\t\t\t\t\n+\t\t\t}\n+\t\t}\n+\t\n+\t\tcurrentYear = String.valueOf(stepYear);;  //得到当前的年份\n+\t\tcurrentMonth = String.valueOf(stepMonth);  //得到本月 （jumpMonth为滑动的次数，每滑动一次就增加一月或减一月）\n+\t\tcurrentDay = String.valueOf(day_c);  //得到当前日期是哪天\n+\t\t\n+\t\tgetCalendar(Integer.parseInt(currentYear),Integer.parseInt(currentMonth));\n+\t\t\n+\t}\n+\t\n+\tpublic Net1314080903207_CalendarAdapter(Context context,Resources rs,int year, int month, int day){\n+\t\tthis();\n+\t\tthis.context= context;\n+\t\tsc = new Net1314080903207_SpecialCalendar();\n+\t\tlc = new Net1314080903207_LunarCalendar();\n+\t\tthis.res = rs;\n+\t\tcurrentYear = String.valueOf(year);;  //得到跳转到的年份\n+\t\tcurrentMonth = String.valueOf(month);  //得到跳转到的月份\n+\t\tcurrentDay = String.valueOf(day);  //得到跳转到的天\n+\t\t\n+\t\tgetCalendar(Integer.parseInt(currentYear),Integer.parseInt(currentMonth));\n+\t\t\n+\t}\n+\t\n+\t@Override\n+\tpublic int getCount() {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn dayNumber.length;\n+\t}\n+\n+\t@Override\n+\tpublic Object getItem(int position) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn position;\n+\t}\n+\n+\t@Override\n+\tpublic long getItemId(int position) {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn position;\n+\t}\n+\n+\t@Override\n+\tpublic View getView(int position, View convertView, ViewGroup parent) {\n+\n+\t\tif(convertView == null){\n+\t\t\tconvertView = LayoutInflater.from(context).inflate(R.layout.net_1314080903207calendar_item, null);\n+\t\t }\n+\t\tTextView textView = (TextView) convertView.findViewById(R.id.tvtext);\n+\t\tString d = dayNumber[position].split(\"\\\\.\")[0];\n+\t\tString dv = dayNumber[position].split(\"\\\\.\")[1];\n+\n+\t\tSpannableString sp = new SpannableString(d+\"\\n\"+dv);\n+\t\tsp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), 0, d.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n+\t\tsp.setSpan(new RelativeSizeSpan(1.2f) , 0, d.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n+\t\tif(dv != null ||dv != \"\"){\n+\t\t    sp.setSpan(new RelativeSizeSpan(0.75f), d.length()+1, dayNumber[position].length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n+\t\t}\n+//\t\tsp.setSpan(new ForegroundColorSpan(Color.MAGENTA), 14, 16, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)\n+\t\ttextView.setText(sp);\n+\t\ttextView.setTextColor(Color.GRAY);\n+\t\t\n+//\t\tif(position<7){\n+//\t\t\t//设置周\n+//\t\t\ttextView.setTextColor(Color.WHITE);\n+//\t\t\ttextView.setBackgroundColor(color.search_txt_color);\n+//\t\t\ttextView.setTextSize(14);\n+//\t\t}\n+\t\t\n+\t\tif (position < daysOfMonth + dayOfWeek && position >= dayOfWeek) {\n+\t\t\t// 当前月信息显示\n+\t\t\ttextView.setTextColor(Color.BLACK);// 当月字体设黑\n+\t\t\tdrawable = res.getDrawable(R.drawable.current_day_bgc);\n+\n+\t\t}\n+\t\tif(schDateTagFlag != null && schDateTagFlag.length >0){\n+\t\t\tfor(int i = 0; i < schDateTagFlag.length; i++){\n+\t\t\t\tif(schDateTagFlag[i] == position){\n+\t\t\t\t\t//设置日程标记背景\n+\t\t\t\t\ttextView.setBackgroundResource(R.drawable.mark);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif(currentFlag == position){ \n+\t\t\t//设置当天的背景\n+\t\t\tdrawable = res.getDrawable(R.drawable.current_day_bgc);\n+\t\t\ttextView.setBackgroundDrawable(drawable);\n+\t\t\ttextView.setTextColor(Color.WHITE);\n+\t\t}\n+\t\treturn convertView;\n+\t}\n+\t\n+\t//得到某年的某月的天数且这月的第一天是星期几\n+\tpublic void getCalendar(int year, int month){\n+\t\tisLeapyear = sc.isLeapYear(year);              //是否为闰年\n+\t\tdaysOfMonth = sc.getDaysOfMonth(isLeapyear, month);  //某月的总天数\n+\t\tdayOfWeek = sc.getWeekdayOfMonth(year, month);      //某月第一天为星期几\n+\t\tlastDaysOfMonth = sc.getDaysOfMonth(isLeapyear, month-1);  //上一个月的总天数\n+\t\tLog.d(\"DAY\", isLeapyear+\" ======  \"+daysOfMonth+\"  ============  \"+dayOfWeek+\"  =========   \"+lastDaysOfMonth);\n+\t\tgetweek(year,month);\n+\t}\n+\t\n+\t//将一个月中的每一天的值添加入数组dayNuber中\n+\tprivate void getweek(int year, int month) {\n+\t\tint j = 1;\n+\t\tint flag = 0;\n+\t\tString lunarDay = \"\";\n+\t\t\n+\t\t//得到当前月的所有日程日期(这些日期需要标记)\n+\n+\t\tfor (int i = 0; i < dayNumber.length; i++) {\n+\t\t\t// 周一\n+//\t\t\tif(i<7){\n+//\t\t\t\tdayNumber[i]=week[i]+\".\"+\" \";\n+//\t\t\t}\n+\t\t\t if(i < dayOfWeek){  //前一个月\n+\t\t\t\tint temp = lastDaysOfMonth - dayOfWeek+1;\n+\t\t\t\tlunarDay = lc.getLunarDate(year, month-1, temp+i,false);\n+\t\t\t\tdayNumber[i] = (temp + i)+\".\"+lunarDay;\n+\t\t\t\t\n+\t\t\t}else if(i < daysOfMonth + dayOfWeek){   //本月\n+\t\t\t\tString day = String.valueOf(i-dayOfWeek+1);   //得到的日期\n+\t\t\t\tlunarDay = lc.getLunarDate(year, month, i-dayOfWeek+1,false);\n+\t\t\t\tdayNumber[i] = i-dayOfWeek+1+\".\"+lunarDay;\n+\t\t\t\t//对于当前月才去标记当前日期\n+\t\t\t\tif(sys_year.equals(String.valueOf(year)) && sys_month.equals(String.valueOf(month)) && sys_day.equals(day)){\n+\t\t\t\t\t//标记当前日期\n+\t\t\t\t\tcurrentFlag = i;\n+\t\t\t\t}\t\n+\t\t\t\tsetShowYear(String.valueOf(year));\n+\t\t\t\tsetShowMonth(String.valueOf(month));\n+\t\t\t\tsetAnimalsYear(lc.animalsYear(year));\n+\t\t\t\tsetLeapMonth(lc.leapMonth == 0?\"\":String.valueOf(lc.leapMonth));\n+\t\t\t\tsetCyclical(lc.cyclical(year));\n+\t\t\t}else{   //下一个月\n+\t\t\t\tlunarDay = lc.getLunarDate(year, month+1, j,false);\n+\t\t\t\tdayNumber[i] = j+\".\"+lunarDay;\n+\t\t\t\tj++;\n+\t\t\t}\n+\t\t}\n+        \n+        String abc = \"\";\n+        for(int i = 0; i < dayNumber.length; i++){\n+        \t abc = abc+dayNumber[i]+\":\";\n+        }\n+        Log.d(\"DAYNUMBER\",abc);\n+\n+\n+\t}\n+\t\n+\t\n+\tpublic void matchScheduleDate(int year, int month, int day){\n+\t\t\n+\t}\n+\t\n+\t/**\n+\t * 点击每一个item时返回item中的日期\n+\t * @param position\n+\t * @return\n+\t */\n+\tpublic String getDateByClickItem(int position){\n+\t\treturn dayNumber[position];\n+\t}\n+\t\n+\t/**\n+\t * 在点击gridView时，得到这个月中第一天的位置\n+\t * @return\n+\t */\n+\tpublic int getStartPositon(){\n+\t\treturn dayOfWeek+7;\n+\t}\n+\t\n+\t/**\n+\t * 在点击gridView时，得到这个月中最后一天的位置\n+\t * @return\n+\t */\n+\tpublic int getEndPosition(){\n+\t\treturn  (dayOfWeek+daysOfMonth+7)-1;\n+\t}\n+\t\n+\tpublic String getShowYear() {\n+\t\treturn showYear;\n+\t}\n+\n+\tpublic void setShowYear(String showYear) {\n+\t\tthis.showYear = showYear;\n+\t}\n+\n+\tpublic String getShowMonth() {\n+\t\treturn showMonth;\n+\t}\n+\n+\tpublic void setShowMonth(String showMonth) {\n+\t\tthis.showMonth = showMonth;\n+\t}\n+\t\n+\tpublic String getAnimalsYear() {\n+\t\treturn animalsYear;\n+\t}\n+\n+\tpublic void setAnimalsYear(String animalsYear) {\n+\t\tthis.animalsYear = animalsYear;\n+\t}\n+\t\n+\tpublic String getLeapMonth() {\n+\t\treturn leapMonth;\n+\t}\n+\n+\tpublic void setLeapMonth(String leapMonth) {\n+\t\tthis.leapMonth = leapMonth;\n+\t}\n+\t\n+\tpublic String getCyclical() {\n+\t\treturn cyclical;\n+\t}\n+\n+\tpublic void setCyclical(String cyclical) {\n+\t\tthis.cyclical = cyclical;\n+\t}\n+}"
  }, {
    "sha" : "946072bf4b3935a5704fe6e2bb5dc175b01c0e09",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_LunarCalendar.java",
    "status" : "added",
    "additions" : 342,
    "deletions" : 0,
    "changes" : 342,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_LunarCalendar.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_LunarCalendar.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_LunarCalendar.java?ref=ec329dcecaf734c019b1f9c82c3aa586a3f86119",
    "patch" : "@@ -0,0 +1,342 @@\n+package edu.hzuapps.androidworks.homeworks.Net134080903207;\n+\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+public class Net1314080903207_LunarCalendar {\n+\tprivate int year;   //农历的年份\n+\tprivate int month;\n+\tprivate int day;\n+\tprivate String lunarMonth;   //农历的月份\n+\tprivate boolean leap;\n+\tpublic int leapMonth = 0;   //闰的是哪个月\n+\t\n+\tfinal static String chineseNumber[] = { \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\",\n+\t\t\t\"八\", \"九\", \"十\", \"十一\", \"十二\" };\n+\tstatic SimpleDateFormat chineseDateFormat = new SimpleDateFormat(\n+\t\t\t\"yyyy年MM月dd日\");\n+\tfinal static long[] lunarInfo = new long[] { 0x04bd8, 0x04ae0, 0x0a570,\n+\t\t\t0x054d5, 0x0d260, 0x0d950, 0x16554, 0x056a0, 0x09ad0, 0x055d2,\n+\t\t\t0x04ae0, 0x0a5b6, 0x0a4d0, 0x0d250, 0x1d255, 0x0b540, 0x0d6a0,\n+\t\t\t0x0ada2, 0x095b0, 0x14977, 0x04970, 0x0a4b0, 0x0b4b5, 0x06a50,\n+\t\t\t0x06d40, 0x1ab54, 0x02b60, 0x09570, 0x052f2, 0x04970, 0x06566,\n+\t\t\t0x0d4a0, 0x0ea50, 0x06e95, 0x05ad0, 0x02b60, 0x186e3, 0x092e0,\n+\t\t\t0x1c8d7, 0x0c950, 0x0d4a0, 0x1d8a6, 0x0b550, 0x056a0, 0x1a5b4,\n+\t\t\t0x025d0, 0x092d0, 0x0d2b2, 0x0a950, 0x0b557, 0x06ca0, 0x0b550,\n+\t\t\t0x15355, 0x04da0, 0x0a5d0, 0x14573, 0x052d0, 0x0a9a8, 0x0e950,\n+\t\t\t0x06aa0, 0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260,\n+\t\t\t0x0f263, 0x0d950, 0x05b57, 0x056a0, 0x096d0, 0x04dd5, 0x04ad0,\n+\t\t\t0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b5a0, 0x195a6,\n+\t\t\t0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40,\n+\t\t\t0x0af46, 0x0ab60, 0x09570, 0x04af5, 0x04970, 0x064b0, 0x074a3,\n+\t\t\t0x0ea50, 0x06b58, 0x055c0, 0x0ab60, 0x096d5, 0x092e0, 0x0c960,\n+\t\t\t0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0,\n+\t\t\t0x092d0, 0x0cab5, 0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9,\n+\t\t\t0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930, 0x07954, 0x06aa0,\n+\t\t\t0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65,\n+\t\t\t0x0d530, 0x05aa0, 0x076a3, 0x096d0, 0x04bd7, 0x04ad0, 0x0a4d0,\n+\t\t\t0x1d0b6, 0x0d250, 0x0d520, 0x0dd45, 0x0b5a0, 0x056d0, 0x055b2,\n+\t\t\t0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0 };\n+\n+\t//农历部分假日\n+\tfinal static String[] lunarHoliday = new String[]{\n+\t\t\t\t\t\t\t\t\t\t\"0101 春节\",\n+\t\t\t\t\t\t\t\t\t\t\"0115 元宵\",\n+\t\t\t\t\t\t\t\t\t\t\"0505 端午\",\n+\t\t\t\t\t\t\t\t\t\t\"0707 七夕情人\",\n+\t\t\t\t\t\t\t\t\t\t\"0715 中元\",\n+\t\t\t\t\t\t\t\t\t\t\"0815 中秋\",\n+\t\t\t\t\t\t\t\t\t\t\"0909 重阳\",\n+\t\t\t\t\t\t\t\t\t\t\"1208 腊八\",\n+\t\t\t\t\t\t\t\t\t\t\"1224 小年\",\n+\t\t\t\t\t\t\t\t\t\t\"0100 除夕\"\n+\t};\n+\t\n+\t//公历部分节假日\n+\tfinal static String[] solarHoliday = new String[]{\n+\t\t\t\t\t\t\t\t\t\t\"0101 元旦\",\n+\t\t\t\t\t\t\t\t\t\t\"0214 情人\",\n+\t\t\t\t\t\t\t\t\t\t\"0308 妇女\",\n+\t\t\t\t\t\t\t\t\t\t\"0312 植树\",\n+\t\t\t\t\t\t\t\t\t\t\"0315 消费者权益日\",\n+\t\t\t\t\t\t\t\t\t\t\"0401 愚人\",\n+\t\t\t\t\t\t\t\t\t\t\"0501 劳动\",\n+\t\t\t\t\t\t\t\t\t\t\"0504 青年\",\n+\t\t\t\t\t\t\t\t\t\t\"0512 护士\",\n+\t\t\t\t\t\t\t\t\t\t\"0601 儿童\",\n+\t\t\t\t\t\t\t\t\t\t\"0701 建党\",\n+\t\t\t\t\t\t\t\t\t\t\"0801 建军\",\n+\t\t\t\t\t\t\t\t\t\t\"0808 父亲\",\n+\t\t\t\t\t\t\t\t\t\t\"0909 毛泽东逝世纪念\",\n+\t\t\t\t\t\t\t\t\t\t\"0910 教师\",\n+\t\t\t\t\t\t\t\t\t\t\"0928 孔子诞辰\",\n+\t\t\t\t\t\t\t\t\t\t\"1001 国庆\",\n+\t\t\t\t\t\t\t\t\t\t\"1006 老人\",\n+\t\t\t\t\t\t\t\t\t\t\"1024 联合国日\",\n+\t\t\t\t\t\t\t\t\t\t\"1112 孙中山诞辰纪念\",\n+\t\t\t\t\t\t\t\t\t\t\"1220 澳门回归纪念\",\n+\t\t\t\t\t\t\t\t\t\t\"1225 圣诞\",\n+\t\t\t\t\t\t\t\t\t\t\"1226 毛泽东诞辰纪念\"\n+\t};\n+\t\n+\t// ====== 传回农历 y年的总天数\n+\tfinal private static int yearDays(int y) {\n+\t\tint i, sum = 348;\n+\t\tfor (i = 0x8000; i > 0x8; i >>= 1) {\n+\t\t\tif ((lunarInfo[y - 1900] & i) != 0)\n+\t\t\t\tsum += 1;\n+\t\t}\n+\t\treturn (sum + leapDays(y));\n+\t}\n+\n+\t// ====== 传回农历 y年闰月的天数\n+\tfinal private static int leapDays(int y) {\n+\t\tif (leapMonth(y) != 0) {\n+\t\t\tif ((lunarInfo[y - 1900] & 0x10000) != 0)\n+\t\t\t\treturn 30;\n+\t\t\telse\n+\t\t\t\treturn 29;\n+\t\t} else\n+\t\t\treturn 0;\n+\t}\n+\n+\t// ====== 传回农历 y年闰哪个月 1-12 , 没闰传回 0\n+\tfinal private static int leapMonth(int y) {\n+\t\treturn (int) (lunarInfo[y - 1900] & 0xf);\n+\t}\n+\n+\t// ====== 传回农历 y年m月的总天数\n+\tfinal private static int monthDays(int y, int m) {\n+\t\tif ((lunarInfo[y - 1900] & (0x10000 >> m)) == 0)\n+\t\t\treturn 29;\n+\t\telse\n+\t\t\treturn 30;\n+\t}\n+\n+\t// ====== 传回农历 y年的生肖\n+\tfinal public String animalsYear(int year) {\n+\t\tfinal String[] Animals = new String[] { \"鼠\", \"牛\", \"虎\", \"兔\", \"龙\", \"蛇\",\n+\t\t\t\t\"马\", \"羊\", \"猴\", \"鸡\", \"狗\", \"猪\" };\n+\t\treturn Animals[(year - 4) % 12];\n+\t}\n+\n+\t// ====== 传入 月日的offset 传回干支, 0=甲子\n+\tfinal private static String cyclicalm(int num) {\n+\t\tfinal String[] Gan = new String[] { \"甲\", \"乙\", \"丙\", \"丁\", \"戊\", \"己\", \"庚\",\n+\t\t\t\t\"辛\", \"壬\", \"癸\" };\n+\t\tfinal String[] Zhi = new String[] { \"子\", \"丑\", \"寅\", \"卯\", \"辰\", \"巳\", \"午\",\n+\t\t\t\t\"未\", \"申\", \"酉\", \"戌\", \"亥\" };\n+\t\treturn (Gan[num % 10] + Zhi[num % 12]);\n+\t}\n+\n+\t// ====== 传入 offset 传回干支, 0=甲子\n+\tfinal public String cyclical(int year) {\n+\t\tint num = year - 1900 + 36;\n+\t\treturn (cyclicalm(num));\n+\t}\n+\n+\tpublic static String getChinaDayString(int day) {\n+\t\tString chineseTen[] = { \"初\", \"十\", \"廿\", \"卅\" };\n+\t\tint n = day % 10 == 0 ? 9 : day % 10 - 1;\n+\t\tif (day > 30)\n+\t\t\treturn \"\";\n+\t\tif (day == 10)\n+\t\t\treturn \"初十\";\n+\t\telse\n+\t\t\treturn chineseTen[day / 10] + chineseNumber[n];\n+\t}\n+\n+\t/** */\n+\t/**\n+\t * 传出y年m月d日对应的农历. yearCyl3:农历年与1864的相差数 ? monCyl4:从1900年1月31日以来,闰月数\n+\t * dayCyl5:与1900年1月31日相差的天数,再加40 ?\n+\t * \n+\t * isday: 这个参数为false---日期为节假日时，阴历日期就返回节假日 ，true---不管日期是否为节假日依然返回这天对应的阴历日期\n+\t * @param cal\n+\t * @return\n+\t */\n+\tpublic String getLunarDate(int year_log, int month_log, int day_log, boolean isday) {\n+\t\t// @SuppressWarnings(\"unused\")\n+\t\tint yearCyl, monCyl, dayCyl;\n+\t\t//int leapMonth = 0;\n+\t\tString nowadays;\n+\t\tDate baseDate = null;\n+\t\tDate nowaday = null;\n+\t\ttry {\n+\t\t\tbaseDate = chineseDateFormat.parse(\"1900年1月31日\");\n+\t\t} catch (ParseException e) {\n+\t\t\te.printStackTrace(); // To change body of catch statement use\n+\t\t\t// Options | File Templates.\n+\t\t}\n+\n+\t\tnowadays = year_log + \"年\" + month_log + \"月\" + day_log + \"日\";\n+\t\ttry {\n+\t\t\tnowaday = chineseDateFormat.parse(nowadays);\n+\t\t} catch (ParseException e) {\n+\t\t\te.printStackTrace(); // To change body of catch statement use\n+\t\t\t// Options | File Templates.\n+\t\t}\n+\n+\t\t// 求出和1900年1月31日相差的天数\n+\t\tint offset = (int) ((nowaday.getTime() - baseDate.getTime()) / 86400000L);\n+\t\tdayCyl = offset + 40;\n+\t\tmonCyl = 14;\n+\n+\t\t// 用offset减去每农历年的天数\n+\t\t// 计算当天是农历第几天\n+\t\t// i最终结果是农历的年份\n+\t\t// offset是当年的第几天\n+\t\tint iYear, daysOfYear = 0;\n+\t\tfor (iYear = 1900; iYear < 10000 && offset > 0; iYear++) {\n+\t\t\tdaysOfYear = yearDays(iYear);\n+\t\t\toffset -= daysOfYear;\n+\t\t\tmonCyl += 12;\n+\t\t}\n+\t\tif (offset < 0) {\n+\t\t\toffset += daysOfYear;\n+\t\t\tiYear--;\n+\t\t\tmonCyl -= 12;\n+\t\t}\n+\t\t// 农历年份\n+\t\tyear = iYear;\n+        setYear(year);  //设置公历对应的农历年份\n+\t\t\n+\t\tyearCyl = iYear - 1864;\n+\t\tleapMonth = leapMonth(iYear); // 闰哪个月,1-12\n+\t\tleap = false;\n+\n+\t\t// 用当年的天数offset,逐个减去每月（农历）的天数，求出当天是本月的第几天\n+\t\tint iMonth, daysOfMonth = 0;\n+\t\tfor (iMonth = 1; iMonth < 13 && offset > 0; iMonth++) {\n+\t\t\t// 闰月\n+\t\t\tif (leapMonth > 0 && iMonth == (leapMonth + 1) && !leap) {\n+\t\t\t\t--iMonth;\n+\t\t\t\tleap = true;\n+\t\t\t\tdaysOfMonth = leapDays(year);\n+\t\t\t} else\n+\t\t\t\tdaysOfMonth = monthDays(year, iMonth);\n+\n+\t\t\toffset -= daysOfMonth;\n+\t\t\t// 解除闰月\n+\t\t\tif (leap && iMonth == (leapMonth + 1))\n+\t\t\t\tleap = false;\n+\t\t\tif (!leap)\n+\t\t\t\tmonCyl++;\n+\t\t}\n+\t\t// offset为0时，并且刚才计算的月份是闰月，要校正\n+\t\tif (offset == 0 && leapMonth > 0 && iMonth == leapMonth + 1) {\n+\t\t\tif (leap) {\n+\t\t\t\tleap = false;\n+\t\t\t} else {\n+\t\t\t\tleap = true;\n+\t\t\t\t--iMonth;\n+\t\t\t\t--monCyl;\n+\t\t\t}\n+\t\t}\n+\t\t// offset小于0时，也要校正\n+\t\tif (offset < 0) {\n+\t\t\toffset += daysOfMonth;\n+\t\t\t--iMonth;\n+\t\t\t--monCyl;\n+\t\t}\n+\t\tmonth = iMonth;\n+\t\tsetLunarMonth(chineseNumber[month - 1] + \"月\");  //设置对应的阴历月份\n+\t\tday = offset + 1;\n+\n+\t\tif(!isday){\n+\t\t\t//如果日期为节假日则阴历日期则返回节假日\n+\t\t\t//setLeapMonth(leapMonth);\n+\t\t\tfor(int i = 0; i < solarHoliday.length; i++){\n+\t\t\t\t//返回公历节假日名称\n+\t\t\t\tString sd = solarHoliday[i].split(\" \")[0];  //节假日的日期\n+\t\t\t\tString sdv = solarHoliday[i].split(\" \")[1]; //节假日的名称\n+\t\t\t\tString smonth_v = month_log+\"\";\n+\t\t\t\tString sday_v = day_log+\"\";\n+\t\t\t\tString smd = \"\";\n+\t\t\t\tif(month_log < 10){\n+\t\t\t\t\tsmonth_v = \"0\"+month_log;\n+\t\t\t\t}\n+\t\t\t\tif(day_log < 10){\n+\t\t\t\t\tsday_v = \"0\"+day_log;\n+\t\t\t\t}\n+\t\t\t\tsmd = smonth_v+sday_v;\n+\t\t\t\tif(sd.trim().equals(smd.trim())){\n+\t\t\t\t\treturn sdv;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t\n+\t\t\tfor(int i = 0; i < lunarHoliday.length; i++){\n+\t\t\t\t//返回农历节假日名称\n+\t\t\t\tString ld =lunarHoliday[i].split(\" \")[0];   //节假日的日期\n+\t\t\t\tString ldv = lunarHoliday[i].split(\" \")[1];  //节假日的名称\n+\t\t\t\tString lmonth_v = month+\"\";\n+\t\t\t\tString lday_v = day+\"\";\n+\t\t\t\tString lmd = \"\";\n+\t\t\t\tif(month < 10){\n+\t\t\t\t\tlmonth_v = \"0\"+month;\n+\t\t\t\t}\n+\t\t\t\tif(day < 10){\n+\t\t\t\t\tlday_v = \"0\"+day;\n+\t\t\t\t}\n+\t\t\t\tlmd = lmonth_v+lday_v;\n+\t\t\t\tif(ld.trim().equals(lmd.trim())){\n+\t\t\t\t\treturn ldv;       \n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t    if (day == 1)\n+\t\t\treturn chineseNumber[month - 1] + \"月\";\n+\t\telse\n+\t\t\treturn getChinaDayString(day);\n+\n+\t}\n+\n+\t\n+\tpublic String toString() {\n+\t\tif (chineseNumber[month - 1] == \"一\" && getChinaDayString(day) == \"初一\")\n+\t\t\treturn \"农历\" + year + \"年\";\n+\t\telse if (getChinaDayString(day) == \"初一\")\n+\t\t\treturn chineseNumber[month - 1] + \"月\";\n+\t\telse\n+\t\t\treturn getChinaDayString(day);\n+\t\t// return year + \"年\" + (leap ? \"闰\" : \"\") + chineseNumber[month - 1] +\n+\t\t// \"月\" + getChinaDayString(day);\n+\t}\n+\t\n+\t/*public static void main(String[] args) {\n+\t\tSystem.out.println(new LunarCalendar().getLunarDate(2012, 1, 23));\n+\t}*/\n+\t\n+\tpublic int getLeapMonth() {\n+\t\treturn leapMonth;\n+\t}\n+\n+\tpublic void setLeapMonth(int leapMonth) {\n+\t\tthis.leapMonth = leapMonth;\n+\t}\n+\t\n+\t/**\n+\t * 得到当前日期对应的阴历月份\n+\t * @return\n+\t */\n+\tpublic String getLunarMonth() {\n+\t\treturn lunarMonth;\n+\t}\n+\t\n+\tpublic void setLunarMonth(String lunarMonth) {\n+\t\tthis.lunarMonth = lunarMonth;\n+\t}\n+\t\n+\t/**\n+\t * 得到当前年对应的农历年份\n+\t * @return\n+\t */\n+\tpublic int getYear() {\n+\t\treturn year;\n+\t}\n+\n+\tpublic void setYear(int year) {\n+\t\tthis.year = year;\n+\t}\n+}"
  }, {
    "sha" : "3790f6f7c33138cdd0cae23a24aeaaa0150ccc77",
    "filename" : "app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_SpecialCalendar.java",
    "status" : "added",
    "additions" : 61,
    "deletions" : 0,
    "changes" : 61,
    "blob_url" : "https://github.com/hzuapps/android-labs/blob/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_SpecialCalendar.java",
    "raw_url" : "https://github.com/hzuapps/android-labs/raw/ec329dcecaf734c019b1f9c82c3aa586a3f86119/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_SpecialCalendar.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs/contents/app/src/main/java/edu/hzuapps/androidworks/homeworks/net1314080903207/Net1314080903207_SpecialCalendar.java?ref=ec329dcecaf734c019b1f9c82c3aa586a3f86119",
    "patch" : "@@ -0,0 +1,61 @@\n+package edu.hzuapps.androidworks.homeworks.Net134080903207;\n+\n+import java.util.Calendar;\n+\n+public class Net1314080903207_SpecialCalendar {\n+\n+\tprivate int daysOfMonth = 0;      //某月的天数\n+\tprivate int dayOfWeek = 0;        //具体某一天是星期几\n+\n+\t\n+\t\n+\t\n+\t// 判断是否为闰年\n+\tpublic boolean isLeapYear(int year) {\n+\t\tif (year % 100 == 0 && year % 400 == 0) {\n+\t\t\treturn true;\n+\t\t} else if (year % 100 != 0 && year % 4 == 0) {\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t//得到某月有多少天数\n+\tpublic int getDaysOfMonth(boolean isLeapyear, int month) {\n+\t\tswitch (month) {\n+\t\tcase 1:\n+\t\tcase 3:\n+\t\tcase 5:\n+\t\tcase 7:\n+\t\tcase 8:\n+\t\tcase 10:\n+\t\tcase 12:\n+\t\t\tdaysOfMonth = 31;\n+\t\t\tbreak;\n+\t\tcase 4:\n+\t\tcase 6:\n+\t\tcase 9:\n+\t\tcase 11:\n+\t\t\tdaysOfMonth = 30;\n+\t\t\tbreak;\n+\t\tcase 2:\n+\t\t\tif (isLeapyear) {\n+\t\t\t\tdaysOfMonth = 29;\n+\t\t\t} else {\n+\t\t\t\tdaysOfMonth = 28;\n+\t\t\t}\n+\n+\t\t}\n+\t\treturn daysOfMonth;\n+\t}\n+\t\n+\t//指定某年中的某月的第一天是星期几\n+\tpublic int getWeekdayOfMonth(int year, int month){\n+\t\tCalendar cal = Calendar.getInstance();\n+\t\tcal.set(year, month-1, 1);\n+\t\tdayOfWeek = cal.get(Calendar.DAY_OF_WEEK)-1;\n+\t\treturn dayOfWeek;\n+\t}\n+\t\n+\t\n+}"
  } ],
  "sha" : "ec329dcecaf734c019b1f9c82c3aa586a3f86119",
  "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/ec329dcecaf734c019b1f9c82c3aa586a3f86119",
  "parents" : [ {
    "sha" : "0a452f39a5cf8a08a3390fc5b30c95234ae79278",
    "url" : "https://api.github.com/repos/hzuapps/android-labs/commits/0a452f39a5cf8a08a3390fc5b30c95234ae79278",
    "html_url" : "https://github.com/hzuapps/android-labs/commit/0a452f39a5cf8a08a3390fc5b30c95234ae79278"
  } ]
}