{
  "committer" : {
    "login" : "web-flow",
    "id" : 19864447,
    "avatar_url" : "https://avatars.githubusercontent.com/u/19864447?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/web-flow",
    "html_url" : "https://github.com/web-flow",
    "followers_url" : "https://api.github.com/users/web-flow/followers",
    "following_url" : "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url" : "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url" : "https://api.github.com/users/web-flow/orgs",
    "repos_url" : "https://api.github.com/users/web-flow/repos",
    "events_url" : "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/web-flow/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 361,
    "additions" : 0,
    "deletions" : 361
  },
  "author" : {
    "login" : "Hongsf",
    "id" : 22068396,
    "avatar_url" : "https://avatars.githubusercontent.com/u/22068396?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/Hongsf",
    "html_url" : "https://github.com/Hongsf",
    "followers_url" : "https://api.github.com/users/Hongsf/followers",
    "following_url" : "https://api.github.com/users/Hongsf/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Hongsf/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Hongsf/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Hongsf/subscriptions",
    "organizations_url" : "https://api.github.com/users/Hongsf/orgs",
    "repos_url" : "https://api.github.com/users/Hongsf/repos",
    "events_url" : "https://api.github.com/users/Hongsf/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Hongsf/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/java-web/commit/07e16517abd93525442c7e309f6e9bd333b2ac34",
  "commit" : {
    "author" : {
      "name" : "洪生锋",
      "email" : "1083178465@qq.com",
      "date" : "2016-10-02T10:56:18Z"
    },
    "committer" : {
      "name" : "GitHub",
      "email" : "noreply@github.com",
      "date" : "2016-10-02T10:56:18Z"
    },
    "message" : "Delete bootstrap-tooltip.js",
    "tree" : {
      "sha" : "9ce0fb2dbbb4be0b62c91e54f39e6322f4e13999",
      "url" : "https://api.github.com/repos/hzuapps/java-web/git/trees/9ce0fb2dbbb4be0b62c91e54f39e6322f4e13999"
    },
    "url" : "https://api.github.com/repos/hzuapps/java-web/git/commits/07e16517abd93525442c7e309f6e9bd333b2ac34",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/java-web/commits/07e16517abd93525442c7e309f6e9bd333b2ac34/comments",
  "files" : [ {
    "sha" : "c6e1305194e6369d9da5f8085164cf132a6d668e",
    "filename" : "labs/1414080902110/bootstrap/js/bootstrap-tooltip.js",
    "status" : "removed",
    "additions" : 0,
    "deletions" : 361,
    "changes" : 361,
    "blob_url" : "https://github.com/hzuapps/java-web/blob/884a5074c0eb05d5650682b6f466fe5fcf3d22f5/labs/1414080902110/bootstrap/js/bootstrap-tooltip.js",
    "raw_url" : "https://github.com/hzuapps/java-web/raw/884a5074c0eb05d5650682b6f466fe5fcf3d22f5/labs/1414080902110/bootstrap/js/bootstrap-tooltip.js",
    "contents_url" : "https://api.github.com/repos/hzuapps/java-web/contents/labs/1414080902110/bootstrap/js/bootstrap-tooltip.js?ref=884a5074c0eb05d5650682b6f466fe5fcf3d22f5",
    "patch" : "@@ -1,361 +0,0 @@\n-/* ===========================================================\n- * bootstrap-tooltip.js v2.3.2\n- * http://twbs.github.com/bootstrap/javascript.html#tooltips\n- * Inspired by the original jQuery.tipsy by Jason Frame\n- * ===========================================================\n- * Copyright 2013 Twitter, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- * ========================================================== */\n-\n-\n-!function ($) {\n-\n-  \"use strict\"; // jshint ;_;\n-\n-\n- /* TOOLTIP PUBLIC CLASS DEFINITION\n-  * =============================== */\n-\n-  var Tooltip = function (element, options) {\n-    this.init('tooltip', element, options)\n-  }\n-\n-  Tooltip.prototype = {\n-\n-    constructor: Tooltip\n-\n-  , init: function (type, element, options) {\n-      var eventIn\n-        , eventOut\n-        , triggers\n-        , trigger\n-        , i\n-\n-      this.type = type\n-      this.$element = $(element)\n-      this.options = this.getOptions(options)\n-      this.enabled = true\n-\n-      triggers = this.options.trigger.split(' ')\n-\n-      for (i = triggers.length; i--;) {\n-        trigger = triggers[i]\n-        if (trigger == 'click') {\n-          this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n-        } else if (trigger != 'manual') {\n-          eventIn = trigger == 'hover' ? 'mouseenter' : 'focus'\n-          eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'\n-          this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n-          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n-        }\n-      }\n-\n-      this.options.selector ?\n-        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n-        this.fixTitle()\n-    }\n-\n-  , getOptions: function (options) {\n-      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)\n-\n-      if (options.delay && typeof options.delay == 'number') {\n-        options.delay = {\n-          show: options.delay\n-        , hide: options.delay\n-        }\n-      }\n-\n-      return options\n-    }\n-\n-  , enter: function (e) {\n-      var defaults = $.fn[this.type].defaults\n-        , options = {}\n-        , self\n-\n-      this._options && $.each(this._options, function (key, value) {\n-        if (defaults[key] != value) options[key] = value\n-      }, this)\n-\n-      self = $(e.currentTarget)[this.type](options).data(this.type)\n-\n-      if (!self.options.delay || !self.options.delay.show) return self.show()\n-\n-      clearTimeout(this.timeout)\n-      self.hoverState = 'in'\n-      this.timeout = setTimeout(function() {\n-        if (self.hoverState == 'in') self.show()\n-      }, self.options.delay.show)\n-    }\n-\n-  , leave: function (e) {\n-      var self = $(e.currentTarget)[this.type](this._options).data(this.type)\n-\n-      if (this.timeout) clearTimeout(this.timeout)\n-      if (!self.options.delay || !self.options.delay.hide) return self.hide()\n-\n-      self.hoverState = 'out'\n-      this.timeout = setTimeout(function() {\n-        if (self.hoverState == 'out') self.hide()\n-      }, self.options.delay.hide)\n-    }\n-\n-  , show: function () {\n-      var $tip\n-        , pos\n-        , actualWidth\n-        , actualHeight\n-        , placement\n-        , tp\n-        , e = $.Event('show')\n-\n-      if (this.hasContent() && this.enabled) {\n-        this.$element.trigger(e)\n-        if (e.isDefaultPrevented()) return\n-        $tip = this.tip()\n-        this.setContent()\n-\n-        if (this.options.animation) {\n-          $tip.addClass('fade')\n-        }\n-\n-        placement = typeof this.options.placement == 'function' ?\n-          this.options.placement.call(this, $tip[0], this.$element[0]) :\n-          this.options.placement\n-\n-        $tip\n-          .detach()\n-          .css({ top: 0, left: 0, display: 'block' })\n-\n-        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n-\n-        pos = this.getPosition()\n-\n-        actualWidth = $tip[0].offsetWidth\n-        actualHeight = $tip[0].offsetHeight\n-\n-        switch (placement) {\n-          case 'bottom':\n-            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}\n-            break\n-          case 'top':\n-            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}\n-            break\n-          case 'left':\n-            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}\n-            break\n-          case 'right':\n-            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}\n-            break\n-        }\n-\n-        this.applyPlacement(tp, placement)\n-        this.$element.trigger('shown')\n-      }\n-    }\n-\n-  , applyPlacement: function(offset, placement){\n-      var $tip = this.tip()\n-        , width = $tip[0].offsetWidth\n-        , height = $tip[0].offsetHeight\n-        , actualWidth\n-        , actualHeight\n-        , delta\n-        , replace\n-\n-      $tip\n-        .offset(offset)\n-        .addClass(placement)\n-        .addClass('in')\n-\n-      actualWidth = $tip[0].offsetWidth\n-      actualHeight = $tip[0].offsetHeight\n-\n-      if (placement == 'top' && actualHeight != height) {\n-        offset.top = offset.top + height - actualHeight\n-        replace = true\n-      }\n-\n-      if (placement == 'bottom' || placement == 'top') {\n-        delta = 0\n-\n-        if (offset.left < 0){\n-          delta = offset.left * -2\n-          offset.left = 0\n-          $tip.offset(offset)\n-          actualWidth = $tip[0].offsetWidth\n-          actualHeight = $tip[0].offsetHeight\n-        }\n-\n-        this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')\n-      } else {\n-        this.replaceArrow(actualHeight - height, actualHeight, 'top')\n-      }\n-\n-      if (replace) $tip.offset(offset)\n-    }\n-\n-  , replaceArrow: function(delta, dimension, position){\n-      this\n-        .arrow()\n-        .css(position, delta ? (50 * (1 - delta / dimension) + \"%\") : '')\n-    }\n-\n-  , setContent: function () {\n-      var $tip = this.tip()\n-        , title = this.getTitle()\n-\n-      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n-      $tip.removeClass('fade in top bottom left right')\n-    }\n-\n-  , hide: function () {\n-      var that = this\n-        , $tip = this.tip()\n-        , e = $.Event('hide')\n-\n-      this.$element.trigger(e)\n-      if (e.isDefaultPrevented()) return\n-\n-      $tip.removeClass('in')\n-\n-      function removeWithAnimation() {\n-        var timeout = setTimeout(function () {\n-          $tip.off($.support.transition.end).detach()\n-        }, 500)\n-\n-        $tip.one($.support.transition.end, function () {\n-          clearTimeout(timeout)\n-          $tip.detach()\n-        })\n-      }\n-\n-      $.support.transition && this.$tip.hasClass('fade') ?\n-        removeWithAnimation() :\n-        $tip.detach()\n-\n-      this.$element.trigger('hidden')\n-\n-      return this\n-    }\n-\n-  , fixTitle: function () {\n-      var $e = this.$element\n-      if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {\n-        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n-      }\n-    }\n-\n-  , hasContent: function () {\n-      return this.getTitle()\n-    }\n-\n-  , getPosition: function () {\n-      var el = this.$element[0]\n-      return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {\n-        width: el.offsetWidth\n-      , height: el.offsetHeight\n-      }, this.$element.offset())\n-    }\n-\n-  , getTitle: function () {\n-      var title\n-        , $e = this.$element\n-        , o = this.options\n-\n-      title = $e.attr('data-original-title')\n-        || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n-\n-      return title\n-    }\n-\n-  , tip: function () {\n-      return this.$tip = this.$tip || $(this.options.template)\n-    }\n-\n-  , arrow: function(){\n-      return this.$arrow = this.$arrow || this.tip().find(\".tooltip-arrow\")\n-    }\n-\n-  , validate: function () {\n-      if (!this.$element[0].parentNode) {\n-        this.hide()\n-        this.$element = null\n-        this.options = null\n-      }\n-    }\n-\n-  , enable: function () {\n-      this.enabled = true\n-    }\n-\n-  , disable: function () {\n-      this.enabled = false\n-    }\n-\n-  , toggleEnabled: function () {\n-      this.enabled = !this.enabled\n-    }\n-\n-  , toggle: function (e) {\n-      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this\n-      self.tip().hasClass('in') ? self.hide() : self.show()\n-    }\n-\n-  , destroy: function () {\n-      this.hide().$element.off('.' + this.type).removeData(this.type)\n-    }\n-\n-  }\n-\n-\n- /* TOOLTIP PLUGIN DEFINITION\n-  * ========================= */\n-\n-  var old = $.fn.tooltip\n-\n-  $.fn.tooltip = function ( option ) {\n-    return this.each(function () {\n-      var $this = $(this)\n-        , data = $this.data('tooltip')\n-        , options = typeof option == 'object' && option\n-      if (!data) $this.data('tooltip', (data = new Tooltip(this, options)))\n-      if (typeof option == 'string') data[option]()\n-    })\n-  }\n-\n-  $.fn.tooltip.Constructor = Tooltip\n-\n-  $.fn.tooltip.defaults = {\n-    animation: true\n-  , placement: 'top'\n-  , selector: false\n-  , template: '<div class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n-  , trigger: 'hover focus'\n-  , title: ''\n-  , delay: 0\n-  , html: false\n-  , container: false\n-  }\n-\n-\n- /* TOOLTIP NO CONFLICT\n-  * =================== */\n-\n-  $.fn.tooltip.noConflict = function () {\n-    $.fn.tooltip = old\n-    return this\n-  }\n-\n-}(window.jQuery);"
  } ],
  "sha" : "07e16517abd93525442c7e309f6e9bd333b2ac34",
  "url" : "https://api.github.com/repos/hzuapps/java-web/commits/07e16517abd93525442c7e309f6e9bd333b2ac34",
  "parents" : [ {
    "sha" : "884a5074c0eb05d5650682b6f466fe5fcf3d22f5",
    "url" : "https://api.github.com/repos/hzuapps/java-web/commits/884a5074c0eb05d5650682b6f466fe5fcf3d22f5",
    "html_url" : "https://github.com/hzuapps/java-web/commit/884a5074c0eb05d5650682b6f466fe5fcf3d22f5"
  } ]
}