{
  "committer" : {
    "login" : "web-flow",
    "id" : 19864447,
    "avatar_url" : "https://avatars.githubusercontent.com/u/19864447?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/web-flow",
    "html_url" : "https://github.com/web-flow",
    "followers_url" : "https://api.github.com/users/web-flow/followers",
    "following_url" : "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url" : "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url" : "https://api.github.com/users/web-flow/orgs",
    "repos_url" : "https://api.github.com/users/web-flow/repos",
    "events_url" : "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/web-flow/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 267,
    "additions" : 0,
    "deletions" : 267
  },
  "author" : {
    "login" : "iDream666",
    "id" : 18032727,
    "avatar_url" : "https://avatars.githubusercontent.com/u/18032727?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/iDream666",
    "html_url" : "https://github.com/iDream666",
    "followers_url" : "https://api.github.com/users/iDream666/followers",
    "following_url" : "https://api.github.com/users/iDream666/following{/other_user}",
    "gists_url" : "https://api.github.com/users/iDream666/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/iDream666/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/iDream666/subscriptions",
    "organizations_url" : "https://api.github.com/users/iDream666/orgs",
    "repos_url" : "https://api.github.com/users/iDream666/repos",
    "events_url" : "https://api.github.com/users/iDream666/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/iDream666/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/java-web/commit/6de0ab1e06b88ed4df04711990523711af262db6",
  "commit" : {
    "author" : {
      "name" : "iDream666",
      "email" : "1125458694@qq.com",
      "date" : "2016-10-30T11:48:06Z"
    },
    "committer" : {
      "name" : "GitHub",
      "email" : "noreply@github.com",
      "date" : "2016-10-30T11:48:06Z"
    },
    "message" : "Delete OrganizationAction.java",
    "tree" : {
      "sha" : "a5725b2c2901c3ea37122bf831bae7bc59c8af07",
      "url" : "https://api.github.com/repos/hzuapps/java-web/git/trees/a5725b2c2901c3ea37122bf831bae7bc59c8af07"
    },
    "url" : "https://api.github.com/repos/hzuapps/java-web/git/commits/6de0ab1e06b88ed4df04711990523711af262db6",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/java-web/commits/6de0ab1e06b88ed4df04711990523711af262db6/comments",
  "files" : [ {
    "sha" : "1a2ea3bc3cb92e4cd817f24d3b4e67149ef95274",
    "filename" : "labs/OrganizationAction.java",
    "status" : "removed",
    "additions" : 0,
    "deletions" : 267,
    "changes" : 267,
    "blob_url" : "https://github.com/hzuapps/java-web/blob/a2ff43938bc977d6e4aabbf97ae62c68a32f6a51/labs/OrganizationAction.java",
    "raw_url" : "https://github.com/hzuapps/java-web/raw/a2ff43938bc977d6e4aabbf97ae62c68a32f6a51/labs/OrganizationAction.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/java-web/contents/labs/OrganizationAction.java?ref=a2ff43938bc977d6e4aabbf97ae62c68a32f6a51",
    "patch" : "@@ -1,267 +0,0 @@\n-package indi.xiao.app.organization.action;\r\n-\r\n-import indi.xiao.app.databaseDef.OrganizationPojo;\r\n-import indi.xiao.ext.common.AppBaseAction;\r\n-import indi.xiao.ext.util.JsonUtil;\r\n-import org.slf4j.Logger;\r\n-import org.slf4j.LoggerFactory;\r\n-import org.springframework.stereotype.Controller;\r\n-import org.springframework.web.bind.annotation.RequestMapping;\r\n-import org.springframework.web.bind.annotation.RequestParam;\r\n-import indi.xiao.app.organization.OrganizationService;\r\n-\r\n-import javax.annotation.Resource;\r\n-import javax.servlet.http.HttpServletRequest;\r\n-import javax.servlet.http.HttpServletResponse;\r\n-import java.util.Arrays;\r\n-import java.util.HashMap;\r\n-import java.util.List;\r\n-import java.util.Map;\r\n-\r\n-/**\r\n- * 组织处理\r\n- *\r\n- * @author zhongyuan.yang\r\n- */\r\n-@Controller\r\n-@RequestMapping(\"/organization\")\r\n-public class OrganizationAction extends AppBaseAction {\r\n-    public static Logger logger = LoggerFactory.getLogger(OrganizationAction.class);\r\n-\r\n-    @Resource(name = \"OrganizationService\")\r\n-    private OrganizationService OrganizationService;\r\n-    \r\n-\r\n-    /**\r\n-     * 修改组织对象\r\n-     *\r\n-     * @param params   HashMap<String,String>\r\n-     * @param pojo     OrganizationPojo\r\n-     * @param request  HttpServletRequest\r\n-     * @param response HttpServletResponse\r\n-     */\r\n-    @RequestMapping(\"doUpdateOrg\")\r\n-    public void doUpdateOrg(@RequestParam HashMap<String, String> params, OrganizationPojo pojo, HttpServletRequest request, HttpServletResponse response) {\r\n-\r\n-        //参数检查\r\n-        String id = params.get(\"id\");\r\n-        String code = params.get(\"code\");\r\n-\r\n-        if (code == null || code.length() == 0) {\r\n-            logger.error(\"OrganizationAction --- doUpdateOrg error . \" + JsonUtil.genInfoJsonStr(pojo), \"参数异常，没有传入组织码code。\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"参数异常，没有传入组织码code。\"),response);\r\n-            return;\r\n-        }\r\n-        if (id==null && id.length() <= 0) {\r\n-            logger.error(\"OrganizationAction --- doUpdateOrg error . \" + JsonUtil.genInfoJsonStr(pojo), \"参数异常，没有传入唯一标志id。\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"参数异常，没有传入唯一标志id。\"), response);\r\n-            return;\r\n-        }\r\n-        try {\r\n-\r\n-            // 获取更新前的组织数据\r\n-            if(OrganizationService.selectById(pojo.getId())==null) {\r\n-                postStrToClient(JsonUtil.genInfoJsonStr(false, \"所要更新组织不存在\", pojo), response);\r\n-                return;\r\n-            }\r\n-            // 更新组织数据\r\n-            OrganizationService.updateById(pojo);\r\n-\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(true, \"组织修改成功。\", pojo), response);\r\n-            return;\r\n-        } catch (Exception x) {\r\n-            logger.error(\"OrganizationAction --- doSave error . \" + JsonUtil.genInfoJsonStr(pojo), x);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"操作由于异常失败。\", pojo), response);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 添加组织对象\r\n-     *\r\n-     * @param params   HashMap<String,String>\r\n-     * @param pojo     OrganizationPojo\r\n-     * @param request  HttpServletRequest\r\n-     * @param response HttpServletResponse\r\n-     */\r\n-    @RequestMapping(\"doAddOrg\")\r\n-    public void doAddOrg(@RequestParam HashMap<String, String> params, OrganizationPojo pojo, HttpServletRequest request, HttpServletResponse response) {\r\n-\r\n-        // 登陆用户所属prjCode的获取\r\n-        String prjCode = params.get(\"u_prjCode\");\r\n-        // 必须传入参数\r\n-        if (prjCode == null || \"\".equals(prjCode)) {\r\n-            logger.error(\"OrganizationAction --- doSave error . 参数异常，没有传入服务标识\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"参数异常，没有传入服务标识\", prjCode), response);\r\n-            return;\r\n-        }\r\n-\r\n-        //参数检查\r\n-        String code = pojo.getCode();\r\n-        String pcode = pojo.getPcode();\r\n-\r\n-        if (code == null || \"\".equals(code)) {\r\n-            logger.error(\"OrganizationAction --- doAddOrg error . \" + JsonUtil.genInfoJsonStr(pojo), \"参数异常，没有传入组织码code。\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"参数异常，没有传入组织码code。\"), response);\r\n-            return;\r\n-        }\r\n-\r\n-        if (pcode==null && \"\".equals(pcode)) {\r\n-            logger.error(\"OrganizationAction --- doAddOrg error . \" + JsonUtil.genInfoJsonStr(pojo), \"参数异常，没有传入父组织码pcode。\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"参数异常，没有传入父组织码pcode\"), response);\r\n-            return;\r\n-        }\r\n-\r\n-        try {\r\n-\r\n-            // 是否已存在该组织\r\n-            if(OrganizationService.exist(pojo.getCode())){\r\n-                postStrToClient(JsonUtil.genInfoJsonStr(false, \"该组织已存在\", pojo), response);\r\n-                return;\r\n-            }\r\n-            // 新建\r\n-            OrganizationService.insert(pojo);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(true, \"组织新建成功。\", pojo), response);\r\n-        } catch (Exception x) {\r\n-            x.printStackTrace();\r\n-            logger.error(\"OrganizationAction --- doSave error . \" + JsonUtil.genInfoJsonStr(pojo), x);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"操作由于异常失败。\", pojo), response);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 更新组织关系的顺序关系\r\n-     *\r\n-     * @param params   HashMap<String,String>\r\n-     * @param pojo     OrganizationPojo\r\n-     * @param request  HttpServletRequest\r\n-     * @param response HttpServletResponse\r\n-     */\r\n-    @RequestMapping(\"doUpdateOrgTree\")\r\n-    public void doUpdateOrgTree(@RequestParam HashMap<String, String> params, OrganizationPojo pojo, HttpServletRequest request, HttpServletResponse response){\r\n-\r\n-        String ids = params.get(\"ids\");\r\n-        String midIds = params.get(\"midIds\");\r\n-        if (midIds.length() <=0 || ids.length() <= 0) {\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"未重排组织。。\", ids), response);\r\n-            return;\r\n-        }\r\n-        String minSort = params.get(\"minSort\");\r\n-        if (minSort==null||!minSort.matches(\"\\\\d+(.\\\\d+)?\")) {\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"未知的排序参数。。\", minSort), response);\r\n-            return;\r\n-        }\r\n-\r\n-        String pcode = params.get(\"pcode\");\r\n-        if (pcode == null || \"\".equals(pcode)) {\r\n-            logger.error(\"OrganizationAction --- doUpdateOrgTree error . 参数异常，没有传入父组织码\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"参数异常，没有传入父组织码\", pcode), response);\r\n-            return;\r\n-        }\r\n-\r\n-        try {\r\n-            OrganizationService.updateOrgTreeByIds(midIds, ids, pcode, minSort);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(true, \"组织关系更新成功。\", ids), response);\r\n-            return;\r\n-        } catch (Exception x) {\r\n-            logger.error(\"OrganizationAction --- doUpdateOrgTree error . \" + ids, x);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"操作由于异常失败。\", ids), response);\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * 删除组织对象\r\n-     *\r\n-     * @param params   HashMap<String,String>\r\n-     * @param pojo     OrganizationPojo\r\n-     * @param request  HttpServletRequest\r\n-     * @param response HttpServletResponse\r\n-     */\r\n-    @RequestMapping(\"doDelete\")\r\n-    public void doDelete(@RequestParam HashMap<String, String> params, OrganizationPojo pojo, HttpServletRequest request, HttpServletResponse response) {\r\n-\r\n-        String ids = params.get(\"ids\");\r\n-        if (ids.length() <= 0) {\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"请选择要删除的数据。。\", ids), response);\r\n-            return;\r\n-        }\r\n-        try {\r\n-\r\n-            String[] ids_ = ids.split(\",\");\r\n-            List idlist = Arrays.asList(ids_);\r\n-            for (OrganizationPojo pojos : OrganizationService.selectByIds(idlist)) {\r\n-                // 更新组织disable为1，逻辑删除子组织\r\n-                OrganizationService.updataDisable(idlist);\r\n-                OrganizationService.deleteRelation(pojos.getCode());\r\n-            }\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(true, \"数据删除成功。\", ids), response);\r\n-            return;\r\n-        } catch (Exception x) {\r\n-            logger.error(\"OrganizationAction --- doDelete error . \" + ids, x);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"操作由于异常失败。\", ids), response);\r\n-        }\r\n-    }\r\n-\r\n-    /**\r\n-     * 拉取组织树信息\r\n-     * 显示在页面上\r\n-     *\r\n-     * @param params\r\n-     * @param pojo\r\n-     * @param request\r\n-     * @param response\r\n-     */\r\n-    @RequestMapping(\"doSelectAllOrgTree\")\r\n-    public void doSelectAllOrgTree(@RequestParam HashMap<String, String> params, OrganizationPojo pojo, HttpServletRequest request, HttpServletResponse response) {\r\n-\r\n-        try {\r\n-\r\n-            pojo.setDisable(\"0\");\r\n-            List<OrganizationPojo> pojoList = OrganizationService.select(pojo);\r\n-\r\n-            List<OrganizationPojo> orgTree = OrganizationService.getOrgTree(pojoList,\"-1\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(orgTree), response);\r\n-        } catch (Exception x) {\r\n-            //执行过程中出现异常，则记录log，并返回错误消息\r\n-            logger.error(\"OrganizationAction --- doSelectAllOrgTree error . \" + JsonUtil.genInfoJsonStr(pojo), x);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"操作由于异常失败。\", pojo), response);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 拉取组织树信息(查询结果）\r\n-     * 显示在页面上\r\n-     *\r\n-     * @param params\r\n-     * @param pojo\r\n-     * @param request\r\n-     * @param response\r\n-     */\r\n-    @RequestMapping(\"doSelectOneOrgTree\")\r\n-    public void doSelectOneOrgTree(@RequestParam HashMap<String, String> params, OrganizationPojo pojo, HttpServletRequest request, HttpServletResponse response) {\r\n-\r\n-\r\n-        //组织名称\r\n-        String orgName = params.get(\"orgName\");\r\n-        if (orgName == null || orgName.length() == 0) {\r\n-            logger.error(\"OrganizationAction --- doSelectOneOrgTree error . \" + JsonUtil.genInfoJsonStr(pojo), \"参数异常，没有传入组织名称。\");\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"参数异常，没有传入组织名称。\"), response);\r\n-            return;\r\n-        }\r\n-\r\n-        try {\r\n-\r\n-            pojo.setDisable(\"0\");\r\n-            List<OrganizationPojo> pojoList = OrganizationService.select(pojo);\r\n-\r\n-            List<OrganizationPojo> orgTree = OrganizationService.getOrgTreeByName(pojoList,orgName);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(orgTree), response);\r\n-        } catch (Exception x) {\r\n-            //执行过程中出现异常，则记录log，并返回错误消息\r\n-            logger.error(\"OrganizationAction --- doSelectOneOrgTree error . \" + JsonUtil.genInfoJsonStr(pojo), x);\r\n-            postStrToClient(JsonUtil.genInfoJsonStr(false, \"操作由于异常失败。\", pojo), response);\r\n-        }\r\n-    }\r\n-}\r"
  } ],
  "sha" : "6de0ab1e06b88ed4df04711990523711af262db6",
  "url" : "https://api.github.com/repos/hzuapps/java-web/commits/6de0ab1e06b88ed4df04711990523711af262db6",
  "parents" : [ {
    "sha" : "a2ff43938bc977d6e4aabbf97ae62c68a32f6a51",
    "url" : "https://api.github.com/repos/hzuapps/java-web/commits/a2ff43938bc977d6e4aabbf97ae62c68a32f6a51",
    "html_url" : "https://github.com/hzuapps/java-web/commit/a2ff43938bc977d6e4aabbf97ae62c68a32f6a51"
  } ]
}