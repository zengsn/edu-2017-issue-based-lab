{
  "comments" : 0,
  "closed_at" : null,
  "assignees" : [ ],
  "created_at" : "2016-09-11T14:33:05Z",
  "title" : "实验六：JDBC编程",
  "body" : "# 1. 三层架构\r\n![image](https://cloud.githubusercontent.com/assets/627946/20337409/eb6877b2-ac0b-11e6-9f9b-ffd636c86f1c.png)\r\n\r\n# 2. 加载驱动\r\n```   \r\nClass.forName(\"\");\r\n```   \r\n注意：驱动程序应该到对应的数据库厂商网站下载，如：PostgreSQL https://jdbc.postgresql.org/download.html 。\r\nTips：准备面试还应该了解JDBC驱动的4种类型。\r\n\r\n# 3. 连接数据库\r\n```  \r\nString url = \"jdbc:postgresql://<database_host>:<port>/<database_name>\";\r\nConnection con = DriverManager.getConnection(url, \"userID\", \"password\"); \r\n```  \r\n好的做法是保存在常量中，例如：\r\n```  \r\nprivate final String url = \"jdbc:postgresql://localhost/dvdrental\";\r\nprivate final String user = \"postgres\";\r\nprivate final String password = \"<add your password>\";\r\n```  \r\n详细的连接代码：\r\n```   \r\npublic Connection connect() {\r\n        Connection conn = null;\r\n        try {\r\n            conn = DriverManager.getConnection(url, user, password);\r\n            System.out.println(\"Connected to the PostgreSQL server successfully.\");\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n \r\n        return conn;\r\n    }\r\n```   \r\n更好的做法是将配置保存在配置文件中，如：jdbc.properties，可方便数据库连接管理，如切换开发与生产数据库。Hibernate等框架也采用这种方法。（问：Hibernate是怎么配置的？）\r\n\r\n# 4. 准备SQL语句\r\n```  \r\nselect * from TABLE_NAME;\r\ninsert into ... ;\r\nupdate ...;\r\ndelete ...;\r\n```  \r\nhttp://www.w3school.com.cn/sql/ \r\n\r\n# 5. 查询数据\r\n```   \r\npublic int getActorCount() {\r\n        String SQL = \"SELECT count(*) FROM actor\";\r\n        int count = 0;\r\n \r\n        try (Connection conn = connect();\r\n                Statement stmt = conn.createStatement();\r\n                ResultSet rs = stmt.executeQuery(SQL)) {\r\n            rs.next();\r\n            count = rs.getInt(1);\r\n        } catch (SQLException ex) {\r\n            System.out.println(ex.getMessage());\r\n        }\r\n \r\n        return count;\r\n    }\r\n```   \r\n\r\n# 6. 插入数据\r\n```  \r\npublic long insertActor(Actor actor) {\r\n        String SQL = \"INSERT INTO actor(first_name,last_name) \"\r\n                + \"VALUES(?,?)\";\r\n \r\n        long id = 0;\r\n \r\n        try (Connection conn = connect();\r\n                PreparedStatement pstmt = conn.prepareStatement(SQL,\r\n                Statement.RETURN_GENERATED_KEYS)) {\r\n \r\n            pstmt.setString(1, actor.getFirstName());\r\n            pstmt.setString(2, actor.getLastName());\r\n \r\n            int affectedRows = pstmt.executeUpdate();\r\n            // check the affected rows \r\n            if (affectedRows > 0) {\r\n                // get the ID back\r\n                try (ResultSet rs = pstmt.getGeneratedKeys()) {\r\n                    if (rs.next()) {\r\n                        id = rs.getLong(1);\r\n                    }\r\n                } catch (SQLException ex) {\r\n                    System.out.println(ex.getMessage());\r\n                }\r\n            }\r\n        } catch (SQLException ex) {\r\n            System.out.println(ex.getMessage());\r\n        }\r\n        return id;\r\n    } \r\n```  \r\n\r\n# 7. 修改数据\r\n```   \r\nTODO\r\n```   \r\n\r\n# 8. 删除数据\r\n```   \r\nTODO\r\n```   \r\n\r\n\r\n# 参考文献\r\n1. http://www.postgresqltutorial.com/postgresql-jdbc/ \r\n2. http://www.w3school.com.cn/sql/ \r\n3. http://www.sql-tutorial.net/ ",
  "url" : "https://api.github.com/repos/hzuapps/java-web/issues/7",
  "labels" : [ {
    "id" : 438290621,
    "url" : "https://api.github.com/repos/hzuapps/java-web/labels/%E5%AE%9E%E9%AA%8C",
    "name" : "实验",
    "color" : "128A0C",
    "default" : false
  } ],
  "closed_by" : null,
  "labels_url" : "https://api.github.com/repos/hzuapps/java-web/issues/7/labels{/name}",
  "number" : 7,
  "milestone" : null,
  "updated_at" : "2016-11-16T07:20:47Z",
  "events_url" : "https://api.github.com/repos/hzuapps/java-web/issues/7/events",
  "html_url" : "https://github.com/hzuapps/java-web/issues/7",
  "comments_url" : "https://api.github.com/repos/hzuapps/java-web/issues/7/comments",
  "repository_url" : "https://api.github.com/repos/hzuapps/java-web",
  "id" : 176246637,
  "state" : "open",
  "assignee" : null,
  "locked" : false,
  "user" : {
    "login" : "zengsn",
    "id" : 627946,
    "avatar_url" : "https://avatars.githubusercontent.com/u/627946?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zengsn",
    "html_url" : "https://github.com/zengsn",
    "followers_url" : "https://api.github.com/users/zengsn/followers",
    "following_url" : "https://api.github.com/users/zengsn/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zengsn/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zengsn/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zengsn/subscriptions",
    "organizations_url" : "https://api.github.com/users/zengsn/orgs",
    "repos_url" : "https://api.github.com/users/zengsn/repos",
    "events_url" : "https://api.github.com/users/zengsn/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zengsn/received_events",
    "type" : "User",
    "site_admin" : false
  }
}