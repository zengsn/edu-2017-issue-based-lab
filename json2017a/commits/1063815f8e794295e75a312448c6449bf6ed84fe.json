{
  "committer" : {
    "login" : "Lee20170303",
    "id" : 26154841,
    "avatar_url" : "https://avatars1.githubusercontent.com/u/26154841?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/Lee20170303",
    "html_url" : "https://github.com/Lee20170303",
    "followers_url" : "https://api.github.com/users/Lee20170303/followers",
    "following_url" : "https://api.github.com/users/Lee20170303/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Lee20170303/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Lee20170303/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Lee20170303/subscriptions",
    "organizations_url" : "https://api.github.com/users/Lee20170303/orgs",
    "repos_url" : "https://api.github.com/users/Lee20170303/repos",
    "events_url" : "https://api.github.com/users/Lee20170303/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Lee20170303/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 245,
    "additions" : 245,
    "deletions" : 0
  },
  "author" : {
    "login" : "Lee20170303",
    "id" : 26154841,
    "avatar_url" : "https://avatars1.githubusercontent.com/u/26154841?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/Lee20170303",
    "html_url" : "https://github.com/Lee20170303",
    "followers_url" : "https://api.github.com/users/Lee20170303/followers",
    "following_url" : "https://api.github.com/users/Lee20170303/following{/other_user}",
    "gists_url" : "https://api.github.com/users/Lee20170303/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/Lee20170303/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/Lee20170303/subscriptions",
    "organizations_url" : "https://api.github.com/users/Lee20170303/orgs",
    "repos_url" : "https://api.github.com/users/Lee20170303/repos",
    "events_url" : "https://api.github.com/users/Lee20170303/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/Lee20170303/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs-2017/commit/1063815f8e794295e75a312448c6449bf6ed84fe",
  "commit" : {
    "author" : {
      "name" : "Lee20170303",
      "email" : "1805407781@qq.com",
      "date" : "2017-06-12T12:13:12Z"
    },
    "committer" : {
      "name" : "Lee20170303",
      "email" : "1805407781@qq.com",
      "date" : "2017-06-12T12:13:12Z"
    },
    "message" : "#4 #146 第四次作业",
    "tree" : {
      "sha" : "c22944c76d57cac064f938a5e705d7a7916e33e7",
      "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/git/trees/c22944c76d57cac064f938a5e705d7a7916e33e7"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/git/commits/1063815f8e794295e75a312448c6449bf6ed84fe",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/1063815f8e794295e75a312448c6449bf6ed84fe/comments",
  "files" : [ {
    "sha" : "90491915229feb05cf184de432d0db62f8ec0fa6",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903235/Net1414080903235_NewView.java",
    "status" : "added",
    "additions" : 245,
    "deletions" : 0,
    "changes" : 245,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/1063815f8e794295e75a312448c6449bf6ed84fe/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903235/Net1414080903235_NewView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/1063815f8e794295e75a312448c6449bf6ed84fe/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903235/Net1414080903235_NewView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903235/Net1414080903235_NewView.java?ref=1063815f8e794295e75a312448c6449bf6ed84fe",
    "patch" : "@@ -0,0 +1,245 @@\n+/**\n+ * Created by Administrator on 2017/6/10.\n+ */\n+\n+\n+import android.app.AlertDialog;\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Color;\n+import android.graphics.Paint;\n+import android.util.AttributeSet;\n+import android.view.LayoutInflater;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.widget.TextView;\n+\n+import edu.hzuapps.androidlabs.homeworks.net1414080903235.Net1414080903235Activity;\n+\n+\n+public class Net1414080903235_NewView extends View{\n+    // 单元格的宽度和高度\n+    private float width;\n+    private float height;\n+\n+    private int checkPoint = 1; // 当前关卡\n+\n+    //private Number number = new Number();\n+    private Net1414080903235_Number net1414080903235_number = new Net1414080903235_Number() {\n+        @Override\n+        public int intValue() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public long longValue() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public float floatValue() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public double doubleValue() {\n+            return 0;\n+        }\n+    };\n+\n+\n+    public Net1414080903235_NewView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    public Net1414080903235_NewView(Net1414080903235Activity mainActivity) {\n+        super(mainActivity);\n+    }\n+\n+    @Override\n+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n+        this.width = w / 9f;\n+        this.height = h / 10f;\n+        super.onSizeChanged(w, h, oldw, oldh);\n+    }\n+\n+    // 当Android系统需要绘制一个View对象时，就会调用该对象的onDraw\n+    @Override\n+    protected void onDraw(Canvas canvas) {\n+        // 画背景\n+        Paint backgroundPaint = new Paint();\n+        backgroundPaint.setColor(getResources().getColor(R.color.colorBackground));\n+        canvas.drawRect(0,0,getWidth(),getHeight(),backgroundPaint);\n+\n+        Paint darkPaint = new Paint();\n+        darkPaint.setColor(getResources().getColor(R.color.colorDark));\n+\n+        Paint hilitePaint = new Paint();\n+        hilitePaint.setColor(getResources().getColor(R.color.colorHilite));\n+\n+        Paint lightPaint = new Paint();\n+        lightPaint.setColor(getResources().getColor(R.color.colorlight));\n+\n+        // 绘制9X9的网络格\n+        // 两条距离为1的直线，视觉上会有割裂的效果\n+        for (int i = 0; i < 9; i++) {\n+            canvas.drawLine(0, i*height, getWidth(), i*height, lightPaint);\n+            canvas.drawLine(0, i*height+1, getWidth(), i*height+1, hilitePaint);\n+            canvas.drawLine(i*width, 0, i*width, getHeight(), lightPaint);\n+            canvas.drawLine(i*width+1, 0, i*width+1, getHeight(), hilitePaint);\n+        }\n+\n+        // 绘制3X3的网络格\n+        for (int i = 0; i < 10; i++) {\n+            if (i % 3 != 0) {\n+                continue;\n+            }\n+            canvas.drawLine(0, i*height, getWidth(), i*height, darkPaint);\n+            canvas.drawLine(0, i*height+1, getWidth(), i*height+1, hilitePaint);\n+            canvas.drawLine(i*width, 0, i*width, getHeight(), darkPaint);\n+            //canvas.drawLine(i*width+1, 0, i*width+1, getHeight(), hilitePaint);\n+            canvas.drawLine(i*width, 1, i*width, getHeight(), hilitePaint);\n+        }\n+        /*这里是刚开始画的，固定了格子大小\n+        public class Draw {\n+    private float height=50;\n+    private float width=50;\n+    private float Height=450;\n+    private float Width=450;\n+\n+    protected void OnDraw(Canvas canvas){\n+        Paint lightPaint= new Paint();\n+        lightPaint.setColor(getResources().getColor(R.color.lightPaint));\n+        Paint darkPaint=new Paint();\n+        darkPaint.setColor(getResources().getColor(R.color.darkPaint));\n+        for (int i = 0; i < 9; i++) {\n+           canvas.drawLine(i*width,0,i*width,Height,lightPaint);\n+            canvas.drawLine(0,i*height,Width,i*height,lightPaint);\n+        }\n+        for(int i=0;i<10;i++){\n+            if(i%3!=0){\n+                canvas.drawLine(i*width,0,i*width,Height,darkPaint);\n+                canvas.drawLine(0,i*height,Width,i*height,darkPaint);\n+            }\n+        }\n+\n+    }\n+\n+        * */\n+\n+        // 绘制数字\n+        Paint numberPaint = new Paint();\n+        numberPaint.setColor(Color.BLACK);\n+        numberPaint.setStyle(Paint.Style.STROKE);\n+        numberPaint.setTextSize(height*0.75f);\n+        numberPaint.setTextAlign(Paint.Align.CENTER);\n+        numberPaint.setAntiAlias(true); // 抗锯齿\n+\n+        /**\n+         * 数字居中位置\n+         * x轴居中比较容易计算\n+         * y轴居中的计算，依赖于FontMetrics，大家很容易百度到相关的知识\n+         */\n+        Paint.FontMetrics fm = numberPaint.getFontMetrics();\n+        float x = width / 2;\n+        float y = height / 2 - (fm.ascent + fm.descent) / 2;\n+\n+//        canvas.drawText(\"1\", 0 * width + x, 0 * height + y, numberPaint);\n+//        canvas.drawText(\"2\", 1 * width + x, 1 * height + y, numberPaint);\n+//        canvas.drawText(\"3\", 2 * width + x, 2 * height + y, numberPaint);\n+//        canvas.drawText(\"4\", 3 * width + x, 3 * height + y, numberPaint);\n+//        canvas.drawText(\"5\", 4 * width + x, 4 * height + y, numberPaint);\n+\n+        /**\n+         * 根据Number类中的数组，绘制数字\n+         */\n+        for (int i = 0; i < 9; i++) {\n+            for (int j = 0; j < 9; j++) {\n+                canvas.drawText(net1414080903235_number.getTileString(i,j), i*width+x, j*height+y, numberPaint);\n+            }\n+        }\n+\n+        /**\n+         * 绘制一个刷新文字\n+         */\n+        canvas.drawText(\"刷新\",4*width+x,9*height+y,numberPaint);\n+\n+        /**\n+         * 绘制关卡文字\n+         */\n+        Paint strPaint = new Paint();\n+        strPaint.setTextSize(height*0.5f);\n+        strPaint.setAntiAlias(true); // 抗锯齿\n+        canvas.drawText(\"第\" + checkPoint + \"关\",6*width+x,9*height+y,strPaint);\n+\n+        super.onDraw(canvas);\n+    }\n+\n+    /**\n+     * 获取按下的数字\n+     */\n+    @Override\n+    public boolean onTouchEvent(MotionEvent event) {\n+        super.onTouchEvent(event);\n+        if (event.getAction() == MotionEvent.ACTION_DOWN){\n+            int selectedX = (int)(event.getX() / width);\n+            int selectedY = (int)(event.getY() / height);\n+\n+            StringBuffer sb = new StringBuffer();\n+\n+            if (selectedY < 9){\n+                int used[] = net1414080903235_number.getUsedTilesByCoor(selectedX,selectedY);\n+                for (int i = 0; i < used.length; i++) {\n+                    sb.append(used[i]);\n+                }\n+                LayoutInflater layoutInflater = LayoutInflater.from(this.getContext());\n+                View layoutView = layoutInflater.inflate(R.layout.dialog,null);\n+                TextView textView = (TextView) layoutView.findViewById(R.id.usedTextId);\n+                textView.setText(\"该位置不可用数字 = \" + sb.toString());\n+                AlertDialog.Builder builder = new AlertDialog.Builder(this.getContext());\n+                builder.setView(layoutView);\n+                AlertDialog dialog = builder.create();\n+                dialog.show();\n+            }\n+\n+            //Toast.makeText(getContext(), \"ACTION_DOWN = \" + used, Toast.LENGTH_SHORT).show();\n+            if (selectedY == 9){\n+                if (selectedX>=3 && selectedX<=5){\n+                    //Toast.makeText(getContext(), \"ACTION_DOWN = 刷新\",Toast.LENGTH_SHORT).show();\n+                    if (checkPoint == 1){\n+                        checkPoint = 2;\n+                    } else if (checkPoint == 2){\n+                        checkPoint = 1;\n+                    }\n+                    //Toast.makeText(getContext(), \"checkPoint = \" + checkPoint, Toast.LENGTH_SHORT).show();\n+                    net1414080903235_number = new Net1414080903235_Number() {\n+                        @Override\n+                        public int intValue() {\n+                            return 0;\n+                        }\n+\n+                        @Override\n+                        public long longValue() {\n+                            return 0;\n+                        }\n+\n+                        @Override\n+                        public float floatValue() {\n+                            return 0;\n+                        }\n+\n+                        @Override\n+                        public double doubleValue() {\n+                            return 0;\n+                        }\n+                    };\n+                    invalidate(); // onDraw()\n+                }\n+            }\n+\n+        }\n+        return true;\n+    }\n+\n+\n+}\n\\ No newline at end of file"
  } ],
  "sha" : "1063815f8e794295e75a312448c6449bf6ed84fe",
  "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/1063815f8e794295e75a312448c6449bf6ed84fe",
  "parents" : [ {
    "sha" : "0bb2eb1773e03de79bc021c6eff4f1ce78775b2b",
    "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/0bb2eb1773e03de79bc021c6eff4f1ce78775b2b",
    "html_url" : "https://github.com/hzuapps/android-labs-2017/commit/0bb2eb1773e03de79bc021c6eff4f1ce78775b2b"
  } ]
}