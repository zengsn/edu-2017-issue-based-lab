{
  "committer" : null,
  "stats" : {
    "total" : 684,
    "additions" : 684,
    "deletions" : 0
  },
  "author" : null,
  "html_url" : "https://github.com/hzuapps/android-labs-2017/commit/34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
  "commit" : {
    "author" : {
      "name" : "jackccc",
      "email" : "mo_1905@163.com",
      "date" : "2017-04-28T07:05:41Z"
    },
    "committer" : {
      "name" : "jackccc",
      "email" : "mo_1905@163.com",
      "date" : "2017-04-28T07:05:41Z"
    },
    "message" : "#2#12 第二次作业",
    "tree" : {
      "sha" : "d7783dc6488399677317a49e664c1a3f03f1a01b",
      "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/git/trees/d7783dc6488399677317a49e664c1a3f03f1a01b"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/git/commits/34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/comments",
  "files" : [ {
    "sha" : "6427dd6aa76fa1c562859fd30b649edd27f2c1f2",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Group.java",
    "status" : "added",
    "additions" : 59,
    "deletions" : 0,
    "changes" : 59,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Group.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Group.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Group.java?ref=34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "patch" : "@@ -0,0 +1,59 @@\n+package edu.hzuapps.androidlabs.homeworks.net1414080903120.model;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by Lenovo on 2017/3/17 0017.\n+ * 聊天群\n+ */\n+\n+public class Group {\n+    private String name;   //群名字\n+    private String id;    //群id\n+    private Set<User> users;   //用户\n+    private User adminUser;   //群管理员\n+\n+    public Group() {\n+    }\n+\n+    public Group(User adminUser, String id, String name, Set<User> users) {\n+        this.adminUser = adminUser;\n+        this.id = id;\n+        this.name = name;\n+        this.users = users;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Set<User> getUsers() {\n+        return users;\n+    }\n+\n+    public void setUsers(Set<User> users) {\n+        this.users = users;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Group{\" +\n+                \"id='\" + id + '\\'' +\n+                \", name='\" + name + '\\'' +\n+                \", users=\" + users +\n+                '}';\n+    }\n+\n+}"
  }, {
    "sha" : "2a7e976288cd9fd6194b2a22aaf54ecfb6b079d6",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Message.java",
    "status" : "added",
    "additions" : 9,
    "deletions" : 0,
    "changes" : 9,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Message.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Message.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/Message.java?ref=34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "patch" : "@@ -0,0 +1,9 @@\n+package edu.hzuapps.androidlabs.homeworks.net1414080903120.model;\n+\n+/**\n+ * Created by Lenovo on 2017/3/17 0017.\n+ */\n+\n+public abstract class Message {\n+\n+}"
  }, {
    "sha" : "0b16a1f455e7ba4c635fed556a60b03cf890e9c4",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/TextMessage.java",
    "status" : "added",
    "additions" : 9,
    "deletions" : 0,
    "changes" : 9,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/TextMessage.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/TextMessage.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/TextMessage.java?ref=34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "patch" : "@@ -0,0 +1,9 @@\n+package edu.hzuapps.androidlabs.homeworks.net1414080903120.model;\n+\n+\n+/**\n+ * Created by Lenovo on 2017/3/17 0017.\n+ */\n+\n+public class TextMessage extends Message {\n+}"
  }, {
    "sha" : "06d793a9caf43c0a9aeae73dd901f54632076828",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/User.java",
    "status" : "added",
    "additions" : 97,
    "deletions" : 0,
    "changes" : 97,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/User.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/User.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/model/User.java?ref=34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "patch" : "@@ -0,0 +1,97 @@\n+package edu.hzuapps.androidlabs.homeworks.net1414080903120.model;\n+\n+/**\n+ * Created by Lenovo on 2017/3/17 0017.\n+ */\n+\n+public class User {\n+    private String name;   //用户名字\n+    private String id;     //用户id\n+    private String headPic;   //用户头像\n+    private Type type;     //用户类型\n+\n+    public User() {\n+    }\n+\n+    public User(String headPic, String id, String name, Type type) {\n+        this.headPic = headPic;\n+        this.id = id;\n+        this.name = name;\n+        this.type = type;\n+    }\n+\n+    public String getHeadPic() {\n+        return headPic;\n+    }\n+\n+    public void setHeadPic(String headPic) {\n+        this.headPic = headPic;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Type getType() {\n+        return type;\n+    }\n+\n+    public void setType(Type type) {\n+        this.type = type;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"User{\" +\n+                \"headPic='\" + headPic + '\\'' +\n+                \", name='\" + name + '\\'' +\n+                \", id='\" + id + '\\'' +\n+                \", type=\" + type +\n+                '}';\n+    }\n+\n+    public static enum Type {\n+        ORDINARY(\"普通用户\", 1), ADMIN(\"管理员\", 1);\n+        private String name;\n+        private int index;\n+        private Type(String name, int index) {\n+            this.name = name;\n+            this.index = index;\n+        }\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        User user = (User) o;\n+\n+        if (!name.equals(user.name)) return false;\n+        if (!id.equals(user.id)) return false;\n+        if (!headPic.equals(user.headPic)) return false;\n+        return type == user.type;\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = name.hashCode();\n+        result = 31 * result + id.hashCode();\n+        result = 31 * result + headPic.hashCode();\n+        result = 31 * result + type.hashCode();\n+        return result;\n+    }\n+}"
  }, {
    "sha" : "c8a0f807d97a1f789138c93706c8d7b7703424ca",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/ui/Net1414080903120LoginActivity.java",
    "status" : "added",
    "additions" : 354,
    "deletions" : 0,
    "changes" : 354,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/ui/Net1414080903120LoginActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/ui/Net1414080903120LoginActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/ui/Net1414080903120LoginActivity.java?ref=34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "patch" : "@@ -0,0 +1,354 @@\n+package edu.hzuapps.androidlabs.homeworks.net1414080903120.ui;\n+\n+import android.animation.Animator;\n+import android.animation.AnimatorListenerAdapter;\n+import android.annotation.TargetApi;\n+import android.content.pm.PackageManager;\n+import android.support.annotation.NonNull;\n+import android.support.design.widget.Snackbar;\n+import android.support.v7.app.AppCompatActivity;\n+import android.app.LoaderManager.LoaderCallbacks;\n+\n+import android.content.CursorLoader;\n+import android.content.Loader;\n+import android.database.Cursor;\n+import android.net.Uri;\n+import android.os.AsyncTask;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.provider.ContactsContract;\n+import android.text.TextUtils;\n+import android.view.KeyEvent;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.view.inputmethod.EditorInfo;\n+import android.widget.ArrayAdapter;\n+import android.widget.AutoCompleteTextView;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import edu.hzuapps.androidlabs.R;\n+\n+import static android.Manifest.permission.READ_CONTACTS;\n+\n+/**\n+ * A login screen that offers login via email/password.\n+ */\n+public class Net1414080903120LoginActivity extends AppCompatActivity implements LoaderCallbacks<Cursor> {\n+\n+    /**\n+     * Id to identity READ_CONTACTS permission request.\n+     */\n+    private static final int REQUEST_READ_CONTACTS = 0;\n+\n+    /**\n+     * A dummy authentication store containing known user names and passwords.\n+     * TODO: remove after connecting to a real authentication system.\n+     */\n+    private static final String[] DUMMY_CREDENTIALS = new String[]{\n+            \"foo@example.com:hello\", \"bar@example.com:world\"\n+    };\n+    /**\n+     * Keep track of the login task to ensure we can cancel it if requested.\n+     */\n+    private UserLoginTask mAuthTask = null;\n+\n+    // UI references.\n+    private AutoCompleteTextView mEmailView;\n+    private EditText mPasswordView;\n+    private View mProgressView;\n+    private View mLoginFormView;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_net1414080903120_login);\n+        // Set up the login form.\n+        mEmailView = (AutoCompleteTextView) findViewById(R.id.email);\n+        populateAutoComplete();\n+\n+        mPasswordView = (EditText) findViewById(R.id.password);\n+        mPasswordView.setOnEditorActionListener(new TextView.OnEditorActionListener() {\n+            @Override\n+            public boolean onEditorAction(TextView textView, int id, KeyEvent keyEvent) {\n+                if (id == R.id.login || id == EditorInfo.IME_NULL) {\n+                    attemptLogin();\n+                    return true;\n+                }\n+                return false;\n+            }\n+        });\n+\n+        Button mEmailSignInButton = (Button) findViewById(R.id.email_sign_in_button);\n+        mEmailSignInButton.setOnClickListener(new OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                attemptLogin();\n+            }\n+        });\n+\n+        mLoginFormView = findViewById(R.id.login_form);\n+        mProgressView = findViewById(R.id.login_progress);\n+    }\n+\n+    private void populateAutoComplete() {\n+        if (!mayRequestContacts()) {\n+            return;\n+        }\n+\n+        getLoaderManager().initLoader(0, null, this);\n+    }\n+\n+    private boolean mayRequestContacts() {\n+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {\n+            return true;\n+        }\n+        if (checkSelfPermission(READ_CONTACTS) == PackageManager.PERMISSION_GRANTED) {\n+            return true;\n+        }\n+        if (shouldShowRequestPermissionRationale(READ_CONTACTS)) {\n+            Snackbar.make(mEmailView, R.string.permission_rationale, Snackbar.LENGTH_INDEFINITE)\n+                    .setAction(android.R.string.ok, new View.OnClickListener() {\n+                        @Override\n+                        @TargetApi(Build.VERSION_CODES.M)\n+                        public void onClick(View v) {\n+                            requestPermissions(new String[]{READ_CONTACTS}, REQUEST_READ_CONTACTS);\n+                        }\n+                    });\n+        } else {\n+            requestPermissions(new String[]{READ_CONTACTS}, REQUEST_READ_CONTACTS);\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Callback received when a permissions request has been completed.\n+     */\n+    @Override\n+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\n+                                           @NonNull int[] grantResults) {\n+        if (requestCode == REQUEST_READ_CONTACTS) {\n+            if (grantResults.length == 1 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n+                populateAutoComplete();\n+            }\n+\n+        }\n+    }\n+\n+\n+    /**\n+     * Attempts to sign in or register the account specified by the login form.\n+     * If there are form errors (invalid email, missing fields, etc.), the\n+     * errors are presented and no actual login attempt is made.\n+     */\n+    private void attemptLogin() {\n+        if (mAuthTask != null) {\n+            return;\n+        }\n+\n+        // Reset errors.\n+        mEmailView.setError(null);\n+        mPasswordView.setError(null);\n+\n+        // Store values at the time of the login attempt.\n+        String email = mEmailView.getText().toString();\n+        String password = mPasswordView.getText().toString();\n+\n+        boolean cancel = false;\n+        View focusView = null;\n+\n+        // Check for a valid password, if the user entered one.\n+        if (!TextUtils.isEmpty(password) && !isPasswordValid(password)) {\n+            mPasswordView.setError(getString(R.string.error_invalid_password));\n+            focusView = mPasswordView;\n+            cancel = true;\n+        }\n+\n+        // Check for a valid email address.\n+        if (TextUtils.isEmpty(email)) {\n+            mEmailView.setError(getString(R.string.error_field_required));\n+            focusView = mEmailView;\n+            cancel = true;\n+        } else if (!isEmailValid(email)) {\n+            mEmailView.setError(getString(R.string.error_invalid_email));\n+            focusView = mEmailView;\n+            cancel = true;\n+        }\n+\n+        if (cancel) {\n+            // There was an error; don't attempt login and focus the first\n+            // form field with an error.\n+            focusView.requestFocus();\n+        } else {\n+            // Show a progress spinner, and kick off a background task to\n+            // perform the user login attempt.\n+            showProgress(true);\n+            mAuthTask = new UserLoginTask(email, password);\n+            mAuthTask.execute((Void) null);\n+        }\n+    }\n+\n+    private boolean isEmailValid(String email) {\n+        //TODO: Replace this with your own logic\n+        return email.contains(\"@\");\n+    }\n+\n+    private boolean isPasswordValid(String password) {\n+        //TODO: Replace this with your own logic\n+        return password.length() > 4;\n+    }\n+\n+    /**\n+     * Shows the progress UI and hides the login form.\n+     */\n+    @TargetApi(Build.VERSION_CODES.HONEYCOMB_MR2)\n+    private void showProgress(final boolean show) {\n+        // On Honeycomb MR2 we have the ViewPropertyAnimator APIs, which allow\n+        // for very easy animations. If available, use these APIs to fade-in\n+        // the progress spinner.\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB_MR2) {\n+            int shortAnimTime = getResources().getInteger(android.R.integer.config_shortAnimTime);\n+\n+            mLoginFormView.setVisibility(show ? View.GONE : View.VISIBLE);\n+            mLoginFormView.animate().setDuration(shortAnimTime).alpha(\n+                    show ? 0 : 1).setListener(new AnimatorListenerAdapter() {\n+                @Override\n+                public void onAnimationEnd(Animator animation) {\n+                    mLoginFormView.setVisibility(show ? View.GONE : View.VISIBLE);\n+                }\n+            });\n+\n+            mProgressView.setVisibility(show ? View.VISIBLE : View.GONE);\n+            mProgressView.animate().setDuration(shortAnimTime).alpha(\n+                    show ? 1 : 0).setListener(new AnimatorListenerAdapter() {\n+                @Override\n+                public void onAnimationEnd(Animator animation) {\n+                    mProgressView.setVisibility(show ? View.VISIBLE : View.GONE);\n+                }\n+            });\n+        } else {\n+            // The ViewPropertyAnimator APIs are not available, so simply show\n+            // and hide the relevant UI components.\n+            mProgressView.setVisibility(show ? View.VISIBLE : View.GONE);\n+            mLoginFormView.setVisibility(show ? View.GONE : View.VISIBLE);\n+        }\n+    }\n+\n+    @Override\n+    public Loader<Cursor> onCreateLoader(int i, Bundle bundle) {\n+        return new CursorLoader(this,\n+                // Retrieve data rows for the device user's 'profile' contact.\n+                Uri.withAppendedPath(ContactsContract.Profile.CONTENT_URI,\n+                        ContactsContract.Contacts.Data.CONTENT_DIRECTORY), ProfileQuery.PROJECTION,\n+\n+                // Select only email addresses.\n+                ContactsContract.Contacts.Data.MIMETYPE +\n+                        \" = ?\", new String[]{ContactsContract.CommonDataKinds.Email\n+                .CONTENT_ITEM_TYPE},\n+\n+                // Show primary email addresses first. Note that there won't be\n+                // a primary email address if the user hasn't specified one.\n+                ContactsContract.Contacts.Data.IS_PRIMARY + \" DESC\");\n+    }\n+\n+    @Override\n+    public void onLoadFinished(Loader<Cursor> cursorLoader, Cursor cursor) {\n+        List<String> emails = new ArrayList<>();\n+        cursor.moveToFirst();\n+        while (!cursor.isAfterLast()) {\n+            emails.add(cursor.getString(ProfileQuery.ADDRESS));\n+            cursor.moveToNext();\n+        }\n+\n+        addEmailsToAutoComplete(emails);\n+    }\n+\n+    @Override\n+    public void onLoaderReset(Loader<Cursor> cursorLoader) {\n+\n+    }\n+\n+    private void addEmailsToAutoComplete(List<String> emailAddressCollection) {\n+        //Create adapter to tell the AutoCompleteTextView what to show in its dropdown list.\n+        ArrayAdapter<String> adapter =\n+                new ArrayAdapter<>(Net1414080903120LoginActivity.this,\n+                        android.R.layout.simple_dropdown_item_1line, emailAddressCollection);\n+\n+        mEmailView.setAdapter(adapter);\n+    }\n+\n+\n+    private interface ProfileQuery {\n+        String[] PROJECTION = {\n+                ContactsContract.CommonDataKinds.Email.ADDRESS,\n+                ContactsContract.CommonDataKinds.Email.IS_PRIMARY,\n+        };\n+\n+        int ADDRESS = 0;\n+        int IS_PRIMARY = 1;\n+    }\n+\n+    /**\n+     * Represents an asynchronous login/registration task used to authenticate\n+     * the user.\n+     */\n+    public class UserLoginTask extends AsyncTask<Void, Void, Boolean> {\n+\n+        private final String mEmail;\n+        private final String mPassword;\n+\n+        UserLoginTask(String email, String password) {\n+            mEmail = email;\n+            mPassword = password;\n+        }\n+\n+        @Override\n+        protected Boolean doInBackground(Void... params) {\n+            // TODO: attempt authentication against a network service.\n+\n+            try {\n+                // Simulate network access.\n+                Thread.sleep(2000);\n+            } catch (InterruptedException e) {\n+                return false;\n+            }\n+\n+            for (String credential : DUMMY_CREDENTIALS) {\n+                String[] pieces = credential.split(\":\");\n+                if (pieces[0].equals(mEmail)) {\n+                    // Account exists, return true if the password matches.\n+                    return pieces[1].equals(mPassword);\n+                }\n+            }\n+\n+            // TODO: register the new account here.\n+            return true;\n+        }\n+\n+        @Override\n+        protected void onPostExecute(final Boolean success) {\n+            mAuthTask = null;\n+            showProgress(false);\n+\n+            if (success) {\n+                finish();\n+            } else {\n+                mPasswordView.setError(getString(R.string.error_incorrect_password));\n+                mPasswordView.requestFocus();\n+            }\n+        }\n+\n+        @Override\n+        protected void onCancelled() {\n+            mAuthTask = null;\n+            showProgress(false);\n+        }\n+    }\n+}\n+"
  }, {
    "sha" : "f1dba1805a28fbba73a6f9e084444da5ea488f72",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/util/ChatUtil.java",
    "status" : "added",
    "additions" : 79,
    "deletions" : 0,
    "changes" : 79,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/util/ChatUtil.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/util/ChatUtil.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903120/util/ChatUtil.java?ref=34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "patch" : "@@ -0,0 +1,79 @@\n+package edu.hzuapps.androidlabs.homeworks.net1414080903120.util;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.PrintWriter;\n+import java.net.Socket;\n+import java.util.Properties;\n+\n+/**\n+ * Created by hzu on 2017/4/21.\n+ */\n+\n+public class ChatUtil {\n+    public static boolean sendToServer(String text) {\n+        return false;\n+    }\n+}\n+\n+interface Message {\n+    boolean send(OutputStream os);\n+}\n+\n+class TextMessage implements Message{\n+    private String text;\n+\n+    public TextMessage(String text) {\n+        this.text = text;\n+    }\n+\n+    public String getText() {\n+        return text;\n+    }\n+\n+    public void setText(String text) {\n+        this.text = text;\n+    }\n+\n+    @Override\n+    public boolean send(OutputStream out) {\n+        PrintWriter pw = new PrintWriter(out);\n+        pw.println();\n+        return false;\n+    }\n+}\n+\n+class Sender {\n+    private   String serverIP;\n+    private   int serverPort;\n+    private  Socket socket;\n+\n+    public Sender() {\n+        Properties properties = new Properties();\n+        InputStream is = null;\n+        try {\n+            is = Object.class.getResourceAsStream(\"server.properties\");\n+            properties.load(is);\n+            serverIP = properties.getProperty(\"server.ip\");\n+            serverPort = Integer.parseInt(properties.getProperty(\"server.port\"));\n+            socket =  new Socket(serverIP, serverPort);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        } finally {\n+            if (is != null) {\n+                try {\n+                    is.close();\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+    }\n+\n+    public static boolean send(TextMessage msg) {\n+\n+        return true;\n+    }\n+}\n+"
  }, {
    "sha" : "de8567540c98ca77dccca61c5d1d9e3eeef94670",
    "filename" : "AndroidLabs/app/src/main/res/layout/activity_net1414080903120_login.xml",
    "status" : "added",
    "additions" : 77,
    "deletions" : 0,
    "changes" : 77,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/res/layout/activity_net1414080903120_login.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/34db81fb6ebeda38d9f8e51f963ee161f4c159d0/AndroidLabs/app/src/main/res/layout/activity_net1414080903120_login.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/res/layout/activity_net1414080903120_login.xml?ref=34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
    "patch" : "@@ -0,0 +1,77 @@\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+              xmlns:tools=\"http://schemas.android.com/tools\"\n+              android:layout_width=\"match_parent\"\n+              android:layout_height=\"match_parent\"\n+              android:gravity=\"center_horizontal\"\n+              android:orientation=\"vertical\"\n+              android:paddingBottom=\"@dimen/activity_vertical_margin\"\n+              android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n+              android:paddingRight=\"@dimen/activity_horizontal_margin\"\n+              android:paddingTop=\"@dimen/activity_vertical_margin\"\n+              tools:context=\"edu.hzuapps.androidlabs.homeworks.net1414080903120.ui.Net1414080903120LoginActivity\">\n+\n+    <!-- Login progress -->\n+    <ProgressBar\n+        android:id=\"@+id/login_progress\"\n+        style=\"?android:attr/progressBarStyleLarge\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginBottom=\"8dp\"\n+        android:visibility=\"gone\"/>\n+\n+    <ScrollView\n+        android:id=\"@+id/login_form\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <LinearLayout\n+            android:id=\"@+id/email_login_form\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"vertical\">\n+\n+            <android.support.design.widget.TextInputLayout\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\">\n+\n+                <AutoCompleteTextView\n+                    android:id=\"@+id/email\"\n+                    android:layout_width=\"match_parent\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:hint=\"@string/prompt_email\"\n+                    android:inputType=\"textEmailAddress\"\n+                    android:maxLines=\"1\"\n+                    android:singleLine=\"true\"/>\n+\n+            </android.support.design.widget.TextInputLayout>\n+\n+            <android.support.design.widget.TextInputLayout\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\">\n+\n+                <EditText\n+                    android:id=\"@+id/password\"\n+                    android:layout_width=\"match_parent\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:hint=\"@string/prompt_password\"\n+                    android:imeActionId=\"@+id/login\"\n+                    android:imeActionLabel=\"@string/action_sign_in_short\"\n+                    android:imeOptions=\"actionUnspecified\"\n+                    android:inputType=\"textPassword\"\n+                    android:maxLines=\"1\"\n+                    android:singleLine=\"true\"/>\n+\n+            </android.support.design.widget.TextInputLayout>\n+\n+            <Button\n+                android:id=\"@+id/email_sign_in_button\"\n+                style=\"?android:textAppearanceSmall\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"16dp\"\n+                android:text=\"@string/action_sign_in\"\n+                android:textStyle=\"bold\"/>\n+\n+        </LinearLayout>\n+    </ScrollView>\n+</LinearLayout>"
  } ],
  "sha" : "34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
  "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/34db81fb6ebeda38d9f8e51f963ee161f4c159d0",
  "parents" : [ {
    "sha" : "b8ae2e6d25ab4faabb185c5cbfeea81c774acb06",
    "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/b8ae2e6d25ab4faabb185c5cbfeea81c774acb06",
    "html_url" : "https://github.com/hzuapps/android-labs-2017/commit/b8ae2e6d25ab4faabb185c5cbfeea81c774acb06"
  } ]
}