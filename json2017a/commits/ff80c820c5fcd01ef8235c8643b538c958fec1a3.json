{
  "committer" : {
    "login" : "zzh1414080903218",
    "id" : 26100430,
    "avatar_url" : "https://avatars0.githubusercontent.com/u/26100430?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zzh1414080903218",
    "html_url" : "https://github.com/zzh1414080903218",
    "followers_url" : "https://api.github.com/users/zzh1414080903218/followers",
    "following_url" : "https://api.github.com/users/zzh1414080903218/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zzh1414080903218/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zzh1414080903218/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zzh1414080903218/subscriptions",
    "organizations_url" : "https://api.github.com/users/zzh1414080903218/orgs",
    "repos_url" : "https://api.github.com/users/zzh1414080903218/repos",
    "events_url" : "https://api.github.com/users/zzh1414080903218/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zzh1414080903218/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "stats" : {
    "total" : 622,
    "additions" : 494,
    "deletions" : 128
  },
  "author" : {
    "login" : "zzh1414080903218",
    "id" : 26100430,
    "avatar_url" : "https://avatars0.githubusercontent.com/u/26100430?v=3",
    "gravatar_id" : "",
    "url" : "https://api.github.com/users/zzh1414080903218",
    "html_url" : "https://github.com/zzh1414080903218",
    "followers_url" : "https://api.github.com/users/zzh1414080903218/followers",
    "following_url" : "https://api.github.com/users/zzh1414080903218/following{/other_user}",
    "gists_url" : "https://api.github.com/users/zzh1414080903218/gists{/gist_id}",
    "starred_url" : "https://api.github.com/users/zzh1414080903218/starred{/owner}{/repo}",
    "subscriptions_url" : "https://api.github.com/users/zzh1414080903218/subscriptions",
    "organizations_url" : "https://api.github.com/users/zzh1414080903218/orgs",
    "repos_url" : "https://api.github.com/users/zzh1414080903218/repos",
    "events_url" : "https://api.github.com/users/zzh1414080903218/events{/privacy}",
    "received_events_url" : "https://api.github.com/users/zzh1414080903218/received_events",
    "type" : "User",
    "site_admin" : false
  },
  "html_url" : "https://github.com/hzuapps/android-labs-2017/commit/ff80c820c5fcd01ef8235c8643b538c958fec1a3",
  "commit" : {
    "author" : {
      "name" : "zzh1414080903218",
      "email" : "1290040567@qq.com",
      "date" : "2017-05-19T13:16:40Z"
    },
    "committer" : {
      "name" : "zzh1414080903218",
      "email" : "1290040567@qq.com",
      "date" : "2017-05-19T13:16:40Z"
    },
    "message" : "#4 #24 第四次实验",
    "tree" : {
      "sha" : "14bc012712f6b1cda38d76fe39f99eab00f7baee",
      "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/git/trees/14bc012712f6b1cda38d76fe39f99eab00f7baee"
    },
    "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/git/commits/ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "comment_count" : 0
  },
  "comments_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/ff80c820c5fcd01ef8235c8643b538c958fec1a3/comments",
  "files" : [ {
    "sha" : "8f88199b02ebe452295bb2cac821da794d6fc238",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/AutoPlayer.java",
    "status" : "modified",
    "additions" : 229,
    "deletions" : 7,
    "changes" : 236,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/AutoPlayer.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/AutoPlayer.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/AutoPlayer.java?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -1,5 +1,18 @@\n package edu.hzuapps.androidlabs.homeworks.net1414080903218;\n \n+import android.content.Context;\n+import android.os.Environment;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.InputStreamReader;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static android.content.Context.MODE_APPEND;\n+\n /**\n  * Created by zzh on 2017/5/1.\n  */\n@@ -11,20 +24,229 @@ public AutoPlayer(boolean first,Board b) {\n         putR = 0;\n         putC = 0;\n     }\n-    public boolean putPiece(){\n+    @Override\n+    public boolean putPiece(int r,int c){\n         findPutRC();\n         if(!board.putPiece(first,putR,putC))return false;\n+        countPieces++;\n         return true;\n     }\n     public void findPutRC(){\n-        for(int i=0;i<board.getRow();i++) {\n-            for (int j = 0; j < board.getCol(); j++) {\n-                if(board.isEmpty(i,j)){\n-                    putR = i;\n-                    putC = j;\n-                    return;\n+        int i,j,x,y,x1,y1;\n+        boolean display[][] = board.getDisplay();\n+        boolean isFirst[][] = board.getFirst();\n+        int row = board.getRow();\n+        int col = board.getCol();\n+        int weight[][] = new int[board.getRow()][board.getCol()];\n+        int myLink[] = new int[8];\n+        int opponentLink[] = new int[8];\n+        boolean myLinkStop[] = new boolean[8];\n+        boolean opponentLinkStop[] = new boolean[8];\n+        boolean emptyStop[] = new boolean[8];\n+        boolean myEmpty[] = new boolean[8];\n+        boolean opponentEmpty[] = new boolean[8];\n+        for(x=0;x<board.getRow();x++) {\n+            for (y = 0; y < board.getCol(); y++) {\n+                weight[x][y] = 0;\n+                if(board.isEmpty(x,y)){\n+                    //初始化\n+                    for (j=0;j<8;j++){\n+                        myLink[j] = 0;\n+                        opponentLink[j] = 0;\n+                        myLinkStop[j] = false;\n+                        opponentLinkStop[j] = false;\n+                        emptyStop[j] = false;\n+                        myEmpty[j] = false;\n+                        opponentEmpty[j] = false;\n+                    }\n+                    //收集数据\n+                    for (i=1;i<5;i++){\n+                        for (j=0;j<8;j++) {\n+                            switch (j) {\n+                                case 0:\n+                                    x1 = x;\n+                                    y1 = y - i;\n+                                    break;\n+                                case 1:\n+                                    x1 = x + i;\n+                                    y1 = y - i;\n+                                    break;\n+                                case 2:\n+                                    x1 = x + i;\n+                                    y1 = y;\n+                                    break;\n+                                case 3:\n+                                    x1 = x + i;\n+                                    y1 = y + i;\n+                                    break;\n+                                case 4:\n+                                    x1 = x;\n+                                    y1 = y + i;\n+                                    break;\n+                                case 5:\n+                                    x1 = x - i;\n+                                    y1 = y + i;\n+                                    break;\n+                                case 6:\n+                                    x1 = x - i;\n+                                    y1 = y;\n+                                    break;\n+                                case 7:\n+                                    x1 = x - i;\n+                                    y1 = y - i;\n+                                    break;\n+                                default:\n+                                    x1 = x;\n+                                    y1 = y;\n+                            }\n+                            if (y1 >= 0 && x1 >= 0 && x1 < row && y1 < col) {\n+                                if(!emptyStop[j]) {\n+                                    if (display[x1][y1] == true) {\n+                                        if (isFirst[x1][y1] == first) {\n+                                            opponentLinkStop[j] = true;\n+                                            if (!myLinkStop[j]) myLink[j]++;\n+                                        } else {\n+                                            myLinkStop[j] = true;\n+                                            if (!opponentLinkStop[j]) opponentLink[j]++;\n+                                        }\n+                                    } else emptyStop[j] = true;\n+                                }\n+                            }\n+                        }\n+                    }\n+                    for (j=0;j<8;j++){\n+                        if(emptyStop[j]){\n+                            if(opponentLink[j]==0)myEmpty[j] = true;\n+                            if(myLink[j]==0)opponentEmpty[j] = true;\n+                        }\n+                    }\n+                    //分析数据\n+                    int myWeight = getWeight(myLink,myEmpty,true);\n+                    int opWeight = getWeight(opponentLink,opponentEmpty,false);\n+                    weight[x][y] = myWeight > opWeight ? myWeight : opWeight;\n+                }\n+            }\n+        }\n+        int max = 0;\n+        for (x=0;x<row;x++){\n+            for (y=0;y<col;y++){\n+                if(weight[x][y]>max) {\n+                    max = weight[x][y];\n+                    //writef(String.valueOf(max));\n+                    putR = x;\n+                    putC = y;\n+                }\n+            }\n+        }\n+    }\n+\n+    private int getWeight(int link[],boolean empty[],boolean isMe){\n+        int j,weight = 0;\n+        for (j=0;j<4;j++){\n+            if(link[j]+link[j+4]>=4){\n+                if(!isMe)return Weight.BEST-1;\n+                return Weight.BEST;\n+            }\n+            if(link[j]+link[j+4]==3 && empty[j] && empty[j+4]){\n+                weight = Weight.BETTER > weight ? Weight.BETTER : weight;\n+            }\n+        }\n+        if(weight==0)for (j=0;j<7;j++)weight += link[j]*10;\n+        weight = Weight.BASE > weight ? Weight.BASE : weight;\n+        if(!isMe)weight--;\n+        String data = \"\";\n+        for (j=0;j<8;j++){\n+            data += link[j]+\" \";\n+            if(empty[j])data += \"1 \";\n+            else data += \"0 \";\n+        }\n+        if(isMe)data += \"1 \";\n+        else data += \"0 \";\n+        data += weight;\n+        //writefNewLine(data);\n+        return weight;\n+    }\n+    public final class Weight{\n+        public final static int BEST = 1000;\n+        public final static int BETTER = 990;\n+        public final static int BASE = 10;\n+        public final static int L4 = BEST;\n+        public final static int L3T1 = BEST;\n+        public final static int L2T2 = BEST;\n+        public final static int E3E = BETTER;\n+        public final static int E21E = BETTER;\n+    }\n+    public boolean writefNewLine(String data){\n+        if(writef(\"\\n\"+data)){\n+            return true;\n+        }\n+        return false;\n+    }\n+    public boolean writef(String data){\n+        String state = Environment.getExternalStorageState();\n+        if(state.equals(Environment.MEDIA_MOUNTED)) {\n+            File SDPath = Environment.getExternalStorageDirectory();\n+            //String path = SDPath.getPath()+\"\";\n+            //SDPath.mkdir();\n+            File path = new File(SDPath,\"chess\");\n+            path.mkdir();\n+            File file = new File(path,\"data.txt\");\n+            try {\n+                FileOutputStream fos = new FileOutputStream(file,true);\n+                fos.write(data.getBytes());\n+                fos.close();\n+            }catch (Exception e){\n+            }\n+        }\n+        return true;\n+    }\n+    public String readfLine(int index){\n+        List list = new ArrayList();\n+        String data = \"\";\n+        String state = Environment.getExternalStorageState();\n+        if(state.equals(Environment.MEDIA_MOUNTED)) {\n+            File SDPath = Environment.getExternalStorageDirectory();\n+            File path = new File(SDPath,\"chess\");\n+            path.mkdir();\n+            File file = new File(path,\"data.txt\");\n+            try {\n+                FileInputStream fis = new FileInputStream(file);\n+                BufferedReader br = new BufferedReader(new InputStreamReader(fis));\n+                while ((data = br.readLine()) != null){\n+                    list.add(new String(data));\n+                }\n+                //FileOutputStream fos = new FileOutputStream(file,true);\n+                //fos.write(data.getBytes());\n+                //fos.close();\n+            }catch (Exception e){\n+            }\n+        }\n+        data = list.get(index).toString();\n+        return data;\n+    }\n+    public int getfLine(){\n+        List list = new ArrayList();\n+        String data = \"\";\n+        int line = 0;\n+        String state = Environment.getExternalStorageState();\n+        if(state.equals(Environment.MEDIA_MOUNTED)) {\n+            File SDPath = Environment.getExternalStorageDirectory();\n+            File path = new File(SDPath,\"chess\");\n+            path.mkdir();\n+            File file = new File(path,\"data.txt\");\n+            try {\n+                FileInputStream fis = new FileInputStream(file);\n+                BufferedReader br = new BufferedReader(new InputStreamReader(fis));\n+                while ((data = br.readLine()) != null){\n+                    list.add(new String(data));\n                 }\n+                //FileOutputStream fos = new FileOutputStream(file,true);\n+                //fos.write(data.getBytes());\n+                //fos.close();\n+            }catch (Exception e){\n             }\n         }\n+        //line = list.lastIndexOf()；\n+        return 0;\n     }\n }"
  }, {
    "sha" : "21456cae0156d736060facc385e616ef150227b2",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/ChessView.java",
    "status" : "modified",
    "additions" : 128,
    "deletions" : 89,
    "changes" : 217,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/ChessView.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/ChessView.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/ChessView.java?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -8,121 +8,125 @@\n import android.graphics.Point;\n import android.graphics.PointF;\n import android.graphics.Rect;\n+import android.graphics.RectF;\n import android.util.AttributeSet;\n import android.util.DisplayMetrics;\n import android.view.MotionEvent;\n import android.view.View;\n import android.widget.Toast;\n \n+import java.sql.Time;\n import java.util.ArrayList;\n+import java.util.StringTokenizer;\n+import java.util.Timer;\n+import java.util.TimerTask;\n \n import static android.widget.Toast.*;\n \n /**\n  * Created by zzh on 2017/4/15.\n  */\n public class ChessView extends View {\n-    //protected Canvas myCanvas;\n-    protected Paint myPaint;\n-    protected int width;\n-    protected int height;\n-    protected float boardSX;\n-    protected float boardSY;\n-    protected float boardEX;\n-    protected float boardEY;\n-    protected float grapX;\n-    protected float grapY;\n-    protected float chessRadeus;\n+    //控制器\n     protected Net1414080903218BoardActivity controller;\n-    private int n;\n-/*    Paint paint;\n-    private ArrayList<PointF> graphics = new ArrayList<PointF>();\n-    PointF point;*/\n+    protected Paint myPaint;        //画笔\n+    protected int width;            //画布宽度\n+    protected int height;           //画布高度\n+    protected float boardSX;        //棋盘左上x\n+    protected float boardSY;        //棋盘左上y\n+    protected float boardEX;        //棋盘右下x\n+    protected float boardEY;        //棋盘右下y\n+    protected float grapX;          //棋盘x间隔\n+    protected float grapY;          //棋盘y间隔\n+    protected float chessRadeus;    //棋子半径\n+    //信息显示区\n+    protected float newSX;        //左上x\n+    protected float newSY;        //左上y\n+    protected float newEX;        //右下x\n+    protected float newEY;        //右下y\n+    protected float centerX;      //水平中心\n+    protected float textSize;     //字体大小\n+//    protected long startTime;       //开始时间\n+    protected Timer timer;          //计时器\n+    protected int msecond;\n+    protected int second;\n+    protected int minute;\n+    protected int mode;\n+    protected boolean isFristPut;\n+\n     public ChessView(Context context, AttributeSet attrs){\n         super(context,attrs);\n         if (context instanceof Net1414080903218BoardActivity)\n         {\n             controller = (Net1414080903218BoardActivity)context;\n         }\n-/*        paint = new Paint(); //设置一个笔刷大小是3的黄色的画笔\n-        paint.setColor(Color.YELLOW);\n-        paint.setStrokeJoin(Paint.Join.ROUND);\n-        paint.setStrokeCap(Paint.Cap.ROUND);\n-        paint.setStrokeWidth(30);*/\n+        init();\n+        myPaint = new Paint();\n+    }\n+    private void init(){\n+        //mode = controller.mode;\n+        //mode = 2;\n+        textSize = 50;\n+        isFristPut = true;\n     }\n \n     @Override\n-    protected void onDraw(Canvas canvas){\n-        //for (PointF point : graphics) {\n-        //    canvas.drawPoint(point.x, point.y, paint);\n-        //}\n-        //Toast.makeText(getContext(),Integer.valueOf(width)+\",\"+Integer.valueOf(height),Toast.LENGTH_SHORT).show();\n-       //super.onDraw(canvas);\n-        myPaint=new Paint();\n-        myPaint.setColor(Color.rgb(150,200,0));\n-        myPaint.setShadowLayer(2,3,3,Color.BLACK);\n-        Rect RectBoard=new Rect(0,0,width,height);\n-        canvas.drawRect(RectBoard,myPaint);\n+    protected void onDraw(Canvas canvas) {\n+        //初始化画布\n+        myPaint.setColor(Color.rgb(150, 200, 0));\n+        myPaint.setShadowLayer(2, 3, 3, Color.BLACK);\n+        Rect RectBoard = new Rect(0, 0, width, height);\n+        canvas.drawRect(RectBoard, myPaint);\n         myPaint.setColor(Color.BLACK);\n-        for(int i=0;i<controller.board.getRow();i++){\n-            canvas.drawLine(boardSX+grapX*i,boardSY,boardSX+grapX*i,boardEY,myPaint);\n+        //画信息\n+        RectF rectNew = new RectF(newSX,newSY,newEX,newEY);\n+        canvas.drawLine(rectNew.left,rectNew.top,rectNew.right,rectNew.top,myPaint);\n+        canvas.drawLine(rectNew.right,rectNew.top,rectNew.right,rectNew.bottom,myPaint);\n+        canvas.drawLine(rectNew.left,rectNew.top,rectNew.left,rectNew.bottom,myPaint);\n+        canvas.drawLine(rectNew.left,rectNew.bottom,rectNew.right,rectNew.bottom,myPaint);\n+        //画棋盘\n+        char c = 'A';\n+        for (int i = 0; i < controller.board.getRow(); i++) {\n+            canvas.drawLine(boardSX + grapX * i, boardSY, boardSX + grapX * i, boardEY, myPaint);\n+            myPaint.setTextSize(20);\n+            myPaint.setTextAlign(Paint.Align.CENTER);\n+            myPaint.setShadowLayer(0,0,0,0);\n+            canvas.drawText(Character.toString((char) (c+i)),boardSX + grapX * i, boardSY - 8 - chessRadeus,myPaint);\n         }\n-        for(int j=0;j<controller.board.getCol();j++){\n-            canvas.drawLine(boardSX,boardSY+grapY*j,boardEX,boardSY+grapY*j,myPaint);\n+        for (int j = 0; j < controller.board.getCol(); j++) {\n+            canvas.drawLine(boardSX, boardSY + grapY * j, boardEX, boardSY + grapY * j, myPaint);\n+            myPaint.setTextSize(20);\n+            myPaint.setTextAlign(Paint.Align.RIGHT);\n+            canvas.drawText(String.valueOf(j+1),boardSX - 8 -chessRadeus, boardSY + 8 + grapY * j,myPaint);\n         }\n+        //显示棋子\n         int oldColor;\n-        for(int i=0;i<controller.board.getRow();i++){\n-            for(int j=0;j<controller.board.getCol();j++){\n-                if(controller.board.getDisplay()[i][j]){\n+        for (int i = 0; i < controller.board.getRow(); i++) {\n+            for (int j = 0; j < controller.board.getCol(); j++) {\n+                if (controller.board.getDisplay()[i][j]) {\n                     oldColor = myPaint.getColor();\n-                    if(controller.board.getFirst()[i][j]) {\n+                    if (controller.board.getFirst()[i][j]) {\n                         myPaint.setColor(controller.board.getFirstColor());\n-                    }\n-                    else{\n+                    } else {\n                         myPaint.setColor(controller.board.getLaterColor());\n                     }\n-                    canvas.drawCircle(boardSX+grapX*i,boardSY+grapY*j,chessRadeus,myPaint);\n+                    canvas.drawCircle(boardSX + grapX * i, boardSY + grapY * j, chessRadeus, myPaint);\n                     myPaint.setColor(oldColor);\n                 }\n             }\n         }\n-//        myCanvas=canvas;\n-        //drawChess(1,1,Color.BLACK);\n-/*        this.setOnTouchListener(new OnTouchListener() {\n-            @Override\n-            public boolean onTouch(View v, MotionEvent event) {\n-               try {\n-                    float x = event.getX();\n-                    float y = event.getY();\n-                    if (x + grapX / 2 > boardSX && x - grapX / 2 < boardEX\n-                            && y + grapY / 2 > boardSY && y - grapY / 2 < boardEY) {\n-                        int row = (int) ((x - boardSX + grapY / 2) / grapX);\n-                        int col = (int) ((y - boardSY + grapX / 2) / grapY);\n-                        Toast.makeText(getContext(), String.valueOf(row) + \"  \" + String.valueOf(col), Toast.LENGTH_SHORT).show();\n-                        drawChess(row, col, Color.BLACK);\n-                    }\n-               }catch (Exception e){\n-\n-               }\n-                //return true;\n-               return false;\n-            }\n-        });*/\n- /*       try {\n-            float x = event.getX();\n-            float y = event.getY();\n-            //ChessBoard chessBoard=(ChessBoard) findViewById(R.id.ChessBosrd);\n-            if (x + grapX / 2 > boardSX && x - grapX / 2 < boardEX\n-                    && y + grapY / 2 > boardSY && y - grapY / 2 < boardEY) {\n-                int row = (int) ((x - boardSX + grapY / 2) / grapX);\n-                int col = (int) ((y - boardSY + grapX / 2) / grapY);\n-                Toast.makeText(getContext(), String.valueOf(row) + \"  \" + String.valueOf(col), Toast.LENGTH_SHORT).show();\n-                drawChess(row, col, Color.BLACK);\n-            }\n-         }catch (Exception e){\n-\n-            }\n-            return true;*/\n+        String text = \"玩家 vs 电脑\";\n+        if(mode != 1){\n+            text = \"玩家 vs 玩家\";\n+        }\n+        myPaint.setTextSize(textSize);\n+        myPaint.setTextAlign(Paint.Align.CENTER);\n+        myPaint.setShadowLayer(5,3,3,Color.BLACK);\n+        canvas.drawText(text,centerX,newSY+textSize,myPaint);\n+        text = controller.firstPlayer.countPieces+\"  :  \"+controller.laterPlayer.countPieces;\n+        canvas.drawText(text,centerX,newSY+textSize*2,myPaint);\n+        text = String.format(\"%02d\",minute)+\" : \"+String.format(\"%02d\",second);\n+        canvas.drawText(text,centerX,newSY+textSize*3,myPaint);\n     }\n     @Override\n     public boolean onTouchEvent(MotionEvent event) {\n@@ -136,18 +140,34 @@ public boolean onTouchEvent(MotionEvent event) {\n                         && y + grapY / 2 > boardSY && y - grapY / 2 < boardEY) {\n                     int row = (int) ((x - boardSX + grapY / 2) / grapX);\n                     int col = (int) ((y - boardSY + grapX / 2) / grapY);\n-                    n++;\n-                    if(controller.firstPlayer.putPiece(row, col)) {\n-                        controller.laterPlayer.putPiece();\n+                    if(mode == 1) {\n+                        if (controller.firstPlayer.putPiece(row, col)) {\n+                            controller.laterPlayer.putPiece(0, 0);\n+                        }\n+                    }\n+                    else if(mode == 2){\n+\n+                    }\n+                    else if(mode == 3 ){\n+                        if(isFristPut){\n+                            if (controller.firstPlayer.putPiece(row, col)) {\n+                                isFristPut = false;\n+                            }\n+                        }else{\n+                            if (controller.laterPlayer.putPiece(row, col)) {\n+                                isFristPut = true;\n+                            }\n+                        }\n                     }\n                     if(controller.board.isGameover()){\n+                        timer.cancel();\n                         if(controller.board.isFirstWin()){\n                             Toast.makeText(this.getContext(),\"黑方胜利！\", Toast.LENGTH_SHORT).show();\n                         }else {\n                             Toast.makeText(this.getContext(),\"白方胜利！\", Toast.LENGTH_SHORT).show();\n                         }\n-\n                     }\n+                    //Toast.makeText(this.getContext(),controller.laterPlayer.readfLine(1), Toast.LENGTH_SHORT).show();\n                 }\n             } catch (Exception e) {\n             }\n@@ -172,14 +192,33 @@ public boolean start(int r,int c){\n         boardEX = boardSX + grapX*(controller.board.getRow()-1);\n         boardEY = height - grapY;\n         boardSY = boardEY - grapY*(controller.board.getCol()-1);\n-        //boardSX=20;boardSY=260;\n-        //boardEX=420;boardEY=660;\n-        //grapX=(boardEX-boardSX)/countX;\n-        //grapY=(boardEY-boardSY)/countY;\n+        //设置信息区宽高\n+        newSX = boardSX;\n+        newSY = grapY;\n+        newEX = boardEX;\n+        newEY = boardSY - grapY;\n+        //计算水平中心\n+        centerX = (newEX+newSX)/2;\n+        //设置棋子半径\n         chessRadeus=(grapX<grapY?grapX:grapY)/3;\n-        //controller.laterPut();\n-        //activity.board.\n+        timer = new Timer();\n+        msecond = 0;\n+        second = 0;\n+        minute = 0;\n+        timer.schedule(timerTask,1000,1000);\n         invalidate();\n         return true;\n     }\n+    TimerTask timerTask = new TimerTask() {\n+        @Override\n+        public void run() {\n+            second++;\n+            if(second>=60){\n+                second = 0;\n+                minute++;\n+            }\n+            postInvalidate();\n+            getRootView().postInvalidate();\n+        }\n+    };\n }"
  }, {
    "sha" : "b3513827597f3faefd4a16fee05e4830733ea618",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218Activity.java",
    "status" : "modified",
    "additions" : 51,
    "deletions" : 3,
    "changes" : 54,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218Activity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218Activity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218Activity.java?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -1,26 +1,74 @@\n package edu.hzuapps.androidlabs.homeworks.net1414080903218;\n \n+import android.content.DialogInterface;\n import android.content.Intent;\n+import android.support.v7.app.AlertDialog;\n import android.support.v7.app.AppCompatActivity;\n import android.os.Bundle;\n import android.view.View;\n import android.widget.Button;\n \n public class Net1414080903218Activity extends AppCompatActivity {\n-\n+    protected Intent IntentStartBoard;\n+    protected String size;\n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_net1414080903218);\n         Button ButtonPtoC=(Button) findViewById(R.id.PtoCButton);\n+        Button ButtonPtoP=(Button) findViewById(R.id.PtoPButton);\n+        Button ButtonPtoN=(Button) findViewById(R.id.PtoNButton);\n         if (ButtonPtoC != null) {\n             ButtonPtoC.setOnClickListener(new View.OnClickListener() {\n                 @Override\n                 public void onClick(View v) {\n-                    Intent IntentStartBoard=new Intent(v.getContext(),Net1414080903218BoardActivity.class);\n-                    startActivity(IntentStartBoard);\n+                    IntentStartBoard=new Intent(v.getContext(),Net1414080903218BoardActivity.class);\n+                    IntentStartBoard.putExtra(\"mode\",\"1\");\n+                    showChooseDialog();\n+                }\n+            });\n+        }\n+        if (ButtonPtoN != null) {\n+            ButtonPtoN.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View v) {\n+                    IntentStartBoard=new Intent(v.getContext(),Net1414080903218BoardActivity.class);\n+                    IntentStartBoard.putExtra(\"mode\",\"2\");\n+                    showChooseDialog();\n                 }\n             });\n         }\n+        if (ButtonPtoP != null) {\n+            ButtonPtoP.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View v) {\n+                    IntentStartBoard=new Intent(v.getContext(),Net1414080903218BoardActivity.class);\n+                    IntentStartBoard.putExtra(\"mode\",\"3\");\n+                    showChooseDialog();\n+                }\n+            });\n+        }\n+    }\n+    String[] sizeArry = new String[] { \"10 * 10\",\"12 * 12\", \"15 * 15\" };\n+\n+    /* 选择框 */\n+    private void showChooseDialog() {\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(this);// 自定义对话框\n+        builder.setTitle(\"选择棋盘大小\");\n+        builder.setSingleChoiceItems(sizeArry, 0, new DialogInterface.OnClickListener() {\n+\n+            @Override\n+            public void onClick(DialogInterface dialog, int which) {// which是被选中的位置\n+                if(which == 0)size = \"10\";\n+                else if(which == 1)size = \"12\";\n+                else if(which == 2)size = \"15\";\n+                IntentStartBoard.putExtra(\"size\",size);\n+                startActivity(IntentStartBoard);\n+                //sexView.setText(sexArry[which]);\n+                dialog.dismiss();//随便点击一个item消失对话框，不用点击确认取消\n+            }\n+        });\n+        builder.show();// 让弹出框显示\n     }\n }"
  }, {
    "sha" : "1d382d901f0946949463be24c5ccf72ce96ecf51",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218BoardActivity.java",
    "status" : "modified",
    "additions" : 16,
    "deletions" : 25,
    "changes" : 41,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218BoardActivity.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218BoardActivity.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/Net1414080903218BoardActivity.java?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -11,42 +11,33 @@\n public class Net1414080903218BoardActivity extends AppCompatActivity {\n     public Board board;\n     public Player firstPlayer;\n-    public AutoPlayer laterPlayer;\n+    public Player laterPlayer;\n     private ChessView view;\n+    public int mode;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_net1414080903218_board);\n         start();\n-        //Canvas myCanvas = new Canvas();\n-        /*DisplayMetrics metric = new DisplayMetrics();\n-        getWindowManager().getDefaultDisplay().getMetrics(metric);\n-        int width = metric.widthPixels;  // 屏幕宽度（像素）\n-        int height = metric.heightPixels;  // 屏幕高度（像素）\n-        float density = metric.density;  // 屏幕密度（0.75 / 1.0 / 1.5）\n-        int densityDpi = metric.densityDpi;  // 屏幕密度DPI（120 / 160 / 240\n-    */    //Toast.makeText(this,Integer.valueOf(width)+\",\"+Integer.valueOf(height),Toast.LENGTH_SHORT).show();\n     }\n     public void start(){\n-        board = new Board();\n+        int size = Integer.valueOf(getIntent().getStringExtra(\"size\"));\n+        board = new Board(size,size);\n         firstPlayer = new Player(true,board);\n-        laterPlayer = new AutoPlayer(false,board);\n+        mode = Integer.valueOf(getIntent().getStringExtra(\"mode\"));\n+        if(mode == 1) {\n+            laterPlayer = new AutoPlayer(false, board);\n+        }\n+        else if(mode == 2) {\n+            laterPlayer = new NetPlayer(false, board);\n+        }\n+        else if(mode == 3) {\n+            laterPlayer = new Player(false, board);\n+        }\n+        else laterPlayer = new AutoPlayer(false, board);\n         view = (ChessView)findViewById(R.id.ChessView);\n+        view.mode = mode;\n         view.start(board.getRow(),board.getCol());\n     }\n-/*    @Override\n-    public boolean onTouchEvent(MotionEvent event){\n-        float x=event.getX();\n-        float y=event.getY();\n-        ChessBoard chessBoard=(ChessBoard) findViewById(R.id.ChessBosrd);\n-        if(x+chessBoard.grapX/2>chessBoard.boardSX && x-chessBoard.grapX/2<chessBoard.boardEX\n-                && y+chessBoard.grapY/2>chessBoard.boardSY && y-chessBoard.grapY/2<chessBoard.boardEY){\n-            int row=(int)((x-chessBoard.boardSX+chessBoard.grapY/2)/chessBoard.grapX);\n-            int col=(int)((y-chessBoard.boardSY+chessBoard.grapX/2)/chessBoard.grapY);\n-            Toast.makeText(chessBoard.getContext(),String.valueOf(row)+\"  \"+String.valueOf(col),Toast.LENGTH_SHORT).show();\n-            chessBoard.drawChess(row,col,Color.BLACK);\n-        }\n-        return true;\n-    }*/\n }"
  }, {
    "sha" : "42892a90e74b27471513adf669c71a7367f0912b",
    "filename" : "AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/NetPlayer.java",
    "status" : "added",
    "additions" : 34,
    "deletions" : 0,
    "changes" : 34,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/NetPlayer.java",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/NetPlayer.java",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/java/edu/hzuapps/androidlabs/homeworks/net1414080903218/NetPlayer.java?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -0,0 +1,34 @@\n+package edu.hzuapps.androidlabs.homeworks.net1414080903218;\n+\n+import android.os.Environment;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.InputStreamReader;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Created by zzh on 2017/5/1.\n+ */\n+public class NetPlayer extends Player {\n+    private int putR;\n+    private int putC;\n+    public NetPlayer(boolean first, Board b) {\n+        super(first,b);\n+        putR = 0;\n+        putC = 0;\n+    }\n+    @Override\n+    public boolean putPiece(int r,int c){\n+        findPutRC();\n+        if(!board.putPiece(first,putR,putC))return false;\n+        countPieces++;\n+        return true;\n+    }\n+    public boolean findPutRC(){\n+        return true;\n+    }\n+}"
  }, {
    "sha" : "f439557d2d26c816fbe7540ff893ba66edcf7dc6",
    "filename" : "AndroidLabs/app/src/main/res/drawable/button_net1414080903218.xml",
    "status" : "added",
    "additions" : 20,
    "deletions" : 0,
    "changes" : 20,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/res/drawable/button_net1414080903218.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/res/drawable/button_net1414080903218.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/res/drawable/button_net1414080903218.xml?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<shape    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:shape=\"rectangle\">\n+    <!-- 填充的颜色 -->\n+    <solid android:color=\"#660F00FF\" />\n+    <!-- 设置按钮的四个角为弧形 -->\n+    <!-- android:radius 弧形的半径 -->\n+    <corners android:radius=\"15dip\" />\n+    <!--设置渐变-->\n+    <gradient\n+        android:startColor=\"#330F0F0F\"\n+        android:endColor=\"#FF0F0F0F\"\n+        android:angle=\"270\"/>\n+    <!-- padding：Button里面的文字与Button边界的间隔 -->\n+    <padding\n+        android:left=\"10dp\"\n+        android:top=\"10dp\"\n+        android:right=\"10dp\"\n+        android:bottom=\"10dp\" />\n+</shape>\n\\ No newline at end of file"
  }, {
    "sha" : "3f6fb533170652c60679afd43d91d5d3bf33c398",
    "filename" : "AndroidLabs/app/src/main/res/layout/activity_net1414080903218.xml",
    "status" : "modified",
    "additions" : 14,
    "deletions" : 2,
    "changes" : 16,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/res/layout/activity_net1414080903218.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/res/layout/activity_net1414080903218.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/res/layout/activity_net1414080903218.xml?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -7,7 +7,7 @@\n     android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n     android:paddingRight=\"@dimen/activity_horizontal_margin\"\n     android:paddingTop=\"@dimen/activity_vertical_margin\"\n-    android:background=\"@drawable/net1414080903218_bg\"\n+    android:background=\"@drawable/image_net1414080903218_bg\"\n     tools:context=\"edu.hzuapps.androidlabs.homeworks.net1414080903218.Net1414080903218Activity\">\n \n     <Button\n@@ -17,14 +17,26 @@\n         android:id=\"@+id/PtoCButton\"\n         android:layout_marginTop=\"72dp\"\n         android:layout_alignParentTop=\"true\"\n+        android:background=\"@drawable/button_net1414080903218\"\n+        android:layout_centerHorizontal=\"true\" />\n+\n+    <Button\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"网络对战\"\n+        android:id=\"@+id/PtoNButton\"\n+        android:layout_marginTop=\"172dp\"\n+        android:layout_alignParentTop=\"true\"\n+        android:background=\"@drawable/button_net1414080903218\"\n         android:layout_centerHorizontal=\"true\" />\n \n     <Button\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n         android:text=\"双人对战\"\n         android:id=\"@+id/PtoPButton\"\n-        android:layout_marginTop=\"172dp\"\n+        android:layout_marginTop=\"272dp\"\n         android:layout_alignParentTop=\"true\"\n+        android:background=\"@drawable/button_net1414080903218\"\n         android:layout_centerHorizontal=\"true\" />\n </RelativeLayout>"
  }, {
    "sha" : "1f69861e7f9a01861872e00e24f415a184ef6083",
    "filename" : "AndroidLabs/app/src/main/res/layout/activity_net1414080903218_board.xml",
    "status" : "modified",
    "additions" : 2,
    "deletions" : 2,
    "changes" : 4,
    "blob_url" : "https://github.com/hzuapps/android-labs-2017/blob/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/res/layout/activity_net1414080903218_board.xml",
    "raw_url" : "https://github.com/hzuapps/android-labs-2017/raw/ff80c820c5fcd01ef8235c8643b538c958fec1a3/AndroidLabs/app/src/main/res/layout/activity_net1414080903218_board.xml",
    "contents_url" : "https://api.github.com/repos/hzuapps/android-labs-2017/contents/AndroidLabs/app/src/main/res/layout/activity_net1414080903218_board.xml?ref=ff80c820c5fcd01ef8235c8643b538c958fec1a3",
    "patch" : "@@ -9,8 +9,8 @@\n     android:paddingTop=\"@dimen/activity_vertical_margin\"\n     tools:context=\"edu.hzuapps.androidlabs.homeworks.net1414080903218.Net1414080903218BoardActivity\">\n \n-    <edu.hzuapps.androidlabs.homeworks.net1414080903218.ChessBoard\n-        android:id=\"@+id/ChessBosrd\"\n+    <edu.hzuapps.androidlabs.homeworks.net1414080903218.ChessView\n+        android:id=\"@+id/ChessView\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\" />\n "
  } ],
  "sha" : "ff80c820c5fcd01ef8235c8643b538c958fec1a3",
  "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/ff80c820c5fcd01ef8235c8643b538c958fec1a3",
  "parents" : [ {
    "sha" : "e75c15ae0a9257aa36b1d7a5db4228acf641edf0",
    "url" : "https://api.github.com/repos/hzuapps/android-labs-2017/commits/e75c15ae0a9257aa36b1d7a5db4228acf641edf0",
    "html_url" : "https://github.com/hzuapps/android-labs-2017/commit/e75c15ae0a9257aa36b1d7a5db4228acf641edf0"
  } ]
}